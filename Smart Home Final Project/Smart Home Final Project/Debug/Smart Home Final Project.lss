
Smart Home Final Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002746  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000016c  00800060  00002746  000027da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000063f  008001cc  008001cc  00002946  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002946  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000029a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000005e8  00000000  00000000  000029e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005e6d  00000000  00000000  00002fc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001891  00000000  00000000  00008e35  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000032cc  00000000  00000000  0000a6c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000ec4  00000000  00000000  0000d994  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001bbd  00000000  00000000  0000e858  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000477d  00000000  00000000  00010415  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000590  00000000  00000000  00014b92  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__ctors_end>
       4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
       8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
       c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      1c:	0c 94 99 09 	jmp	0x1332	; 0x1332 <__vector_7>
      20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      2c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      38:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      54:	fb 06       	cpc	r15, r27
      56:	00 07       	cpc	r16, r16
      58:	05 07       	cpc	r16, r21
      5a:	0a 07       	cpc	r16, r26
      5c:	0f 07       	cpc	r16, r31
      5e:	14 07       	cpc	r17, r20
      60:	e0 06       	cpc	r14, r16
      62:	e0 06       	cpc	r14, r16
      64:	e0 06       	cpc	r14, r16
      66:	e0 06       	cpc	r14, r16
      68:	e0 06       	cpc	r14, r16
      6a:	e0 06       	cpc	r14, r16
      6c:	e0 06       	cpc	r14, r16
      6e:	e0 06       	cpc	r14, r16
      70:	e0 06       	cpc	r14, r16
      72:	e0 06       	cpc	r14, r16
      74:	e0 06       	cpc	r14, r16
      76:	e0 06       	cpc	r14, r16
      78:	1d 07       	cpc	r17, r29
      7a:	f5 06       	cpc	r15, r21
      7c:	e0 06       	cpc	r14, r16
      7e:	e0 06       	cpc	r14, r16
      80:	e0 06       	cpc	r14, r16
      82:	e0 06       	cpc	r14, r16
      84:	e0 06       	cpc	r14, r16
      86:	e0 06       	cpc	r14, r16
      88:	e0 06       	cpc	r14, r16
      8a:	e0 06       	cpc	r14, r16
      8c:	e0 06       	cpc	r14, r16
      8e:	e0 06       	cpc	r14, r16
      90:	19 07       	cpc	r17, r25
      92:	e0 06       	cpc	r14, r16
      94:	e0 06       	cpc	r14, r16
      96:	f8 06       	cpc	r15, r24
      98:	e0 06       	cpc	r14, r16
      9a:	e0 06       	cpc	r14, r16
      9c:	f2 06       	cpc	r15, r18

0000009e <__ctors_end>:
      9e:	11 24       	eor	r1, r1
      a0:	1f be       	out	0x3f, r1	; 63
      a2:	cf e5       	ldi	r28, 0x5F	; 95
      a4:	d8 e0       	ldi	r29, 0x08	; 8
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	cd bf       	out	0x3d, r28	; 61

000000aa <__do_copy_data>:
      aa:	11 e0       	ldi	r17, 0x01	; 1
      ac:	a0 e6       	ldi	r26, 0x60	; 96
      ae:	b0 e0       	ldi	r27, 0x00	; 0
      b0:	e6 e4       	ldi	r30, 0x46	; 70
      b2:	f7 e2       	ldi	r31, 0x27	; 39
      b4:	02 c0       	rjmp	.+4      	; 0xba <__do_copy_data+0x10>
      b6:	05 90       	lpm	r0, Z+
      b8:	0d 92       	st	X+, r0
      ba:	ac 3c       	cpi	r26, 0xCC	; 204
      bc:	b1 07       	cpc	r27, r17
      be:	d9 f7       	brne	.-10     	; 0xb6 <__do_copy_data+0xc>

000000c0 <__do_clear_bss>:
      c0:	28 e0       	ldi	r18, 0x08	; 8
      c2:	ac ec       	ldi	r26, 0xCC	; 204
      c4:	b1 e0       	ldi	r27, 0x01	; 1
      c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
      c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
      ca:	ab 30       	cpi	r26, 0x0B	; 11
      cc:	b2 07       	cpc	r27, r18
      ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
      d0:	0e 94 67 05 	call	0xace	; 0xace <main>
      d4:	0c 94 a1 13 	jmp	0x2742	; 0x2742 <_exit>

000000d8 <__bad_interrupt>:
      d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <ADC_vidInit>:
      dc:	9a b3       	in	r25, 0x1a	; 26
      de:	21 e0       	ldi	r18, 0x01	; 1
      e0:	30 e0       	ldi	r19, 0x00	; 0
      e2:	08 2e       	mov	r0, r24
      e4:	02 c0       	rjmp	.+4      	; 0xea <ADC_vidInit+0xe>
      e6:	22 0f       	add	r18, r18
      e8:	33 1f       	adc	r19, r19
      ea:	0a 94       	dec	r0
      ec:	e2 f7       	brpl	.-8      	; 0xe6 <ADC_vidInit+0xa>
      ee:	20 95       	com	r18
      f0:	29 23       	and	r18, r25
      f2:	2a bb       	out	0x1a, r18	; 26
      f4:	97 b1       	in	r25, 0x07	; 7
      f6:	90 7e       	andi	r25, 0xE0	; 224
      f8:	97 b9       	out	0x07, r25	; 7
      fa:	97 b1       	in	r25, 0x07	; 7
      fc:	89 2b       	or	r24, r25
      fe:	87 b9       	out	0x07, r24	; 7
     100:	86 b1       	in	r24, 0x06	; 6
     102:	88 7f       	andi	r24, 0xF8	; 248
     104:	86 b9       	out	0x06, r24	; 6
     106:	86 b1       	in	r24, 0x06	; 6
     108:	86 60       	ori	r24, 0x06	; 6
     10a:	86 b9       	out	0x06, r24	; 6
     10c:	87 b1       	in	r24, 0x07	; 7
     10e:	80 68       	ori	r24, 0x80	; 128
     110:	87 b9       	out	0x07, r24	; 7
     112:	87 b1       	in	r24, 0x07	; 7
     114:	80 64       	ori	r24, 0x40	; 64
     116:	87 b9       	out	0x07, r24	; 7
     118:	87 b1       	in	r24, 0x07	; 7
     11a:	8f 7d       	andi	r24, 0xDF	; 223
     11c:	87 b9       	out	0x07, r24	; 7
     11e:	86 b1       	in	r24, 0x06	; 6
     120:	80 68       	ori	r24, 0x80	; 128
     122:	86 b9       	out	0x06, r24	; 6
     124:	08 95       	ret

00000126 <ADC_u16Read>:
     126:	86 b1       	in	r24, 0x06	; 6
     128:	80 64       	ori	r24, 0x40	; 64
     12a:	86 b9       	out	0x06, r24	; 6
     12c:	34 9b       	sbis	0x06, 4	; 6
     12e:	fe cf       	rjmp	.-4      	; 0x12c <ADC_u16Read+0x6>
     130:	86 b1       	in	r24, 0x06	; 6
     132:	80 61       	ori	r24, 0x10	; 16
     134:	86 b9       	out	0x06, r24	; 6
     136:	24 b1       	in	r18, 0x04	; 4
     138:	85 b1       	in	r24, 0x05	; 5
     13a:	90 e0       	ldi	r25, 0x00	; 0
     13c:	98 2f       	mov	r25, r24
     13e:	88 27       	eor	r24, r24
     140:	82 2b       	or	r24, r18
     142:	08 95       	ret

00000144 <DIO_vidSetPinMode>:
     144:	82 30       	cpi	r24, 0x02	; 2
     146:	19 f1       	breq	.+70     	; 0x18e <DIO_vidSetPinMode+0x4a>
     148:	18 f4       	brcc	.+6      	; 0x150 <DIO_vidSetPinMode+0xc>
     14a:	81 30       	cpi	r24, 0x01	; 1
     14c:	39 f0       	breq	.+14     	; 0x15c <DIO_vidSetPinMode+0x18>
     14e:	08 95       	ret
     150:	83 30       	cpi	r24, 0x03	; 3
     152:	b1 f1       	breq	.+108    	; 0x1c0 <DIO_vidSetPinMode+0x7c>
     154:	84 30       	cpi	r24, 0x04	; 4
     156:	09 f4       	brne	.+2      	; 0x15a <DIO_vidSetPinMode+0x16>
     158:	4c c0       	rjmp	.+152    	; 0x1f2 <DIO_vidSetPinMode+0xae>
     15a:	08 95       	ret
     15c:	41 30       	cpi	r20, 0x01	; 1
     15e:	59 f4       	brne	.+22     	; 0x176 <DIO_vidSetPinMode+0x32>
     160:	2a b3       	in	r18, 0x1a	; 26
     162:	81 e0       	ldi	r24, 0x01	; 1
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	02 c0       	rjmp	.+4      	; 0x16c <DIO_vidSetPinMode+0x28>
     168:	88 0f       	add	r24, r24
     16a:	99 1f       	adc	r25, r25
     16c:	6a 95       	dec	r22
     16e:	e2 f7       	brpl	.-8      	; 0x168 <DIO_vidSetPinMode+0x24>
     170:	82 2b       	or	r24, r18
     172:	8a bb       	out	0x1a, r24	; 26
     174:	08 95       	ret
     176:	2a b3       	in	r18, 0x1a	; 26
     178:	81 e0       	ldi	r24, 0x01	; 1
     17a:	90 e0       	ldi	r25, 0x00	; 0
     17c:	02 c0       	rjmp	.+4      	; 0x182 <DIO_vidSetPinMode+0x3e>
     17e:	88 0f       	add	r24, r24
     180:	99 1f       	adc	r25, r25
     182:	6a 95       	dec	r22
     184:	e2 f7       	brpl	.-8      	; 0x17e <DIO_vidSetPinMode+0x3a>
     186:	80 95       	com	r24
     188:	82 23       	and	r24, r18
     18a:	8a bb       	out	0x1a, r24	; 26
     18c:	08 95       	ret
     18e:	41 30       	cpi	r20, 0x01	; 1
     190:	59 f4       	brne	.+22     	; 0x1a8 <DIO_vidSetPinMode+0x64>
     192:	27 b3       	in	r18, 0x17	; 23
     194:	81 e0       	ldi	r24, 0x01	; 1
     196:	90 e0       	ldi	r25, 0x00	; 0
     198:	02 c0       	rjmp	.+4      	; 0x19e <DIO_vidSetPinMode+0x5a>
     19a:	88 0f       	add	r24, r24
     19c:	99 1f       	adc	r25, r25
     19e:	6a 95       	dec	r22
     1a0:	e2 f7       	brpl	.-8      	; 0x19a <DIO_vidSetPinMode+0x56>
     1a2:	82 2b       	or	r24, r18
     1a4:	87 bb       	out	0x17, r24	; 23
     1a6:	08 95       	ret
     1a8:	27 b3       	in	r18, 0x17	; 23
     1aa:	81 e0       	ldi	r24, 0x01	; 1
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <DIO_vidSetPinMode+0x70>
     1b0:	88 0f       	add	r24, r24
     1b2:	99 1f       	adc	r25, r25
     1b4:	6a 95       	dec	r22
     1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <DIO_vidSetPinMode+0x6c>
     1b8:	80 95       	com	r24
     1ba:	82 23       	and	r24, r18
     1bc:	87 bb       	out	0x17, r24	; 23
     1be:	08 95       	ret
     1c0:	41 30       	cpi	r20, 0x01	; 1
     1c2:	59 f4       	brne	.+22     	; 0x1da <DIO_vidSetPinMode+0x96>
     1c4:	24 b3       	in	r18, 0x14	; 20
     1c6:	81 e0       	ldi	r24, 0x01	; 1
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <DIO_vidSetPinMode+0x8c>
     1cc:	88 0f       	add	r24, r24
     1ce:	99 1f       	adc	r25, r25
     1d0:	6a 95       	dec	r22
     1d2:	e2 f7       	brpl	.-8      	; 0x1cc <DIO_vidSetPinMode+0x88>
     1d4:	82 2b       	or	r24, r18
     1d6:	84 bb       	out	0x14, r24	; 20
     1d8:	08 95       	ret
     1da:	24 b3       	in	r18, 0x14	; 20
     1dc:	81 e0       	ldi	r24, 0x01	; 1
     1de:	90 e0       	ldi	r25, 0x00	; 0
     1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <DIO_vidSetPinMode+0xa2>
     1e2:	88 0f       	add	r24, r24
     1e4:	99 1f       	adc	r25, r25
     1e6:	6a 95       	dec	r22
     1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <DIO_vidSetPinMode+0x9e>
     1ea:	80 95       	com	r24
     1ec:	82 23       	and	r24, r18
     1ee:	84 bb       	out	0x14, r24	; 20
     1f0:	08 95       	ret
     1f2:	41 30       	cpi	r20, 0x01	; 1
     1f4:	59 f4       	brne	.+22     	; 0x20c <DIO_vidSetPinMode+0xc8>
     1f6:	21 b3       	in	r18, 0x11	; 17
     1f8:	81 e0       	ldi	r24, 0x01	; 1
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	02 c0       	rjmp	.+4      	; 0x202 <DIO_vidSetPinMode+0xbe>
     1fe:	88 0f       	add	r24, r24
     200:	99 1f       	adc	r25, r25
     202:	6a 95       	dec	r22
     204:	e2 f7       	brpl	.-8      	; 0x1fe <DIO_vidSetPinMode+0xba>
     206:	82 2b       	or	r24, r18
     208:	81 bb       	out	0x11, r24	; 17
     20a:	08 95       	ret
     20c:	21 b3       	in	r18, 0x11	; 17
     20e:	81 e0       	ldi	r24, 0x01	; 1
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	02 c0       	rjmp	.+4      	; 0x218 <DIO_vidSetPinMode+0xd4>
     214:	88 0f       	add	r24, r24
     216:	99 1f       	adc	r25, r25
     218:	6a 95       	dec	r22
     21a:	e2 f7       	brpl	.-8      	; 0x214 <DIO_vidSetPinMode+0xd0>
     21c:	80 95       	com	r24
     21e:	82 23       	and	r24, r18
     220:	81 bb       	out	0x11, r24	; 17
     222:	08 95       	ret

00000224 <DIO_vidWritePin>:
     224:	82 30       	cpi	r24, 0x02	; 2
     226:	19 f1       	breq	.+70     	; 0x26e <DIO_vidWritePin+0x4a>
     228:	18 f4       	brcc	.+6      	; 0x230 <DIO_vidWritePin+0xc>
     22a:	81 30       	cpi	r24, 0x01	; 1
     22c:	39 f0       	breq	.+14     	; 0x23c <DIO_vidWritePin+0x18>
     22e:	08 95       	ret
     230:	83 30       	cpi	r24, 0x03	; 3
     232:	b1 f1       	breq	.+108    	; 0x2a0 <DIO_vidWritePin+0x7c>
     234:	84 30       	cpi	r24, 0x04	; 4
     236:	09 f4       	brne	.+2      	; 0x23a <DIO_vidWritePin+0x16>
     238:	4c c0       	rjmp	.+152    	; 0x2d2 <DIO_vidWritePin+0xae>
     23a:	08 95       	ret
     23c:	41 30       	cpi	r20, 0x01	; 1
     23e:	59 f4       	brne	.+22     	; 0x256 <DIO_vidWritePin+0x32>
     240:	2b b3       	in	r18, 0x1b	; 27
     242:	81 e0       	ldi	r24, 0x01	; 1
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	02 c0       	rjmp	.+4      	; 0x24c <DIO_vidWritePin+0x28>
     248:	88 0f       	add	r24, r24
     24a:	99 1f       	adc	r25, r25
     24c:	6a 95       	dec	r22
     24e:	e2 f7       	brpl	.-8      	; 0x248 <DIO_vidWritePin+0x24>
     250:	82 2b       	or	r24, r18
     252:	8b bb       	out	0x1b, r24	; 27
     254:	08 95       	ret
     256:	2b b3       	in	r18, 0x1b	; 27
     258:	81 e0       	ldi	r24, 0x01	; 1
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_vidWritePin+0x3e>
     25e:	88 0f       	add	r24, r24
     260:	99 1f       	adc	r25, r25
     262:	6a 95       	dec	r22
     264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_vidWritePin+0x3a>
     266:	80 95       	com	r24
     268:	82 23       	and	r24, r18
     26a:	8b bb       	out	0x1b, r24	; 27
     26c:	08 95       	ret
     26e:	41 30       	cpi	r20, 0x01	; 1
     270:	59 f4       	brne	.+22     	; 0x288 <DIO_vidWritePin+0x64>
     272:	28 b3       	in	r18, 0x18	; 24
     274:	81 e0       	ldi	r24, 0x01	; 1
     276:	90 e0       	ldi	r25, 0x00	; 0
     278:	02 c0       	rjmp	.+4      	; 0x27e <DIO_vidWritePin+0x5a>
     27a:	88 0f       	add	r24, r24
     27c:	99 1f       	adc	r25, r25
     27e:	6a 95       	dec	r22
     280:	e2 f7       	brpl	.-8      	; 0x27a <DIO_vidWritePin+0x56>
     282:	82 2b       	or	r24, r18
     284:	88 bb       	out	0x18, r24	; 24
     286:	08 95       	ret
     288:	28 b3       	in	r18, 0x18	; 24
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	02 c0       	rjmp	.+4      	; 0x294 <DIO_vidWritePin+0x70>
     290:	88 0f       	add	r24, r24
     292:	99 1f       	adc	r25, r25
     294:	6a 95       	dec	r22
     296:	e2 f7       	brpl	.-8      	; 0x290 <DIO_vidWritePin+0x6c>
     298:	80 95       	com	r24
     29a:	82 23       	and	r24, r18
     29c:	88 bb       	out	0x18, r24	; 24
     29e:	08 95       	ret
     2a0:	41 30       	cpi	r20, 0x01	; 1
     2a2:	59 f4       	brne	.+22     	; 0x2ba <DIO_vidWritePin+0x96>
     2a4:	25 b3       	in	r18, 0x15	; 21
     2a6:	81 e0       	ldi	r24, 0x01	; 1
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <DIO_vidWritePin+0x8c>
     2ac:	88 0f       	add	r24, r24
     2ae:	99 1f       	adc	r25, r25
     2b0:	6a 95       	dec	r22
     2b2:	e2 f7       	brpl	.-8      	; 0x2ac <DIO_vidWritePin+0x88>
     2b4:	82 2b       	or	r24, r18
     2b6:	85 bb       	out	0x15, r24	; 21
     2b8:	08 95       	ret
     2ba:	25 b3       	in	r18, 0x15	; 21
     2bc:	81 e0       	ldi	r24, 0x01	; 1
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <DIO_vidWritePin+0xa2>
     2c2:	88 0f       	add	r24, r24
     2c4:	99 1f       	adc	r25, r25
     2c6:	6a 95       	dec	r22
     2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <DIO_vidWritePin+0x9e>
     2ca:	80 95       	com	r24
     2cc:	82 23       	and	r24, r18
     2ce:	85 bb       	out	0x15, r24	; 21
     2d0:	08 95       	ret
     2d2:	41 30       	cpi	r20, 0x01	; 1
     2d4:	59 f4       	brne	.+22     	; 0x2ec <DIO_vidWritePin+0xc8>
     2d6:	22 b3       	in	r18, 0x12	; 18
     2d8:	81 e0       	ldi	r24, 0x01	; 1
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	02 c0       	rjmp	.+4      	; 0x2e2 <DIO_vidWritePin+0xbe>
     2de:	88 0f       	add	r24, r24
     2e0:	99 1f       	adc	r25, r25
     2e2:	6a 95       	dec	r22
     2e4:	e2 f7       	brpl	.-8      	; 0x2de <DIO_vidWritePin+0xba>
     2e6:	82 2b       	or	r24, r18
     2e8:	82 bb       	out	0x12, r24	; 18
     2ea:	08 95       	ret
     2ec:	22 b3       	in	r18, 0x12	; 18
     2ee:	81 e0       	ldi	r24, 0x01	; 1
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <DIO_vidWritePin+0xd4>
     2f4:	88 0f       	add	r24, r24
     2f6:	99 1f       	adc	r25, r25
     2f8:	6a 95       	dec	r22
     2fa:	e2 f7       	brpl	.-8      	; 0x2f4 <DIO_vidWritePin+0xd0>
     2fc:	80 95       	com	r24
     2fe:	82 23       	and	r24, r18
     300:	82 bb       	out	0x12, r24	; 18
     302:	08 95       	ret

00000304 <DIO_enuReadPin>:
     304:	82 30       	cpi	r24, 0x02	; 2
     306:	99 f0       	breq	.+38     	; 0x32e <DIO_enuReadPin+0x2a>
     308:	18 f4       	brcc	.+6      	; 0x310 <DIO_enuReadPin+0xc>
     30a:	81 30       	cpi	r24, 0x01	; 1
     30c:	31 f0       	breq	.+12     	; 0x31a <DIO_enuReadPin+0x16>
     30e:	2c c0       	rjmp	.+88     	; 0x368 <DIO_enuReadPin+0x64>
     310:	83 30       	cpi	r24, 0x03	; 3
     312:	b9 f0       	breq	.+46     	; 0x342 <DIO_enuReadPin+0x3e>
     314:	84 30       	cpi	r24, 0x04	; 4
     316:	f9 f0       	breq	.+62     	; 0x356 <DIO_enuReadPin+0x52>
     318:	27 c0       	rjmp	.+78     	; 0x368 <DIO_enuReadPin+0x64>
     31a:	89 b3       	in	r24, 0x19	; 25
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	02 c0       	rjmp	.+4      	; 0x324 <DIO_enuReadPin+0x20>
     320:	95 95       	asr	r25
     322:	87 95       	ror	r24
     324:	6a 95       	dec	r22
     326:	e2 f7       	brpl	.-8      	; 0x320 <DIO_enuReadPin+0x1c>
     328:	98 2f       	mov	r25, r24
     32a:	91 70       	andi	r25, 0x01	; 1
     32c:	1d c0       	rjmp	.+58     	; 0x368 <DIO_enuReadPin+0x64>
     32e:	86 b3       	in	r24, 0x16	; 22
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	02 c0       	rjmp	.+4      	; 0x338 <DIO_enuReadPin+0x34>
     334:	95 95       	asr	r25
     336:	87 95       	ror	r24
     338:	6a 95       	dec	r22
     33a:	e2 f7       	brpl	.-8      	; 0x334 <DIO_enuReadPin+0x30>
     33c:	98 2f       	mov	r25, r24
     33e:	91 70       	andi	r25, 0x01	; 1
     340:	13 c0       	rjmp	.+38     	; 0x368 <DIO_enuReadPin+0x64>
     342:	83 b3       	in	r24, 0x13	; 19
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	02 c0       	rjmp	.+4      	; 0x34c <DIO_enuReadPin+0x48>
     348:	95 95       	asr	r25
     34a:	87 95       	ror	r24
     34c:	6a 95       	dec	r22
     34e:	e2 f7       	brpl	.-8      	; 0x348 <DIO_enuReadPin+0x44>
     350:	98 2f       	mov	r25, r24
     352:	91 70       	andi	r25, 0x01	; 1
     354:	09 c0       	rjmp	.+18     	; 0x368 <DIO_enuReadPin+0x64>
     356:	80 b3       	in	r24, 0x10	; 16
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	02 c0       	rjmp	.+4      	; 0x360 <DIO_enuReadPin+0x5c>
     35c:	95 95       	asr	r25
     35e:	87 95       	ror	r24
     360:	6a 95       	dec	r22
     362:	e2 f7       	brpl	.-8      	; 0x35c <DIO_enuReadPin+0x58>
     364:	98 2f       	mov	r25, r24
     366:	91 70       	andi	r25, 0x01	; 1
     368:	89 2f       	mov	r24, r25
     36a:	08 95       	ret

0000036c <DIO_vidSetPortMode>:
     36c:	82 30       	cpi	r24, 0x02	; 2
     36e:	a1 f0       	breq	.+40     	; 0x398 <DIO_vidSetPortMode+0x2c>
     370:	18 f4       	brcc	.+6      	; 0x378 <DIO_vidSetPortMode+0xc>
     372:	81 30       	cpi	r24, 0x01	; 1
     374:	31 f0       	breq	.+12     	; 0x382 <DIO_vidSetPortMode+0x16>
     376:	08 95       	ret
     378:	83 30       	cpi	r24, 0x03	; 3
     37a:	c9 f0       	breq	.+50     	; 0x3ae <DIO_vidSetPortMode+0x42>
     37c:	84 30       	cpi	r24, 0x04	; 4
     37e:	11 f1       	breq	.+68     	; 0x3c4 <DIO_vidSetPortMode+0x58>
     380:	08 95       	ret
     382:	61 30       	cpi	r22, 0x01	; 1
     384:	19 f4       	brne	.+6      	; 0x38c <DIO_vidSetPortMode+0x20>
     386:	8f ef       	ldi	r24, 0xFF	; 255
     388:	8a bb       	out	0x1a, r24	; 26
     38a:	08 95       	ret
     38c:	61 11       	cpse	r22, r1
     38e:	02 c0       	rjmp	.+4      	; 0x394 <DIO_vidSetPortMode+0x28>
     390:	1a ba       	out	0x1a, r1	; 26
     392:	08 95       	ret
     394:	6a bb       	out	0x1a, r22	; 26
     396:	08 95       	ret
     398:	61 30       	cpi	r22, 0x01	; 1
     39a:	19 f4       	brne	.+6      	; 0x3a2 <DIO_vidSetPortMode+0x36>
     39c:	8f ef       	ldi	r24, 0xFF	; 255
     39e:	87 bb       	out	0x17, r24	; 23
     3a0:	08 95       	ret
     3a2:	61 11       	cpse	r22, r1
     3a4:	02 c0       	rjmp	.+4      	; 0x3aa <DIO_vidSetPortMode+0x3e>
     3a6:	17 ba       	out	0x17, r1	; 23
     3a8:	08 95       	ret
     3aa:	67 bb       	out	0x17, r22	; 23
     3ac:	08 95       	ret
     3ae:	61 30       	cpi	r22, 0x01	; 1
     3b0:	19 f4       	brne	.+6      	; 0x3b8 <DIO_vidSetPortMode+0x4c>
     3b2:	8f ef       	ldi	r24, 0xFF	; 255
     3b4:	84 bb       	out	0x14, r24	; 20
     3b6:	08 95       	ret
     3b8:	61 11       	cpse	r22, r1
     3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <DIO_vidSetPortMode+0x54>
     3bc:	14 ba       	out	0x14, r1	; 20
     3be:	08 95       	ret
     3c0:	64 bb       	out	0x14, r22	; 20
     3c2:	08 95       	ret
     3c4:	61 30       	cpi	r22, 0x01	; 1
     3c6:	19 f4       	brne	.+6      	; 0x3ce <DIO_vidSetPortMode+0x62>
     3c8:	8f ef       	ldi	r24, 0xFF	; 255
     3ca:	81 bb       	out	0x11, r24	; 17
     3cc:	08 95       	ret
     3ce:	61 11       	cpse	r22, r1
     3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <DIO_vidSetPortMode+0x6a>
     3d2:	11 ba       	out	0x11, r1	; 17
     3d4:	08 95       	ret
     3d6:	61 bb       	out	0x11, r22	; 17
     3d8:	08 95       	ret

000003da <DIO_vidWritePort>:
     3da:	82 30       	cpi	r24, 0x02	; 2
     3dc:	a1 f0       	breq	.+40     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     3de:	18 f4       	brcc	.+6      	; 0x3e6 <DIO_vidWritePort+0xc>
     3e0:	81 30       	cpi	r24, 0x01	; 1
     3e2:	31 f0       	breq	.+12     	; 0x3f0 <DIO_vidWritePort+0x16>
     3e4:	08 95       	ret
     3e6:	83 30       	cpi	r24, 0x03	; 3
     3e8:	c9 f0       	breq	.+50     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
     3ea:	84 30       	cpi	r24, 0x04	; 4
     3ec:	11 f1       	breq	.+68     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     3ee:	08 95       	ret
     3f0:	61 30       	cpi	r22, 0x01	; 1
     3f2:	19 f4       	brne	.+6      	; 0x3fa <DIO_vidWritePort+0x20>
     3f4:	8f ef       	ldi	r24, 0xFF	; 255
     3f6:	8b bb       	out	0x1b, r24	; 27
     3f8:	08 95       	ret
     3fa:	61 11       	cpse	r22, r1
     3fc:	02 c0       	rjmp	.+4      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
     3fe:	1b ba       	out	0x1b, r1	; 27
     400:	08 95       	ret
     402:	6b bb       	out	0x1b, r22	; 27
     404:	08 95       	ret
     406:	61 30       	cpi	r22, 0x01	; 1
     408:	19 f4       	brne	.+6      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
     40a:	8f ef       	ldi	r24, 0xFF	; 255
     40c:	88 bb       	out	0x18, r24	; 24
     40e:	08 95       	ret
     410:	61 11       	cpse	r22, r1
     412:	02 c0       	rjmp	.+4      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
     414:	18 ba       	out	0x18, r1	; 24
     416:	08 95       	ret
     418:	68 bb       	out	0x18, r22	; 24
     41a:	08 95       	ret
     41c:	61 30       	cpi	r22, 0x01	; 1
     41e:	19 f4       	brne	.+6      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
     420:	8f ef       	ldi	r24, 0xFF	; 255
     422:	85 bb       	out	0x15, r24	; 21
     424:	08 95       	ret
     426:	61 11       	cpse	r22, r1
     428:	02 c0       	rjmp	.+4      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     42a:	15 ba       	out	0x15, r1	; 21
     42c:	08 95       	ret
     42e:	65 bb       	out	0x15, r22	; 21
     430:	08 95       	ret
     432:	61 30       	cpi	r22, 0x01	; 1
     434:	19 f4       	brne	.+6      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
     436:	8f ef       	ldi	r24, 0xFF	; 255
     438:	82 bb       	out	0x12, r24	; 18
     43a:	08 95       	ret
     43c:	61 11       	cpse	r22, r1
     43e:	02 c0       	rjmp	.+4      	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
     440:	12 ba       	out	0x12, r1	; 18
     442:	08 95       	ret
     444:	62 bb       	out	0x12, r22	; 18
     446:	08 95       	ret

00000448 <DIO_vidSetNibbleMode>:
     448:	82 30       	cpi	r24, 0x02	; 2
     44a:	c9 f0       	breq	.+50     	; 0x47e <DIO_vidSetNibbleMode+0x36>
     44c:	18 f4       	brcc	.+6      	; 0x454 <DIO_vidSetNibbleMode+0xc>
     44e:	81 30       	cpi	r24, 0x01	; 1
     450:	31 f0       	breq	.+12     	; 0x45e <DIO_vidSetNibbleMode+0x16>
     452:	08 95       	ret
     454:	83 30       	cpi	r24, 0x03	; 3
     456:	19 f1       	breq	.+70     	; 0x49e <DIO_vidSetNibbleMode+0x56>
     458:	84 30       	cpi	r24, 0x04	; 4
     45a:	89 f1       	breq	.+98     	; 0x4be <DIO_vidSetNibbleMode+0x76>
     45c:	08 95       	ret
     45e:	61 30       	cpi	r22, 0x01	; 1
     460:	39 f4       	brne	.+14     	; 0x470 <DIO_vidSetNibbleMode+0x28>
     462:	6a b3       	in	r22, 0x1a	; 26
     464:	40 7f       	andi	r20, 0xF0	; 240
     466:	6f 70       	andi	r22, 0x0F	; 15
     468:	64 2b       	or	r22, r20
     46a:	0e 94 b6 01 	call	0x36c	; 0x36c <DIO_vidSetPortMode>
     46e:	08 95       	ret
     470:	6a b3       	in	r22, 0x1a	; 26
     472:	4f 70       	andi	r20, 0x0F	; 15
     474:	60 7f       	andi	r22, 0xF0	; 240
     476:	64 2b       	or	r22, r20
     478:	0e 94 b6 01 	call	0x36c	; 0x36c <DIO_vidSetPortMode>
     47c:	08 95       	ret
     47e:	61 30       	cpi	r22, 0x01	; 1
     480:	39 f4       	brne	.+14     	; 0x490 <DIO_vidSetNibbleMode+0x48>
     482:	67 b3       	in	r22, 0x17	; 23
     484:	40 7f       	andi	r20, 0xF0	; 240
     486:	6f 70       	andi	r22, 0x0F	; 15
     488:	64 2b       	or	r22, r20
     48a:	0e 94 b6 01 	call	0x36c	; 0x36c <DIO_vidSetPortMode>
     48e:	08 95       	ret
     490:	67 b3       	in	r22, 0x17	; 23
     492:	4f 70       	andi	r20, 0x0F	; 15
     494:	60 7f       	andi	r22, 0xF0	; 240
     496:	64 2b       	or	r22, r20
     498:	0e 94 b6 01 	call	0x36c	; 0x36c <DIO_vidSetPortMode>
     49c:	08 95       	ret
     49e:	61 30       	cpi	r22, 0x01	; 1
     4a0:	39 f4       	brne	.+14     	; 0x4b0 <DIO_vidSetNibbleMode+0x68>
     4a2:	64 b3       	in	r22, 0x14	; 20
     4a4:	40 7f       	andi	r20, 0xF0	; 240
     4a6:	6f 70       	andi	r22, 0x0F	; 15
     4a8:	64 2b       	or	r22, r20
     4aa:	0e 94 b6 01 	call	0x36c	; 0x36c <DIO_vidSetPortMode>
     4ae:	08 95       	ret
     4b0:	64 b3       	in	r22, 0x14	; 20
     4b2:	4f 70       	andi	r20, 0x0F	; 15
     4b4:	60 7f       	andi	r22, 0xF0	; 240
     4b6:	64 2b       	or	r22, r20
     4b8:	0e 94 b6 01 	call	0x36c	; 0x36c <DIO_vidSetPortMode>
     4bc:	08 95       	ret
     4be:	61 30       	cpi	r22, 0x01	; 1
     4c0:	39 f4       	brne	.+14     	; 0x4d0 <DIO_vidSetNibbleMode+0x88>
     4c2:	61 b3       	in	r22, 0x11	; 17
     4c4:	40 7f       	andi	r20, 0xF0	; 240
     4c6:	6f 70       	andi	r22, 0x0F	; 15
     4c8:	64 2b       	or	r22, r20
     4ca:	0e 94 b6 01 	call	0x36c	; 0x36c <DIO_vidSetPortMode>
     4ce:	08 95       	ret
     4d0:	61 b3       	in	r22, 0x11	; 17
     4d2:	4f 70       	andi	r20, 0x0F	; 15
     4d4:	60 7f       	andi	r22, 0xF0	; 240
     4d6:	64 2b       	or	r22, r20
     4d8:	0e 94 b6 01 	call	0x36c	; 0x36c <DIO_vidSetPortMode>
     4dc:	08 95       	ret

000004de <DIO_vidWriteNibble>:
     4de:	82 30       	cpi	r24, 0x02	; 2
     4e0:	c9 f0       	breq	.+50     	; 0x514 <DIO_vidWriteNibble+0x36>
     4e2:	18 f4       	brcc	.+6      	; 0x4ea <DIO_vidWriteNibble+0xc>
     4e4:	81 30       	cpi	r24, 0x01	; 1
     4e6:	31 f0       	breq	.+12     	; 0x4f4 <DIO_vidWriteNibble+0x16>
     4e8:	08 95       	ret
     4ea:	83 30       	cpi	r24, 0x03	; 3
     4ec:	19 f1       	breq	.+70     	; 0x534 <DIO_vidWriteNibble+0x56>
     4ee:	84 30       	cpi	r24, 0x04	; 4
     4f0:	89 f1       	breq	.+98     	; 0x554 <DIO_vidWriteNibble+0x76>
     4f2:	08 95       	ret
     4f4:	61 30       	cpi	r22, 0x01	; 1
     4f6:	39 f4       	brne	.+14     	; 0x506 <DIO_vidWriteNibble+0x28>
     4f8:	6b b3       	in	r22, 0x1b	; 27
     4fa:	40 7f       	andi	r20, 0xF0	; 240
     4fc:	6f 70       	andi	r22, 0x0F	; 15
     4fe:	64 2b       	or	r22, r20
     500:	0e 94 ed 01 	call	0x3da	; 0x3da <DIO_vidWritePort>
     504:	08 95       	ret
     506:	6b b3       	in	r22, 0x1b	; 27
     508:	4f 70       	andi	r20, 0x0F	; 15
     50a:	60 7f       	andi	r22, 0xF0	; 240
     50c:	64 2b       	or	r22, r20
     50e:	0e 94 ed 01 	call	0x3da	; 0x3da <DIO_vidWritePort>
     512:	08 95       	ret
     514:	61 30       	cpi	r22, 0x01	; 1
     516:	39 f4       	brne	.+14     	; 0x526 <DIO_vidWriteNibble+0x48>
     518:	68 b3       	in	r22, 0x18	; 24
     51a:	40 7f       	andi	r20, 0xF0	; 240
     51c:	6f 70       	andi	r22, 0x0F	; 15
     51e:	64 2b       	or	r22, r20
     520:	0e 94 ed 01 	call	0x3da	; 0x3da <DIO_vidWritePort>
     524:	08 95       	ret
     526:	68 b3       	in	r22, 0x18	; 24
     528:	4f 70       	andi	r20, 0x0F	; 15
     52a:	60 7f       	andi	r22, 0xF0	; 240
     52c:	64 2b       	or	r22, r20
     52e:	0e 94 ed 01 	call	0x3da	; 0x3da <DIO_vidWritePort>
     532:	08 95       	ret
     534:	61 30       	cpi	r22, 0x01	; 1
     536:	39 f4       	brne	.+14     	; 0x546 <DIO_vidWriteNibble+0x68>
     538:	65 b3       	in	r22, 0x15	; 21
     53a:	40 7f       	andi	r20, 0xF0	; 240
     53c:	6f 70       	andi	r22, 0x0F	; 15
     53e:	64 2b       	or	r22, r20
     540:	0e 94 ed 01 	call	0x3da	; 0x3da <DIO_vidWritePort>
     544:	08 95       	ret
     546:	65 b3       	in	r22, 0x15	; 21
     548:	4f 70       	andi	r20, 0x0F	; 15
     54a:	60 7f       	andi	r22, 0xF0	; 240
     54c:	64 2b       	or	r22, r20
     54e:	0e 94 ed 01 	call	0x3da	; 0x3da <DIO_vidWritePort>
     552:	08 95       	ret
     554:	61 30       	cpi	r22, 0x01	; 1
     556:	39 f4       	brne	.+14     	; 0x566 <DIO_vidWriteNibble+0x88>
     558:	62 b3       	in	r22, 0x12	; 18
     55a:	40 7f       	andi	r20, 0xF0	; 240
     55c:	6f 70       	andi	r22, 0x0F	; 15
     55e:	64 2b       	or	r22, r20
     560:	0e 94 ed 01 	call	0x3da	; 0x3da <DIO_vidWritePort>
     564:	08 95       	ret
     566:	62 b3       	in	r22, 0x12	; 18
     568:	4f 70       	andi	r20, 0x0F	; 15
     56a:	60 7f       	andi	r22, 0xF0	; 240
     56c:	64 2b       	or	r22, r20
     56e:	0e 94 ed 01 	call	0x3da	; 0x3da <DIO_vidWritePort>
     572:	08 95       	ret

00000574 <EEPROM_vidWrite>:
     574:	93 70       	andi	r25, 0x03	; 3
     576:	8e bb       	out	0x1e, r24	; 30
     578:	1f ba       	out	0x1f, r1	; 31
     57a:	6d bb       	out	0x1d, r22	; 29
     57c:	8c b3       	in	r24, 0x1c	; 28
     57e:	84 60       	ori	r24, 0x04	; 4
     580:	8c bb       	out	0x1c, r24	; 28
     582:	8c b3       	in	r24, 0x1c	; 28
     584:	82 60       	ori	r24, 0x02	; 2
     586:	8c bb       	out	0x1c, r24	; 28
     588:	e1 99       	sbic	0x1c, 1	; 28
     58a:	fe cf       	rjmp	.-4      	; 0x588 <EEPROM_vidWrite+0x14>
     58c:	08 95       	ret

0000058e <EEPROM_u8Read>:
     58e:	93 70       	andi	r25, 0x03	; 3
     590:	8e bb       	out	0x1e, r24	; 30
     592:	1f ba       	out	0x1f, r1	; 31
     594:	8c b3       	in	r24, 0x1c	; 28
     596:	81 60       	ori	r24, 0x01	; 1
     598:	8c bb       	out	0x1c, r24	; 28
     59a:	8d b3       	in	r24, 0x1d	; 29
     59c:	08 95       	ret

0000059e <LCD_vidSendEnPulse>:
     59e:	41 e0       	ldi	r20, 0x01	; 1
     5a0:	63 e0       	ldi	r22, 0x03	; 3
     5a2:	81 e0       	ldi	r24, 0x01	; 1
     5a4:	0e 94 12 01 	call	0x224	; 0x224 <DIO_vidWritePin>
     5a8:	8f e1       	ldi	r24, 0x1F	; 31
     5aa:	9e e4       	ldi	r25, 0x4E	; 78
     5ac:	01 97       	sbiw	r24, 0x01	; 1
     5ae:	f1 f7       	brne	.-4      	; 0x5ac <LCD_vidSendEnPulse+0xe>
     5b0:	00 c0       	rjmp	.+0      	; 0x5b2 <LCD_vidSendEnPulse+0x14>
     5b2:	00 00       	nop
     5b4:	40 e0       	ldi	r20, 0x00	; 0
     5b6:	63 e0       	ldi	r22, 0x03	; 3
     5b8:	81 e0       	ldi	r24, 0x01	; 1
     5ba:	0e 94 12 01 	call	0x224	; 0x224 <DIO_vidWritePin>
     5be:	08 95       	ret

000005c0 <LCD_vidSendCmd>:
     5c0:	cf 93       	push	r28
     5c2:	c8 2f       	mov	r28, r24
     5c4:	40 e0       	ldi	r20, 0x00	; 0
     5c6:	61 e0       	ldi	r22, 0x01	; 1
     5c8:	81 e0       	ldi	r24, 0x01	; 1
     5ca:	0e 94 12 01 	call	0x224	; 0x224 <DIO_vidWritePin>
     5ce:	4c 2f       	mov	r20, r28
     5d0:	61 e0       	ldi	r22, 0x01	; 1
     5d2:	81 e0       	ldi	r24, 0x01	; 1
     5d4:	0e 94 6f 02 	call	0x4de	; 0x4de <DIO_vidWriteNibble>
     5d8:	0e 94 cf 02 	call	0x59e	; 0x59e <LCD_vidSendEnPulse>
     5dc:	4c 2f       	mov	r20, r28
     5de:	42 95       	swap	r20
     5e0:	40 7f       	andi	r20, 0xF0	; 240
     5e2:	61 e0       	ldi	r22, 0x01	; 1
     5e4:	81 e0       	ldi	r24, 0x01	; 1
     5e6:	0e 94 6f 02 	call	0x4de	; 0x4de <DIO_vidWriteNibble>
     5ea:	63 e0       	ldi	r22, 0x03	; 3
     5ec:	70 e0       	ldi	r23, 0x00	; 0
     5ee:	81 e0       	ldi	r24, 0x01	; 1
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	0e 94 cf 02 	call	0x59e	; 0x59e <LCD_vidSendEnPulse>
     5f6:	cf 91       	pop	r28
     5f8:	08 95       	ret

000005fa <LCD_vidInit>:
     5fa:	2f ef       	ldi	r18, 0xFF	; 255
     5fc:	81 ee       	ldi	r24, 0xE1	; 225
     5fe:	94 e0       	ldi	r25, 0x04	; 4
     600:	21 50       	subi	r18, 0x01	; 1
     602:	80 40       	sbci	r24, 0x00	; 0
     604:	90 40       	sbci	r25, 0x00	; 0
     606:	e1 f7       	brne	.-8      	; 0x600 <LCD_vidInit+0x6>
     608:	00 c0       	rjmp	.+0      	; 0x60a <LCD_vidInit+0x10>
     60a:	00 00       	nop
     60c:	41 e0       	ldi	r20, 0x01	; 1
     60e:	61 e0       	ldi	r22, 0x01	; 1
     610:	81 e0       	ldi	r24, 0x01	; 1
     612:	0e 94 24 02 	call	0x448	; 0x448 <DIO_vidSetNibbleMode>
     616:	41 e0       	ldi	r20, 0x01	; 1
     618:	61 e0       	ldi	r22, 0x01	; 1
     61a:	81 e0       	ldi	r24, 0x01	; 1
     61c:	0e 94 a2 00 	call	0x144	; 0x144 <DIO_vidSetPinMode>
     620:	41 e0       	ldi	r20, 0x01	; 1
     622:	62 e0       	ldi	r22, 0x02	; 2
     624:	81 e0       	ldi	r24, 0x01	; 1
     626:	0e 94 a2 00 	call	0x144	; 0x144 <DIO_vidSetPinMode>
     62a:	41 e0       	ldi	r20, 0x01	; 1
     62c:	63 e0       	ldi	r22, 0x03	; 3
     62e:	81 e0       	ldi	r24, 0x01	; 1
     630:	0e 94 a2 00 	call	0x144	; 0x144 <DIO_vidSetPinMode>
     634:	82 e0       	ldi	r24, 0x02	; 2
     636:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <LCD_vidSendCmd>
     63a:	2f e7       	ldi	r18, 0x7F	; 127
     63c:	88 e3       	ldi	r24, 0x38	; 56
     63e:	91 e0       	ldi	r25, 0x01	; 1
     640:	21 50       	subi	r18, 0x01	; 1
     642:	80 40       	sbci	r24, 0x00	; 0
     644:	90 40       	sbci	r25, 0x00	; 0
     646:	e1 f7       	brne	.-8      	; 0x640 <LCD_vidInit+0x46>
     648:	00 c0       	rjmp	.+0      	; 0x64a <LCD_vidInit+0x50>
     64a:	00 00       	nop
     64c:	88 e2       	ldi	r24, 0x28	; 40
     64e:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <LCD_vidSendCmd>
     652:	8f e9       	ldi	r24, 0x9F	; 159
     654:	9f e0       	ldi	r25, 0x0F	; 15
     656:	01 97       	sbiw	r24, 0x01	; 1
     658:	f1 f7       	brne	.-4      	; 0x656 <LCD_vidInit+0x5c>
     65a:	00 c0       	rjmp	.+0      	; 0x65c <LCD_vidInit+0x62>
     65c:	00 00       	nop
     65e:	8c e0       	ldi	r24, 0x0C	; 12
     660:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <LCD_vidSendCmd>
     664:	8f e9       	ldi	r24, 0x9F	; 159
     666:	9f e0       	ldi	r25, 0x0F	; 15
     668:	01 97       	sbiw	r24, 0x01	; 1
     66a:	f1 f7       	brne	.-4      	; 0x668 <LCD_vidInit+0x6e>
     66c:	00 c0       	rjmp	.+0      	; 0x66e <LCD_vidInit+0x74>
     66e:	00 00       	nop
     670:	81 e0       	ldi	r24, 0x01	; 1
     672:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <LCD_vidSendCmd>
     676:	8f e9       	ldi	r24, 0x9F	; 159
     678:	9f e0       	ldi	r25, 0x0F	; 15
     67a:	01 97       	sbiw	r24, 0x01	; 1
     67c:	f1 f7       	brne	.-4      	; 0x67a <LCD_vidInit+0x80>
     67e:	00 c0       	rjmp	.+0      	; 0x680 <LCD_vidInit+0x86>
     680:	00 00       	nop
     682:	80 e1       	ldi	r24, 0x10	; 16
     684:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <LCD_vidSendCmd>
     688:	8f e9       	ldi	r24, 0x9F	; 159
     68a:	9f e0       	ldi	r25, 0x0F	; 15
     68c:	01 97       	sbiw	r24, 0x01	; 1
     68e:	f1 f7       	brne	.-4      	; 0x68c <LCD_vidInit+0x92>
     690:	00 c0       	rjmp	.+0      	; 0x692 <LCD_vidInit+0x98>
     692:	00 00       	nop
     694:	08 95       	ret

00000696 <LCD_vidSendChar>:
     696:	cf 93       	push	r28
     698:	c8 2f       	mov	r28, r24
     69a:	41 e0       	ldi	r20, 0x01	; 1
     69c:	61 e0       	ldi	r22, 0x01	; 1
     69e:	81 e0       	ldi	r24, 0x01	; 1
     6a0:	0e 94 12 01 	call	0x224	; 0x224 <DIO_vidWritePin>
     6a4:	4c 2f       	mov	r20, r28
     6a6:	61 e0       	ldi	r22, 0x01	; 1
     6a8:	81 e0       	ldi	r24, 0x01	; 1
     6aa:	0e 94 6f 02 	call	0x4de	; 0x4de <DIO_vidWriteNibble>
     6ae:	0e 94 cf 02 	call	0x59e	; 0x59e <LCD_vidSendEnPulse>
     6b2:	4c 2f       	mov	r20, r28
     6b4:	42 95       	swap	r20
     6b6:	40 7f       	andi	r20, 0xF0	; 240
     6b8:	61 e0       	ldi	r22, 0x01	; 1
     6ba:	81 e0       	ldi	r24, 0x01	; 1
     6bc:	0e 94 6f 02 	call	0x4de	; 0x4de <DIO_vidWriteNibble>
     6c0:	63 e0       	ldi	r22, 0x03	; 3
     6c2:	70 e0       	ldi	r23, 0x00	; 0
     6c4:	81 e0       	ldi	r24, 0x01	; 1
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	0e 94 cf 02 	call	0x59e	; 0x59e <LCD_vidSendEnPulse>
     6cc:	cf 91       	pop	r28
     6ce:	08 95       	ret

000006d0 <LCD_vidSendString>:
     6d0:	cf 93       	push	r28
     6d2:	df 93       	push	r29
     6d4:	ec 01       	movw	r28, r24
     6d6:	03 c0       	rjmp	.+6      	; 0x6de <LCD_vidSendString+0xe>
     6d8:	0e 94 4b 03 	call	0x696	; 0x696 <LCD_vidSendChar>
     6dc:	21 96       	adiw	r28, 0x01	; 1
     6de:	88 81       	ld	r24, Y
     6e0:	81 11       	cpse	r24, r1
     6e2:	fa cf       	rjmp	.-12     	; 0x6d8 <LCD_vidSendString+0x8>
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	08 95       	ret

000006ea <LCD_vidSendNumber>:
     6ea:	0f 93       	push	r16
     6ec:	1f 93       	push	r17
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	cd b7       	in	r28, 0x3d	; 61
     6f4:	de b7       	in	r29, 0x3e	; 62
     6f6:	64 97       	sbiw	r28, 0x14	; 20
     6f8:	0f b6       	in	r0, 0x3f	; 63
     6fa:	f8 94       	cli
     6fc:	de bf       	out	0x3e, r29	; 62
     6fe:	0f be       	out	0x3f, r0	; 63
     700:	cd bf       	out	0x3d, r28	; 61
     702:	9f 93       	push	r25
     704:	8f 93       	push	r24
     706:	7f 93       	push	r23
     708:	6f 93       	push	r22
     70a:	85 e6       	ldi	r24, 0x65	; 101
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	9f 93       	push	r25
     710:	8f 93       	push	r24
     712:	8e 01       	movw	r16, r28
     714:	0f 5f       	subi	r16, 0xFF	; 255
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	1f 93       	push	r17
     71a:	0f 93       	push	r16
     71c:	0e 94 b7 10 	call	0x216e	; 0x216e <sprintf>
     720:	c8 01       	movw	r24, r16
     722:	0e 94 68 03 	call	0x6d0	; 0x6d0 <LCD_vidSendString>
     726:	0f b6       	in	r0, 0x3f	; 63
     728:	f8 94       	cli
     72a:	de bf       	out	0x3e, r29	; 62
     72c:	0f be       	out	0x3f, r0	; 63
     72e:	cd bf       	out	0x3d, r28	; 61
     730:	64 96       	adiw	r28, 0x14	; 20
     732:	0f b6       	in	r0, 0x3f	; 63
     734:	f8 94       	cli
     736:	de bf       	out	0x3e, r29	; 62
     738:	0f be       	out	0x3f, r0	; 63
     73a:	cd bf       	out	0x3d, r28	; 61
     73c:	df 91       	pop	r29
     73e:	cf 91       	pop	r28
     740:	1f 91       	pop	r17
     742:	0f 91       	pop	r16
     744:	08 95       	ret

00000746 <LCD_vidMoveCursor>:
     746:	9f ef       	ldi	r25, 0xFF	; 255
     748:	98 0f       	add	r25, r24
     74a:	92 30       	cpi	r25, 0x02	; 2
     74c:	20 f4       	brcc	.+8      	; 0x756 <LCD_vidMoveCursor+0x10>
     74e:	66 23       	and	r22, r22
     750:	11 f0       	breq	.+4      	; 0x756 <LCD_vidMoveCursor+0x10>
     752:	61 31       	cpi	r22, 0x11	; 17
     754:	20 f0       	brcs	.+8      	; 0x75e <LCD_vidMoveCursor+0x18>
     756:	80 e8       	ldi	r24, 0x80	; 128
     758:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <LCD_vidSendCmd>
     75c:	0d c0       	rjmp	.+26     	; 0x778 <LCD_vidMoveCursor+0x32>
     75e:	81 30       	cpi	r24, 0x01	; 1
     760:	29 f4       	brne	.+10     	; 0x76c <LCD_vidMoveCursor+0x26>
     762:	8f e7       	ldi	r24, 0x7F	; 127
     764:	86 0f       	add	r24, r22
     766:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <LCD_vidSendCmd>
     76a:	06 c0       	rjmp	.+12     	; 0x778 <LCD_vidMoveCursor+0x32>
     76c:	82 30       	cpi	r24, 0x02	; 2
     76e:	21 f4       	brne	.+8      	; 0x778 <LCD_vidMoveCursor+0x32>
     770:	8f eb       	ldi	r24, 0xBF	; 191
     772:	86 0f       	add	r24, r22
     774:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <LCD_vidSendCmd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     778:	8f ec       	ldi	r24, 0xCF	; 207
     77a:	97 e0       	ldi	r25, 0x07	; 7
     77c:	01 97       	sbiw	r24, 0x01	; 1
     77e:	f1 f7       	brne	.-4      	; 0x77c <LCD_vidMoveCursor+0x36>
     780:	00 c0       	rjmp	.+0      	; 0x782 <LCD_vidMoveCursor+0x3c>
     782:	00 00       	nop
     784:	08 95       	ret

00000786 <LED_vidInit>:
     786:	41 e0       	ldi	r20, 0x01	; 1
     788:	0e 94 a2 00 	call	0x144	; 0x144 <DIO_vidSetPinMode>
     78c:	08 95       	ret

0000078e <LED_vidLedOn>:
     78e:	41 e0       	ldi	r20, 0x01	; 1
     790:	0e 94 12 01 	call	0x224	; 0x224 <DIO_vidWritePin>
     794:	08 95       	ret

00000796 <LED_vidLedOff>:
     796:	40 e0       	ldi	r20, 0x00	; 0
     798:	0e 94 12 01 	call	0x224	; 0x224 <DIO_vidWritePin>
     79c:	08 95       	ret

0000079e <LED_vidLedToggle>:
     79e:	cf 93       	push	r28
     7a0:	df 93       	push	r29
     7a2:	c8 2f       	mov	r28, r24
     7a4:	d6 2f       	mov	r29, r22
     7a6:	0e 94 82 01 	call	0x304	; 0x304 <DIO_enuReadPin>
     7aa:	81 30       	cpi	r24, 0x01	; 1
     7ac:	29 f4       	brne	.+10     	; 0x7b8 <LED_vidLedToggle+0x1a>
     7ae:	6d 2f       	mov	r22, r29
     7b0:	8c 2f       	mov	r24, r28
     7b2:	0e 94 cb 03 	call	0x796	; 0x796 <LED_vidLedOff>
     7b6:	04 c0       	rjmp	.+8      	; 0x7c0 <LED_vidLedToggle+0x22>
     7b8:	6d 2f       	mov	r22, r29
     7ba:	8c 2f       	mov	r24, r28
     7bc:	0e 94 c7 03 	call	0x78e	; 0x78e <LED_vidLedOn>
     7c0:	df 91       	pop	r29
     7c2:	cf 91       	pop	r28
     7c4:	08 95       	ret

000007c6 <LM35_vidInit>:
     7c6:	0e 94 6e 00 	call	0xdc	; 0xdc <ADC_vidInit>
     7ca:	08 95       	ret

000007cc <LM35_u8LM35Read>:
     7cc:	0e 94 93 00 	call	0x126	; 0x126 <ADC_u16Read>
     7d0:	bc 01       	movw	r22, r24
     7d2:	80 e0       	ldi	r24, 0x00	; 0
     7d4:	90 e0       	ldi	r25, 0x00	; 0
     7d6:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <__floatunsisf>
     7da:	20 e0       	ldi	r18, 0x00	; 0
     7dc:	30 e0       	ldi	r19, 0x00	; 0
     7de:	40 e2       	ldi	r20, 0x20	; 32
     7e0:	55 e4       	ldi	r21, 0x45	; 69
     7e2:	0e 94 fa 0f 	call	0x1ff4	; 0x1ff4 <__mulsf3>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e2       	ldi	r20, 0x20	; 32
     7ec:	56 e4       	ldi	r21, 0x46	; 70
     7ee:	0e 94 cb 0e 	call	0x1d96	; 0x1d96 <__divsf3>
     7f2:	0e 94 3d 0f 	call	0x1e7a	; 0x1e7a <__fixunssfsi>
     7f6:	86 2f       	mov	r24, r22
     7f8:	08 95       	ret

000007fa <VIEW_DATA>:
	}
}

void VIEW_DATA(void *pvData) 
{
	LCD_vidSendString("Temp: ");
     7fa:	8a e6       	ldi	r24, 0x6A	; 106
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	0e 94 68 03 	call	0x6d0	; 0x6d0 <LCD_vidSendString>
	LCD_vidSendNumber(u16Degree);
     802:	60 91 08 08 	lds	r22, 0x0808	; 0x800808 <u16Degree>
     806:	70 91 09 08 	lds	r23, 0x0809	; 0x800809 <u16Degree+0x1>
     80a:	80 e0       	ldi	r24, 0x00	; 0
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	0e 94 75 03 	call	0x6ea	; 0x6ea <LCD_vidSendNumber>
	LCD_vidSendChar((char)223);
     812:	8f ed       	ldi	r24, 0xDF	; 223
     814:	0e 94 4b 03 	call	0x696	; 0x696 <LCD_vidSendChar>
	LCD_vidSendChar('C');
     818:	83 e4       	ldi	r24, 0x43	; 67
     81a:	0e 94 4b 03 	call	0x696	; 0x696 <LCD_vidSendChar>
	LCD_vidMoveCursor(2,1);
     81e:	61 e0       	ldi	r22, 0x01	; 1
     820:	82 e0       	ldi	r24, 0x02	; 2
     822:	0e 94 a3 03 	call	0x746	; 0x746 <LCD_vidMoveCursor>
	LCD_vidSendString("AC: ");
     826:	81 e7       	ldi	r24, 0x71	; 113
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	0e 94 68 03 	call	0x6d0	; 0x6d0 <LCD_vidSendString>
	LCD_vidSendNumber(u8Speed);
     82e:	60 91 0a 08 	lds	r22, 0x080A	; 0x80080a <u8Speed>
     832:	70 e0       	ldi	r23, 0x00	; 0
     834:	80 e0       	ldi	r24, 0x00	; 0
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	0e 94 75 03 	call	0x6ea	; 0x6ea <LCD_vidSendNumber>
	while (1)
	{

		LCD_vidMoveCursor(1,7);
     83c:	67 e0       	ldi	r22, 0x07	; 7
     83e:	81 e0       	ldi	r24, 0x01	; 1
     840:	0e 94 a3 03 	call	0x746	; 0x746 <LCD_vidMoveCursor>
		LCD_vidSendNumber(u16Degree);
     844:	60 91 08 08 	lds	r22, 0x0808	; 0x800808 <u16Degree>
     848:	70 91 09 08 	lds	r23, 0x0809	; 0x800809 <u16Degree+0x1>
     84c:	80 e0       	ldi	r24, 0x00	; 0
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	0e 94 75 03 	call	0x6ea	; 0x6ea <LCD_vidSendNumber>
		LCD_vidSendChar((char)223);
     854:	8f ed       	ldi	r24, 0xDF	; 223
     856:	0e 94 4b 03 	call	0x696	; 0x696 <LCD_vidSendChar>
		LCD_vidSendChar('C');
     85a:	83 e4       	ldi	r24, 0x43	; 67
     85c:	0e 94 4b 03 	call	0x696	; 0x696 <LCD_vidSendChar>
		if (u16Degree<10)
     860:	80 91 08 08 	lds	r24, 0x0808	; 0x800808 <u16Degree>
     864:	90 91 09 08 	lds	r25, 0x0809	; 0x800809 <u16Degree+0x1>
     868:	0a 97       	sbiw	r24, 0x0a	; 10
     86a:	38 f4       	brcc	.+14     	; 0x87a <__stack+0x1b>
		{
			LCD_vidMoveCursor(1,10);
     86c:	6a e0       	ldi	r22, 0x0A	; 10
     86e:	81 e0       	ldi	r24, 0x01	; 1
     870:	0e 94 a3 03 	call	0x746	; 0x746 <LCD_vidMoveCursor>
			LCD_vidSendChar(' ');
     874:	80 e2       	ldi	r24, 0x20	; 32
     876:	0e 94 4b 03 	call	0x696	; 0x696 <LCD_vidSendChar>
		}
		LCD_vidMoveCursor(2,5);
     87a:	65 e0       	ldi	r22, 0x05	; 5
     87c:	82 e0       	ldi	r24, 0x02	; 2
     87e:	0e 94 a3 03 	call	0x746	; 0x746 <LCD_vidMoveCursor>
		LCD_vidSendNumber(u8Speed);
     882:	60 91 0a 08 	lds	r22, 0x080A	; 0x80080a <u8Speed>
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	0e 94 75 03 	call	0x6ea	; 0x6ea <LCD_vidSendNumber>
		if (u16Degree<100)
     890:	80 91 08 08 	lds	r24, 0x0808	; 0x800808 <u16Degree>
     894:	90 91 09 08 	lds	r25, 0x0809	; 0x800809 <u16Degree+0x1>
     898:	84 36       	cpi	r24, 0x64	; 100
     89a:	91 05       	cpc	r25, r1
     89c:	20 f4       	brcc	.+8      	; 0x8a6 <__stack+0x47>
		{
			LCD_vidSendString("  ");
     89e:	86 e7       	ldi	r24, 0x76	; 118
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	0e 94 68 03 	call	0x6d0	; 0x6d0 <LCD_vidSendString>
		}
		vTaskDelay(30);
     8a6:	8e e1       	ldi	r24, 0x1E	; 30
     8a8:	90 e0       	ldi	r25, 0x00	; 0
     8aa:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <vTaskDelay>
	}
     8ae:	c6 cf       	rjmp	.-116    	; 0x83c <__DATA_REGION_LENGTH__+0x3c>

000008b0 <CHECK_TEMP>:

void CHECK_TEMP(void *pvData)
{
	while (1)
	{
		u16Degree=LM35_u8LM35Read();
     8b0:	0e 94 e6 03 	call	0x7cc	; 0x7cc <LM35_u8LM35Read>
     8b4:	90 e0       	ldi	r25, 0x00	; 0
     8b6:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <u16Degree+0x1>
     8ba:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <u16Degree>
		if(u16Degree >=28 ){
     8be:	8c 31       	cpi	r24, 0x1C	; 28
     8c0:	91 05       	cpc	r25, r1
     8c2:	a8 f0       	brcs	.+42     	; 0x8ee <CHECK_TEMP+0x3e>
			u8Speed=(((((u16Degree)-28)/2)+1)*10);
     8c4:	4c 97       	sbiw	r24, 0x1c	; 28
     8c6:	96 95       	lsr	r25
     8c8:	87 95       	ror	r24
     8ca:	01 96       	adiw	r24, 0x01	; 1
     8cc:	88 0f       	add	r24, r24
     8ce:	98 2f       	mov	r25, r24
     8d0:	99 0f       	add	r25, r25
     8d2:	99 0f       	add	r25, r25
     8d4:	89 0f       	add	r24, r25
     8d6:	80 93 0a 08 	sts	0x080A, r24	; 0x80080a <u8Speed>
			if (u8Speed>=100)
     8da:	84 36       	cpi	r24, 0x64	; 100
     8dc:	18 f0       	brcs	.+6      	; 0x8e4 <CHECK_TEMP+0x34>
			{
				u8Speed=100;
     8de:	84 e6       	ldi	r24, 0x64	; 100
     8e0:	80 93 0a 08 	sts	0x080A, r24	; 0x80080a <u8Speed>
			}
			Motor1_ClockWise(u8Speed);
     8e4:	80 91 0a 08 	lds	r24, 0x080A	; 0x80080a <u8Speed>
     8e8:	0e 94 48 07 	call	0xe90	; 0xe90 <Motor1_ClockWise>
     8ec:	04 c0       	rjmp	.+8      	; 0x8f6 <CHECK_TEMP+0x46>
		}else
		{
			u8Speed=0;
     8ee:	10 92 0a 08 	sts	0x080A, r1	; 0x80080a <u8Speed>
			Motor1_Stop();
     8f2:	0e 94 59 07 	call	0xeb2	; 0xeb2 <Motor1_Stop>
		}
		vTaskDelay(50);
     8f6:	82 e3       	ldi	r24, 0x32	; 50
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <vTaskDelay>
	}
     8fe:	d8 cf       	rjmp	.-80     	; 0x8b0 <CHECK_TEMP>

00000900 <login>:
void VIEW_DATA(void *pvData);
void CHECK_COMMAND(void *pvData);
void CHECK_TEMP(void *pvData);

xQueueHandle QueueCOMMAND ;
u8 login(){
     900:	af 92       	push	r10
     902:	bf 92       	push	r11
     904:	cf 92       	push	r12
     906:	df 92       	push	r13
     908:	ef 92       	push	r14
     90a:	ff 92       	push	r15
     90c:	0f 93       	push	r16
     90e:	1f 93       	push	r17
     910:	cf 93       	push	r28
     912:	df 93       	push	r29
     914:	cd b7       	in	r28, 0x3d	; 61
     916:	de b7       	in	r29, 0x3e	; 62
     918:	28 97       	sbiw	r28, 0x08	; 8
     91a:	0f b6       	in	r0, 0x3f	; 63
     91c:	f8 94       	cli
     91e:	de bf       	out	0x3e, r29	; 62
     920:	0f be       	out	0x3f, r0	; 63
     922:	cd bf       	out	0x3d, r28	; 61
	u8 id[4],pass[4],passed=1;
	USART_vidSendString("\r\nEnter Id :\r\n");
     924:	89 e7       	ldi	r24, 0x79	; 121
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <USART_vidSendString>
	for (u8 i=0;i<4;i++)
     92c:	10 e0       	ldi	r17, 0x00	; 0
     92e:	0c c0       	rjmp	.+24     	; 0x948 <login+0x48>
	{
		id[i]=USART_u8RecieveByte();
     930:	e1 2e       	mov	r14, r17
     932:	f1 2c       	mov	r15, r1
     934:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <USART_u8RecieveByte>
     938:	e1 e0       	ldi	r30, 0x01	; 1
     93a:	f0 e0       	ldi	r31, 0x00	; 0
     93c:	ec 0f       	add	r30, r28
     93e:	fd 1f       	adc	r31, r29
     940:	ee 0d       	add	r30, r14
     942:	ff 1d       	adc	r31, r15
     944:	80 83       	st	Z, r24

xQueueHandle QueueCOMMAND ;
u8 login(){
	u8 id[4],pass[4],passed=1;
	USART_vidSendString("\r\nEnter Id :\r\n");
	for (u8 i=0;i<4;i++)
     946:	1f 5f       	subi	r17, 0xFF	; 255
     948:	14 30       	cpi	r17, 0x04	; 4
     94a:	90 f3       	brcs	.-28     	; 0x930 <login+0x30>
	{
		id[i]=USART_u8RecieveByte();
	}
	
	USART_vidSendString("\r\nEnter Password :\r\n");
     94c:	88 e8       	ldi	r24, 0x88	; 136
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <USART_vidSendString>
	
	for (u8 i=0;i<6;i++)
     954:	10 e0       	ldi	r17, 0x00	; 0
     956:	0c c0       	rjmp	.+24     	; 0x970 <login+0x70>
	{
		pass[i]=USART_u8RecieveByte();
     958:	e1 2e       	mov	r14, r17
     95a:	f1 2c       	mov	r15, r1
     95c:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <USART_u8RecieveByte>
     960:	e5 e0       	ldi	r30, 0x05	; 5
     962:	f0 e0       	ldi	r31, 0x00	; 0
     964:	ec 0f       	add	r30, r28
     966:	fd 1f       	adc	r31, r29
     968:	ee 0d       	add	r30, r14
     96a:	ff 1d       	adc	r31, r15
     96c:	80 83       	st	Z, r24
		id[i]=USART_u8RecieveByte();
	}
	
	USART_vidSendString("\r\nEnter Password :\r\n");
	
	for (u8 i=0;i<6;i++)
     96e:	1f 5f       	subi	r17, 0xFF	; 255
     970:	16 30       	cpi	r17, 0x06	; 6
     972:	90 f3       	brcs	.-28     	; 0x958 <login+0x58>
     974:	00 e0       	ldi	r16, 0x00	; 0
     976:	dd 24       	eor	r13, r13
     978:	d3 94       	inc	r13
     97a:	39 c0       	rjmp	.+114    	; 0x9ee <login+0xee>
		pass[i]=USART_u8RecieveByte();
	}
	
	for(u8 i=0;i<numOfUsers;i+=10)
	{
		if(EEPROM_u8Read(USERS_EEPROM_ADDRESS+i)==id[0])
     97c:	e0 2e       	mov	r14, r16
     97e:	f1 2c       	mov	r15, r1
     980:	57 01       	movw	r10, r14
     982:	8a e0       	ldi	r24, 0x0A	; 10
     984:	a8 0e       	add	r10, r24
     986:	b1 1c       	adc	r11, r1
     988:	c5 01       	movw	r24, r10
     98a:	0e 94 c7 02 	call	0x58e	; 0x58e <EEPROM_u8Read>
     98e:	99 81       	ldd	r25, Y+1	; 0x01
     990:	89 13       	cpse	r24, r25
     992:	2c c0       	rjmp	.+88     	; 0x9ec <login+0xec>
     994:	11 c0       	rjmp	.+34     	; 0x9b8 <login+0xb8>
		{
			for(u8 j=0;j<4;j++)
			{
				if(id[j]!=EEPROM_u8Read(USERS_EEPROM_ADDRESS+i+j))
     996:	81 2f       	mov	r24, r17
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	e1 e0       	ldi	r30, 0x01	; 1
     99c:	f0 e0       	ldi	r31, 0x00	; 0
     99e:	ec 0f       	add	r30, r28
     9a0:	fd 1f       	adc	r31, r29
     9a2:	e8 0f       	add	r30, r24
     9a4:	f9 1f       	adc	r31, r25
     9a6:	c0 80       	ld	r12, Z
     9a8:	8a 0d       	add	r24, r10
     9aa:	9b 1d       	adc	r25, r11
     9ac:	0e 94 c7 02 	call	0x58e	; 0x58e <EEPROM_u8Read>
     9b0:	c8 12       	cpse	r12, r24
				{
					passed=0;
     9b2:	d1 2c       	mov	r13, r1
	
	for(u8 i=0;i<numOfUsers;i+=10)
	{
		if(EEPROM_u8Read(USERS_EEPROM_ADDRESS+i)==id[0])
		{
			for(u8 j=0;j<4;j++)
     9b4:	1f 5f       	subi	r17, 0xFF	; 255
     9b6:	01 c0       	rjmp	.+2      	; 0x9ba <login+0xba>
     9b8:	10 e0       	ldi	r17, 0x00	; 0
     9ba:	14 30       	cpi	r17, 0x04	; 4
     9bc:	60 f3       	brcs	.-40     	; 0x996 <login+0x96>
     9be:	10 e0       	ldi	r17, 0x00	; 0
     9c0:	13 c0       	rjmp	.+38     	; 0x9e8 <login+0xe8>
					passed=0;
				}
			}
			for(u8 j=0;j<6;j++)
			{
				if(pass[j]!=EEPROM_u8Read(USERS_EEPROM_ADDRESS+4+i+j))
     9c2:	81 2f       	mov	r24, r17
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	e5 e0       	ldi	r30, 0x05	; 5
     9c8:	f0 e0       	ldi	r31, 0x00	; 0
     9ca:	ec 0f       	add	r30, r28
     9cc:	fd 1f       	adc	r31, r29
     9ce:	e8 0f       	add	r30, r24
     9d0:	f9 1f       	adc	r31, r25
     9d2:	b0 80       	ld	r11, Z
     9d4:	97 01       	movw	r18, r14
     9d6:	22 5f       	subi	r18, 0xF2	; 242
     9d8:	3f 4f       	sbci	r19, 0xFF	; 255
     9da:	82 0f       	add	r24, r18
     9dc:	93 1f       	adc	r25, r19
     9de:	0e 94 c7 02 	call	0x58e	; 0x58e <EEPROM_u8Read>
     9e2:	b8 12       	cpse	r11, r24
				{
					passed=0;
     9e4:	d1 2c       	mov	r13, r1
				if(id[j]!=EEPROM_u8Read(USERS_EEPROM_ADDRESS+i+j))
				{
					passed=0;
				}
			}
			for(u8 j=0;j<6;j++)
     9e6:	1f 5f       	subi	r17, 0xFF	; 255
     9e8:	16 30       	cpi	r17, 0x06	; 6
     9ea:	58 f3       	brcs	.-42     	; 0x9c2 <login+0xc2>
	for (u8 i=0;i<6;i++)
	{
		pass[i]=USART_u8RecieveByte();
	}
	
	for(u8 i=0;i<numOfUsers;i+=10)
     9ec:	06 5f       	subi	r16, 0xF6	; 246
     9ee:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <__data_end>
     9f2:	08 17       	cp	r16, r24
     9f4:	18 f2       	brcs	.-122    	; 0x97c <login+0x7c>
			}
		}
		
	}
	return passed;
}
     9f6:	8d 2d       	mov	r24, r13
     9f8:	28 96       	adiw	r28, 0x08	; 8
     9fa:	0f b6       	in	r0, 0x3f	; 63
     9fc:	f8 94       	cli
     9fe:	de bf       	out	0x3e, r29	; 62
     a00:	0f be       	out	0x3f, r0	; 63
     a02:	cd bf       	out	0x3d, r28	; 61
     a04:	df 91       	pop	r29
     a06:	cf 91       	pop	r28
     a08:	1f 91       	pop	r17
     a0a:	0f 91       	pop	r16
     a0c:	ff 90       	pop	r15
     a0e:	ef 90       	pop	r14
     a10:	df 90       	pop	r13
     a12:	cf 90       	pop	r12
     a14:	bf 90       	pop	r11
     a16:	af 90       	pop	r10
     a18:	08 95       	ret

00000a1a <System_Init>:
	vTaskStartScheduler();
}

void System_Init(void)
{
	LCD_vidInit();
     a1a:	0e 94 fd 02 	call	0x5fa	; 0x5fa <LCD_vidInit>
	LCD_vidMoveCursor(0,0);
     a1e:	60 e0       	ldi	r22, 0x00	; 0
     a20:	80 e0       	ldi	r24, 0x00	; 0
     a22:	0e 94 a3 03 	call	0x746	; 0x746 <LCD_vidMoveCursor>
	LM35_vidInit(ADC_CHANNEL0);
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <LM35_vidInit>
	USART_vidInit(9600);
     a2c:	60 e8       	ldi	r22, 0x80	; 128
     a2e:	75 e2       	ldi	r23, 0x25	; 37
     a30:	80 e0       	ldi	r24, 0x00	; 0
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	0e 94 76 0e 	call	0x1cec	; 0x1cec <USART_vidInit>
	motorA_vidInit();
     a38:	0e 94 20 07 	call	0xe40	; 0xe40 <motorA_vidInit>
	motorB_vidInit();
     a3c:	0e 94 34 07 	call	0xe68	; 0xe68 <motorB_vidInit>
	LED_vidInit(GPIOB,PIN0);
     a40:	60 e0       	ldi	r22, 0x00	; 0
     a42:	82 e0       	ldi	r24, 0x02	; 2
     a44:	0e 94 c3 03 	call	0x786	; 0x786 <LED_vidInit>
	LED_vidInit(GPIOB,PIN1);
     a48:	61 e0       	ldi	r22, 0x01	; 1
     a4a:	82 e0       	ldi	r24, 0x02	; 2
     a4c:	0e 94 c3 03 	call	0x786	; 0x786 <LED_vidInit>
	LED_vidInit(GPIOB,PIN2);
     a50:	62 e0       	ldi	r22, 0x02	; 2
     a52:	82 e0       	ldi	r24, 0x02	; 2
     a54:	0e 94 c3 03 	call	0x786	; 0x786 <LED_vidInit>
	LED_vidInit(GPIOD,PIN2);
     a58:	62 e0       	ldi	r22, 0x02	; 2
     a5a:	84 e0       	ldi	r24, 0x04	; 4
     a5c:	0e 94 c3 03 	call	0x786	; 0x786 <LED_vidInit>
	LED_vidInit(GPIOD,PIN3);
     a60:	63 e0       	ldi	r22, 0x03	; 3
     a62:	84 e0       	ldi	r24, 0x04	; 4
     a64:	0e 94 c3 03 	call	0x786	; 0x786 <LED_vidInit>
	LED_vidInit(GPIOD,PIN4);
     a68:	64 e0       	ldi	r22, 0x04	; 4
     a6a:	84 e0       	ldi	r24, 0x04	; 4
     a6c:	0e 94 c3 03 	call	0x786	; 0x786 <LED_vidInit>
     a70:	08 95       	ret

00000a72 <GenerateAdmin>:

}

void GenerateAdmin(){
     a72:	cf 93       	push	r28
	u8 idChar,passwordChar;
	
	USART_vidSendString("\r\nEnter Admin Id :\r\n");
     a74:	8d e9       	ldi	r24, 0x9D	; 157
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <USART_vidSendString>
	for (u8 i=0;i<4;i++)
     a7c:	c0 e0       	ldi	r28, 0x00	; 0
     a7e:	0b c0       	rjmp	.+22     	; 0xa96 <GenerateAdmin+0x24>
	{
		idChar=USART_u8RecieveByte();
     a80:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <USART_u8RecieveByte>
		EEPROM_vidWrite(ADMIN_EEPROM_ADDRESS +i,idChar);
     a84:	2c 2f       	mov	r18, r28
     a86:	30 e0       	ldi	r19, 0x00	; 0
     a88:	68 2f       	mov	r22, r24
     a8a:	c9 01       	movw	r24, r18
     a8c:	8e 50       	subi	r24, 0x0E	; 14
     a8e:	9c 4f       	sbci	r25, 0xFC	; 252
     a90:	0e 94 ba 02 	call	0x574	; 0x574 <EEPROM_vidWrite>

void GenerateAdmin(){
	u8 idChar,passwordChar;
	
	USART_vidSendString("\r\nEnter Admin Id :\r\n");
	for (u8 i=0;i<4;i++)
     a94:	cf 5f       	subi	r28, 0xFF	; 255
     a96:	c4 30       	cpi	r28, 0x04	; 4
     a98:	98 f3       	brcs	.-26     	; 0xa80 <GenerateAdmin+0xe>
	{
		idChar=USART_u8RecieveByte();
		EEPROM_vidWrite(ADMIN_EEPROM_ADDRESS +i,idChar);
	}
	
	USART_vidSendString("\r\nEnter Admin Password :\r\n");
     a9a:	82 eb       	ldi	r24, 0xB2	; 178
     a9c:	90 e0       	ldi	r25, 0x00	; 0
     a9e:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <USART_vidSendString>
	for (u8 i=0;i<6;i++)
     aa2:	c0 e0       	ldi	r28, 0x00	; 0
     aa4:	0b c0       	rjmp	.+22     	; 0xabc <GenerateAdmin+0x4a>
	{
		passwordChar=USART_u8RecieveByte();
     aa6:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <USART_u8RecieveByte>
		EEPROM_vidWrite(ADMIN_EEPROM_ADDRESS +4+i,passwordChar);
     aaa:	2c 2f       	mov	r18, r28
     aac:	30 e0       	ldi	r19, 0x00	; 0
     aae:	68 2f       	mov	r22, r24
     ab0:	c9 01       	movw	r24, r18
     ab2:	8a 50       	subi	r24, 0x0A	; 10
     ab4:	9c 4f       	sbci	r25, 0xFC	; 252
     ab6:	0e 94 ba 02 	call	0x574	; 0x574 <EEPROM_vidWrite>
		idChar=USART_u8RecieveByte();
		EEPROM_vidWrite(ADMIN_EEPROM_ADDRESS +i,idChar);
	}
	
	USART_vidSendString("\r\nEnter Admin Password :\r\n");
	for (u8 i=0;i<6;i++)
     aba:	cf 5f       	subi	r28, 0xFF	; 255
     abc:	c6 30       	cpi	r28, 0x06	; 6
     abe:	98 f3       	brcs	.-26     	; 0xaa6 <GenerateAdmin+0x34>
	{
		passwordChar=USART_u8RecieveByte();
		EEPROM_vidWrite(ADMIN_EEPROM_ADDRESS +4+i,passwordChar);
	}

	EEPROM_vidWrite(FIRST_TIME_RUNNING_EEPROM_ADDRESS,'Y');
     ac0:	69 e5       	ldi	r22, 0x59	; 89
     ac2:	80 e0       	ldi	r24, 0x00	; 0
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	0e 94 ba 02 	call	0x574	; 0x574 <EEPROM_vidWrite>
}
     aca:	cf 91       	pop	r28
     acc:	08 95       	ret

00000ace <main>:
	}
	return passed;
}

int main(void)
{
     ace:	af 92       	push	r10
     ad0:	bf 92       	push	r11
     ad2:	cf 92       	push	r12
     ad4:	df 92       	push	r13
     ad6:	ef 92       	push	r14
     ad8:	ff 92       	push	r15
     ada:	0f 93       	push	r16
	u8 firstTimeFlag,passed;
	
	System_Init();
     adc:	0e 94 0d 05 	call	0xa1a	; 0xa1a <System_Init>
	xTaskCreate(CHECK_COMMAND		,NULL,200,NULL,1,NULL);
     ae0:	a1 2c       	mov	r10, r1
     ae2:	b1 2c       	mov	r11, r1
     ae4:	c1 2c       	mov	r12, r1
     ae6:	d1 2c       	mov	r13, r1
     ae8:	e1 2c       	mov	r14, r1
     aea:	f1 2c       	mov	r15, r1
     aec:	01 e0       	ldi	r16, 0x01	; 1
     aee:	20 e0       	ldi	r18, 0x00	; 0
     af0:	30 e0       	ldi	r19, 0x00	; 0
     af2:	48 ec       	ldi	r20, 0xC8	; 200
     af4:	50 e0       	ldi	r21, 0x00	; 0
     af6:	60 e0       	ldi	r22, 0x00	; 0
     af8:	70 e0       	ldi	r23, 0x00	; 0
     afa:	80 ee       	ldi	r24, 0xE0	; 224
     afc:	96 e0       	ldi	r25, 0x06	; 6
     afe:	0e 94 01 0b 	call	0x1602	; 0x1602 <xTaskGenericCreate>
	xTaskCreate(CHECK_TEMP			,NULL,200,NULL,2,NULL);
     b02:	02 e0       	ldi	r16, 0x02	; 2
     b04:	20 e0       	ldi	r18, 0x00	; 0
     b06:	30 e0       	ldi	r19, 0x00	; 0
     b08:	48 ec       	ldi	r20, 0xC8	; 200
     b0a:	50 e0       	ldi	r21, 0x00	; 0
     b0c:	60 e0       	ldi	r22, 0x00	; 0
     b0e:	70 e0       	ldi	r23, 0x00	; 0
     b10:	88 e5       	ldi	r24, 0x58	; 88
     b12:	94 e0       	ldi	r25, 0x04	; 4
     b14:	0e 94 01 0b 	call	0x1602	; 0x1602 <xTaskGenericCreate>
	xTaskCreate(VIEW_DATA			,NULL,200,NULL,3,NULL);
     b18:	03 e0       	ldi	r16, 0x03	; 3
     b1a:	20 e0       	ldi	r18, 0x00	; 0
     b1c:	30 e0       	ldi	r19, 0x00	; 0
     b1e:	48 ec       	ldi	r20, 0xC8	; 200
     b20:	50 e0       	ldi	r21, 0x00	; 0
     b22:	60 e0       	ldi	r22, 0x00	; 0
     b24:	70 e0       	ldi	r23, 0x00	; 0
     b26:	8d ef       	ldi	r24, 0xFD	; 253
     b28:	93 e0       	ldi	r25, 0x03	; 3
     b2a:	0e 94 01 0b 	call	0x1602	; 0x1602 <xTaskGenericCreate>
	QueueCOMMAND = xQueueCreate(5,sizeof(u8));
     b2e:	40 e0       	ldi	r20, 0x00	; 0
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	85 e0       	ldi	r24, 0x05	; 5
     b34:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <xQueueGenericCreate>
     b38:	90 93 07 08 	sts	0x0807, r25	; 0x800807 <QueueCOMMAND+0x1>
     b3c:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <QueueCOMMAND>
	
	LCD_vidSendString("Welcome Home :)");
     b40:	8d ec       	ldi	r24, 0xCD	; 205
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	0e 94 68 03 	call	0x6d0	; 0x6d0 <LCD_vidSendString>
     b48:	2f ef       	ldi	r18, 0xFF	; 255
     b4a:	84 e3       	ldi	r24, 0x34	; 52
     b4c:	9c e0       	ldi	r25, 0x0C	; 12
     b4e:	21 50       	subi	r18, 0x01	; 1
     b50:	80 40       	sbci	r24, 0x00	; 0
     b52:	90 40       	sbci	r25, 0x00	; 0
     b54:	e1 f7       	brne	.-8      	; 0xb4e <main+0x80>
     b56:	00 c0       	rjmp	.+0      	; 0xb58 <main+0x8a>
     b58:	00 00       	nop
	_delay_ms(500);
	LCD_vidSendCmd(LCD_CLEAR_SCREEN);
     b5a:	81 e0       	ldi	r24, 0x01	; 1
     b5c:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <LCD_vidSendCmd>
	
	
	firstTimeFlag=EEPROM_u8Read(FIRST_TIME_RUNNING_EEPROM_ADDRESS);
     b60:	80 e0       	ldi	r24, 0x00	; 0
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	0e 94 c7 02 	call	0x58e	; 0x58e <EEPROM_u8Read>
	
	if(firstTimeFlag !='Y'){
     b68:	89 35       	cpi	r24, 0x59	; 89
     b6a:	d9 f0       	breq	.+54     	; 0xba2 <main+0xd4>
		EEPROM_vidWrite(NUMBER_OF_USERS_EEPROM,0);
     b6c:	60 e0       	ldi	r22, 0x00	; 0
     b6e:	81 e0       	ldi	r24, 0x01	; 1
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	0e 94 ba 02 	call	0x574	; 0x574 <EEPROM_vidWrite>
		LCD_vidSendString("Registering ....");
     b76:	8d ed       	ldi	r24, 0xDD	; 221
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	0e 94 68 03 	call	0x6d0	; 0x6d0 <LCD_vidSendString>
		GenerateAdmin();
     b7e:	0e 94 39 05 	call	0xa72	; 0xa72 <GenerateAdmin>
		LCD_vidSendCmd(LCD_CLEAR_SCREEN);
     b82:	81 e0       	ldi	r24, 0x01	; 1
     b84:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <LCD_vidSendCmd>
		LCD_vidSendString("Registering Done");
     b88:	8e ee       	ldi	r24, 0xEE	; 238
     b8a:	90 e0       	ldi	r25, 0x00	; 0
     b8c:	0e 94 68 03 	call	0x6d0	; 0x6d0 <LCD_vidSendString>
     b90:	2f ef       	ldi	r18, 0xFF	; 255
     b92:	84 e3       	ldi	r24, 0x34	; 52
     b94:	9c e0       	ldi	r25, 0x0C	; 12
     b96:	21 50       	subi	r18, 0x01	; 1
     b98:	80 40       	sbci	r24, 0x00	; 0
     b9a:	90 40       	sbci	r25, 0x00	; 0
     b9c:	e1 f7       	brne	.-8      	; 0xb96 <main+0xc8>
     b9e:	00 c0       	rjmp	.+0      	; 0xba0 <main+0xd2>
     ba0:	00 00       	nop
		_delay_ms(500);
		
	}
	numOfUsers=EEPROM_u8Read(NUMBER_OF_USERS_EEPROM);
     ba2:	81 e0       	ldi	r24, 0x01	; 1
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	0e 94 c7 02 	call	0x58e	; 0x58e <EEPROM_u8Read>
     baa:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <__data_end>
	LCD_vidSendCmd(LCD_CLEAR_SCREEN);
     bae:	81 e0       	ldi	r24, 0x01	; 1
     bb0:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <LCD_vidSendCmd>
	
	LCD_vidSendString("Logging ....");
     bb4:	8f ef       	ldi	r24, 0xFF	; 255
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	0e 94 68 03 	call	0x6d0	; 0x6d0 <LCD_vidSendString>
	
	do{
		passed=login();
     bbc:	0e 94 80 04 	call	0x900	; 0x900 <login>
	}while(passed==0);
     bc0:	88 23       	and	r24, r24
     bc2:	e1 f3       	breq	.-8      	; 0xbbc <main+0xee>
	
	vTaskStartScheduler();
     bc4:	0e 94 b9 0b 	call	0x1772	; 0x1772 <vTaskStartScheduler>
}
     bc8:	80 e0       	ldi	r24, 0x00	; 0
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	0f 91       	pop	r16
     bce:	ff 90       	pop	r15
     bd0:	ef 90       	pop	r14
     bd2:	df 90       	pop	r13
     bd4:	cf 90       	pop	r12
     bd6:	bf 90       	pop	r11
     bd8:	af 90       	pop	r10
     bda:	08 95       	ret

00000bdc <GenerateUser>:
// 	}
// 	return place;
// }


void GenerateUser(){
     bdc:	cf 93       	push	r28
	
	u8 idChar,passwordChar;
	
	USART_vidSendString("\r\nEnter User Id :\r\n");
     bde:	8c e0       	ldi	r24, 0x0C	; 12
     be0:	91 e0       	ldi	r25, 0x01	; 1
     be2:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <USART_vidSendString>
	for (u8 i=0;i<4;i++)
     be6:	c0 e0       	ldi	r28, 0x00	; 0
     be8:	0a c0       	rjmp	.+20     	; 0xbfe <GenerateUser+0x22>
	{
		idChar=USART_u8RecieveByte();
     bea:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <USART_u8RecieveByte>
		EEPROM_vidWrite(USERS_EEPROM_ADDRESS+ NUMBER_OF_USERS_EEPROM +i,idChar);
     bee:	2c 2f       	mov	r18, r28
     bf0:	30 e0       	ldi	r19, 0x00	; 0
     bf2:	68 2f       	mov	r22, r24
     bf4:	c9 01       	movw	r24, r18
     bf6:	0b 96       	adiw	r24, 0x0b	; 11
     bf8:	0e 94 ba 02 	call	0x574	; 0x574 <EEPROM_vidWrite>
void GenerateUser(){
	
	u8 idChar,passwordChar;
	
	USART_vidSendString("\r\nEnter User Id :\r\n");
	for (u8 i=0;i<4;i++)
     bfc:	cf 5f       	subi	r28, 0xFF	; 255
     bfe:	c4 30       	cpi	r28, 0x04	; 4
     c00:	a0 f3       	brcs	.-24     	; 0xbea <GenerateUser+0xe>
	{
		idChar=USART_u8RecieveByte();
		EEPROM_vidWrite(USERS_EEPROM_ADDRESS+ NUMBER_OF_USERS_EEPROM +i,idChar);
	}
	
	USART_vidSendString("\r\nEnter User Password :\r\n");
     c02:	80 e2       	ldi	r24, 0x20	; 32
     c04:	91 e0       	ldi	r25, 0x01	; 1
     c06:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <USART_vidSendString>
	for (u8 i=0;i<6;i++)
     c0a:	c0 e0       	ldi	r28, 0x00	; 0
     c0c:	0a c0       	rjmp	.+20     	; 0xc22 <GenerateUser+0x46>
	{
		passwordChar=USART_u8RecieveByte();
     c0e:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <USART_u8RecieveByte>
		EEPROM_vidWrite(USERS_EEPROM_ADDRESS+ NUMBER_OF_USERS_EEPROM +4+i,passwordChar);
     c12:	2c 2f       	mov	r18, r28
     c14:	30 e0       	ldi	r19, 0x00	; 0
     c16:	68 2f       	mov	r22, r24
     c18:	c9 01       	movw	r24, r18
     c1a:	0f 96       	adiw	r24, 0x0f	; 15
     c1c:	0e 94 ba 02 	call	0x574	; 0x574 <EEPROM_vidWrite>
		idChar=USART_u8RecieveByte();
		EEPROM_vidWrite(USERS_EEPROM_ADDRESS+ NUMBER_OF_USERS_EEPROM +i,idChar);
	}
	
	USART_vidSendString("\r\nEnter User Password :\r\n");
	for (u8 i=0;i<6;i++)
     c20:	cf 5f       	subi	r28, 0xFF	; 255
     c22:	c6 30       	cpi	r28, 0x06	; 6
     c24:	a0 f3       	brcs	.-24     	; 0xc0e <GenerateUser+0x32>
	{
		passwordChar=USART_u8RecieveByte();
		EEPROM_vidWrite(USERS_EEPROM_ADDRESS+ NUMBER_OF_USERS_EEPROM +4+i,passwordChar);
	}
	EEPROM_vidWrite(NUMBER_OF_USERS_EEPROM,numOfUsers+1);
     c26:	60 91 cc 01 	lds	r22, 0x01CC	; 0x8001cc <__data_end>
     c2a:	6f 5f       	subi	r22, 0xFF	; 255
     c2c:	81 e0       	ldi	r24, 0x01	; 1
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	0e 94 ba 02 	call	0x574	; 0x574 <EEPROM_vidWrite>
	USART_vidSendString("\r\nThank You :)");
     c34:	8a e3       	ldi	r24, 0x3A	; 58
     c36:	91 e0       	ldi	r25, 0x01	; 1
     c38:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <USART_vidSendString>
}
     c3c:	cf 91       	pop	r28
     c3e:	08 95       	ret

00000c40 <DeleteUser>:


void DeleteUser(){
     c40:	df 92       	push	r13
     c42:	ef 92       	push	r14
     c44:	ff 92       	push	r15
     c46:	0f 93       	push	r16
     c48:	1f 93       	push	r17
     c4a:	cf 93       	push	r28
     c4c:	df 93       	push	r29
     c4e:	cd b7       	in	r28, 0x3d	; 61
     c50:	de b7       	in	r29, 0x3e	; 62
     c52:	28 97       	sbiw	r28, 0x08	; 8
     c54:	0f b6       	in	r0, 0x3f	; 63
     c56:	f8 94       	cli
     c58:	de bf       	out	0x3e, r29	; 62
     c5a:	0f be       	out	0x3f, r0	; 63
     c5c:	cd bf       	out	0x3d, r28	; 61
	
	u8 idC[4],idChar[4],exist=1;
	USART_vidSendString("\r\nEnter User Id :\r\n");
     c5e:	8c e0       	ldi	r24, 0x0C	; 12
     c60:	91 e0       	ldi	r25, 0x01	; 1
     c62:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <USART_vidSendString>
	for (u8 i=0;i<4;i++)
     c66:	10 e0       	ldi	r17, 0x00	; 0
     c68:	0c c0       	rjmp	.+24     	; 0xc82 <DeleteUser+0x42>
	{
		idChar[i]=USART_u8RecieveByte();
     c6a:	e1 2e       	mov	r14, r17
     c6c:	f1 2c       	mov	r15, r1
     c6e:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <USART_u8RecieveByte>
     c72:	e5 e0       	ldi	r30, 0x05	; 5
     c74:	f0 e0       	ldi	r31, 0x00	; 0
     c76:	ec 0f       	add	r30, r28
     c78:	fd 1f       	adc	r31, r29
     c7a:	ee 0d       	add	r30, r14
     c7c:	ff 1d       	adc	r31, r15
     c7e:	80 83       	st	Z, r24

void DeleteUser(){
	
	u8 idC[4],idChar[4],exist=1;
	USART_vidSendString("\r\nEnter User Id :\r\n");
	for (u8 i=0;i<4;i++)
     c80:	1f 5f       	subi	r17, 0xFF	; 255
     c82:	14 30       	cpi	r17, 0x04	; 4
     c84:	90 f3       	brcs	.-28     	; 0xc6a <DeleteUser+0x2a>
     c86:	e1 2c       	mov	r14, r1
     c88:	dd 24       	eor	r13, r13
     c8a:	d3 94       	inc	r13
     c8c:	44 c0       	rjmp	.+136    	; 0xd16 <DeleteUser+0xd6>
	}
	
	for(u8 i=0;i<numOfUsers;i++){
		
		for(u8 g=0;g<4;g++){
			idC[g]=EEPROM_u8Read(USERS_EEPROM_ADDRESS + i + g);
     c8e:	8e 2d       	mov	r24, r14
     c90:	90 e0       	ldi	r25, 0x00	; 0
     c92:	0a 96       	adiw	r24, 0x0a	; 10
     c94:	0f 2d       	mov	r16, r15
     c96:	10 e0       	ldi	r17, 0x00	; 0
     c98:	80 0f       	add	r24, r16
     c9a:	91 1f       	adc	r25, r17
     c9c:	0e 94 c7 02 	call	0x58e	; 0x58e <EEPROM_u8Read>
     ca0:	e1 e0       	ldi	r30, 0x01	; 1
     ca2:	f0 e0       	ldi	r31, 0x00	; 0
     ca4:	ec 0f       	add	r30, r28
     ca6:	fd 1f       	adc	r31, r29
     ca8:	e0 0f       	add	r30, r16
     caa:	f1 1f       	adc	r31, r17
     cac:	80 83       	st	Z, r24
		idChar[i]=USART_u8RecieveByte();
	}
	
	for(u8 i=0;i<numOfUsers;i++){
		
		for(u8 g=0;g<4;g++){
     cae:	f3 94       	inc	r15
     cb0:	01 c0       	rjmp	.+2      	; 0xcb4 <DeleteUser+0x74>
     cb2:	f1 2c       	mov	r15, r1
     cb4:	83 e0       	ldi	r24, 0x03	; 3
     cb6:	8f 15       	cp	r24, r15
     cb8:	50 f7       	brcc	.-44     	; 0xc8e <DeleteUser+0x4e>
     cba:	20 e0       	ldi	r18, 0x00	; 0
     cbc:	13 c0       	rjmp	.+38     	; 0xce4 <DeleteUser+0xa4>
			idC[g]=EEPROM_u8Read(USERS_EEPROM_ADDRESS + i + g);
		}
		for(u8 j=0;j<4;j++){
			if (idC[j]!=idChar[j])
     cbe:	82 2f       	mov	r24, r18
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	e1 e0       	ldi	r30, 0x01	; 1
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	ec 0f       	add	r30, r28
     cc8:	fd 1f       	adc	r31, r29
     cca:	e8 0f       	add	r30, r24
     ccc:	f9 1f       	adc	r31, r25
     cce:	30 81       	ld	r19, Z
     cd0:	e5 e0       	ldi	r30, 0x05	; 5
     cd2:	f0 e0       	ldi	r31, 0x00	; 0
     cd4:	ec 0f       	add	r30, r28
     cd6:	fd 1f       	adc	r31, r29
     cd8:	e8 0f       	add	r30, r24
     cda:	f9 1f       	adc	r31, r25
     cdc:	80 81       	ld	r24, Z
     cde:	38 13       	cpse	r19, r24
			{
				exist=0;
     ce0:	d1 2c       	mov	r13, r1
	for(u8 i=0;i<numOfUsers;i++){
		
		for(u8 g=0;g<4;g++){
			idC[g]=EEPROM_u8Read(USERS_EEPROM_ADDRESS + i + g);
		}
		for(u8 j=0;j<4;j++){
     ce2:	2f 5f       	subi	r18, 0xFF	; 255
     ce4:	24 30       	cpi	r18, 0x04	; 4
     ce6:	58 f3       	brcs	.-42     	; 0xcbe <DeleteUser+0x7e>
			if (idC[j]!=idChar[j])
			{
				exist=0;
			}
		}
		if(exist==1){
     ce8:	81 e0       	ldi	r24, 0x01	; 1
     cea:	d8 12       	cpse	r13, r24
     cec:	13 c0       	rjmp	.+38     	; 0xd14 <DeleteUser+0xd4>
     cee:	0a c0       	rjmp	.+20     	; 0xd04 <DeleteUser+0xc4>
			for(u8 j=0;j<10;j++){
				EEPROM_vidWrite(USERS_EEPROM_ADDRESS+i+j,'A');
     cf0:	8e 2d       	mov	r24, r14
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	0a 96       	adiw	r24, 0x0a	; 10
     cf6:	61 e4       	ldi	r22, 0x41	; 65
     cf8:	81 0f       	add	r24, r17
     cfa:	91 1d       	adc	r25, r1
     cfc:	0e 94 ba 02 	call	0x574	; 0x574 <EEPROM_vidWrite>
			{
				exist=0;
			}
		}
		if(exist==1){
			for(u8 j=0;j<10;j++){
     d00:	1f 5f       	subi	r17, 0xFF	; 255
     d02:	01 c0       	rjmp	.+2      	; 0xd06 <DeleteUser+0xc6>
     d04:	10 e0       	ldi	r17, 0x00	; 0
     d06:	1a 30       	cpi	r17, 0x0A	; 10
     d08:	98 f3       	brcs	.-26     	; 0xcf0 <DeleteUser+0xb0>
				EEPROM_vidWrite(USERS_EEPROM_ADDRESS+i+j,'A');
			}
			USART_vidSendString("User Has Been Deleted !\r\n");
     d0a:	89 e4       	ldi	r24, 0x49	; 73
     d0c:	91 e0       	ldi	r25, 0x01	; 1
     d0e:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <USART_vidSendString>
			break;
     d12:	05 c0       	rjmp	.+10     	; 0xd1e <DeleteUser+0xde>
	for (u8 i=0;i<4;i++)
	{
		idChar[i]=USART_u8RecieveByte();
	}
	
	for(u8 i=0;i<numOfUsers;i++){
     d14:	e3 94       	inc	r14
     d16:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <__data_end>
     d1a:	e8 16       	cp	r14, r24
     d1c:	50 f2       	brcs	.-108    	; 0xcb2 <DeleteUser+0x72>
			USART_vidSendString("User Has Been Deleted !\r\n");
			break;
		}
	}
	
	EEPROM_vidWrite(NUMBER_OF_USERS_EEPROM,numOfUsers-1);
     d1e:	60 91 cc 01 	lds	r22, 0x01CC	; 0x8001cc <__data_end>
     d22:	61 50       	subi	r22, 0x01	; 1
     d24:	81 e0       	ldi	r24, 0x01	; 1
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	0e 94 ba 02 	call	0x574	; 0x574 <EEPROM_vidWrite>
	USART_vidSendString("\r\nThank You :)");
     d2c:	8a e3       	ldi	r24, 0x3A	; 58
     d2e:	91 e0       	ldi	r25, 0x01	; 1
     d30:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <USART_vidSendString>
}
     d34:	28 96       	adiw	r28, 0x08	; 8
     d36:	0f b6       	in	r0, 0x3f	; 63
     d38:	f8 94       	cli
     d3a:	de bf       	out	0x3e, r29	; 62
     d3c:	0f be       	out	0x3f, r0	; 63
     d3e:	cd bf       	out	0x3d, r28	; 61
     d40:	df 91       	pop	r29
     d42:	cf 91       	pop	r28
     d44:	1f 91       	pop	r17
     d46:	0f 91       	pop	r16
     d48:	ff 90       	pop	r15
     d4a:	ef 90       	pop	r14
     d4c:	df 90       	pop	r13
     d4e:	08 95       	ret

00000d50 <ResetAdminPassword>:

void ResetAdminPassword(){
     d50:	cf 93       	push	r28
     d52:	df 93       	push	r29
	u8 recievedResetCode[4];
	u8 flag=0,passwordChar;
	USART_vidSendString("\r\nEnter Reset Code :\r\n");
     d54:	83 e6       	ldi	r24, 0x63	; 99
     d56:	91 e0       	ldi	r25, 0x01	; 1
     d58:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <USART_vidSendString>
	for (u8 i=0;i<4;i++)
     d5c:	c0 e0       	ldi	r28, 0x00	; 0
	USART_vidSendString("\r\nThank You :)");
}

void ResetAdminPassword(){
	u8 recievedResetCode[4];
	u8 flag=0,passwordChar;
     d5e:	d0 e0       	ldi	r29, 0x00	; 0
	USART_vidSendString("\r\nEnter Reset Code :\r\n");
	for (u8 i=0;i<4;i++)
     d60:	0c c0       	rjmp	.+24     	; 0xd7a <ResetAdminPassword+0x2a>
	{
		recievedResetCode[i]=USART_u8RecieveByte();
     d62:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <USART_u8RecieveByte>
		
		if(recievedResetCode[i] != resetCode[i])
     d66:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     d6a:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     d6e:	ec 0f       	add	r30, r28
     d70:	f1 1d       	adc	r31, r1
     d72:	90 81       	ld	r25, Z
     d74:	89 13       	cpse	r24, r25
		{
			flag=1;
     d76:	d1 e0       	ldi	r29, 0x01	; 1

void ResetAdminPassword(){
	u8 recievedResetCode[4];
	u8 flag=0,passwordChar;
	USART_vidSendString("\r\nEnter Reset Code :\r\n");
	for (u8 i=0;i<4;i++)
     d78:	cf 5f       	subi	r28, 0xFF	; 255
     d7a:	c4 30       	cpi	r28, 0x04	; 4
     d7c:	90 f3       	brcs	.-28     	; 0xd62 <ResetAdminPassword+0x12>
		if(recievedResetCode[i] != resetCode[i])
		{
			flag=1;
		}
	}
	if(flag != 1)
     d7e:	d1 30       	cpi	r29, 0x01	; 1
     d80:	c1 f0       	breq	.+48     	; 0xdb2 <ResetAdminPassword+0x62>
	{
		USART_vidSendString("\r\nEnter New Password :\r\n");
     d82:	8a e7       	ldi	r24, 0x7A	; 122
     d84:	91 e0       	ldi	r25, 0x01	; 1
     d86:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <USART_vidSendString>
		for (u8 i=0;i<6;i++)
     d8a:	c0 e0       	ldi	r28, 0x00	; 0
     d8c:	0b c0       	rjmp	.+22     	; 0xda4 <ResetAdminPassword+0x54>
		{
			passwordChar=USART_u8RecieveByte();
     d8e:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <USART_u8RecieveByte>
			EEPROM_vidWrite(ADMIN_EEPROM_ADDRESS + 4 + i,passwordChar);
     d92:	2c 2f       	mov	r18, r28
     d94:	30 e0       	ldi	r19, 0x00	; 0
     d96:	68 2f       	mov	r22, r24
     d98:	c9 01       	movw	r24, r18
     d9a:	8a 50       	subi	r24, 0x0A	; 10
     d9c:	9c 4f       	sbci	r25, 0xFC	; 252
     d9e:	0e 94 ba 02 	call	0x574	; 0x574 <EEPROM_vidWrite>
		}
	}
	if(flag != 1)
	{
		USART_vidSendString("\r\nEnter New Password :\r\n");
		for (u8 i=0;i<6;i++)
     da2:	cf 5f       	subi	r28, 0xFF	; 255
     da4:	c6 30       	cpi	r28, 0x06	; 6
     da6:	98 f3       	brcs	.-26     	; 0xd8e <ResetAdminPassword+0x3e>
		{
			passwordChar=USART_u8RecieveByte();
			EEPROM_vidWrite(ADMIN_EEPROM_ADDRESS + 4 + i,passwordChar);
		}
		
		USART_vidSendString("\r\nThank You :)\r\n");
     da8:	83 e9       	ldi	r24, 0x93	; 147
     daa:	91 e0       	ldi	r25, 0x01	; 1
     dac:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <USART_vidSendString>
     db0:	04 c0       	rjmp	.+8      	; 0xdba <ResetAdminPassword+0x6a>
		
	}else
	{
		USART_vidSendString("\r\nYour Reset Code is Wrong \r\n");
     db2:	84 ea       	ldi	r24, 0xA4	; 164
     db4:	91 e0       	ldi	r25, 0x01	; 1
     db6:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <USART_vidSendString>
	}
	
}
     dba:	df 91       	pop	r29
     dbc:	cf 91       	pop	r28
     dbe:	08 95       	ret

00000dc0 <CHECK_COMMAND>:
void CHECK_COMMAND(void *pvData)
{
	u8 RECIEVED_COMMAND;
	while (1)
	{
		RECIEVED_COMMAND=USART_u8RecieveByte();
     dc0:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <USART_u8RecieveByte>
     dc4:	e8 2f       	mov	r30, r24
		if (RECIEVED_COMMAND != NO_CHANGE)
     dc6:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <NO_CHANGE>
     dca:	e8 17       	cp	r30, r24
     dcc:	c9 f3       	breq	.-14     	; 0xdc0 <CHECK_COMMAND>
		{
			switch (RECIEVED_COMMAND) {
     dce:	8e 2f       	mov	r24, r30
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	fc 01       	movw	r30, r24
     dd4:	f1 97       	sbiw	r30, 0x31	; 49
     dd6:	e5 32       	cpi	r30, 0x25	; 37
     dd8:	f1 05       	cpc	r31, r1
     dda:	90 f7       	brcc	.-28     	; 0xdc0 <CHECK_COMMAND>
     ddc:	e6 5d       	subi	r30, 0xD6	; 214
     dde:	ff 4f       	sbci	r31, 0xFF	; 255
     de0:	0c 94 9d 10 	jmp	0x213a	; 0x213a <__tablejump2__>
				case 'U' :
					GenerateUser();
     de4:	0e 94 ee 05 	call	0xbdc	; 0xbdc <GenerateUser>
					break;
     de8:	eb cf       	rjmp	.-42     	; 0xdc0 <CHECK_COMMAND>
				case 'D' :
					DeleteUser();
     dea:	0e 94 20 06 	call	0xc40	; 0xc40 <DeleteUser>
					break;
     dee:	e8 cf       	rjmp	.-48     	; 0xdc0 <CHECK_COMMAND>
				case 'R' :
					ResetAdminPassword();
     df0:	0e 94 a8 06 	call	0xd50	; 0xd50 <ResetAdminPassword>
					break;
     df4:	e5 cf       	rjmp	.-54     	; 0xdc0 <CHECK_COMMAND>
				case '1' :
					LED_vidLedToggle(GPIOB,PIN0);
     df6:	60 e0       	ldi	r22, 0x00	; 0
     df8:	82 e0       	ldi	r24, 0x02	; 2
     dfa:	0e 94 cf 03 	call	0x79e	; 0x79e <LED_vidLedToggle>
					break;
     dfe:	e0 cf       	rjmp	.-64     	; 0xdc0 <CHECK_COMMAND>
				case '2' :
					LED_vidLedToggle(GPIOB,PIN1);
     e00:	61 e0       	ldi	r22, 0x01	; 1
     e02:	82 e0       	ldi	r24, 0x02	; 2
     e04:	0e 94 cf 03 	call	0x79e	; 0x79e <LED_vidLedToggle>
					break;
     e08:	db cf       	rjmp	.-74     	; 0xdc0 <CHECK_COMMAND>
				case '3' :
					LED_vidLedToggle(GPIOB,PIN2);
     e0a:	62 e0       	ldi	r22, 0x02	; 2
     e0c:	82 e0       	ldi	r24, 0x02	; 2
     e0e:	0e 94 cf 03 	call	0x79e	; 0x79e <LED_vidLedToggle>
					break;
     e12:	d6 cf       	rjmp	.-84     	; 0xdc0 <CHECK_COMMAND>
				case '4' :
					LED_vidLedToggle(GPIOD,PIN2);
     e14:	62 e0       	ldi	r22, 0x02	; 2
     e16:	84 e0       	ldi	r24, 0x04	; 4
     e18:	0e 94 cf 03 	call	0x79e	; 0x79e <LED_vidLedToggle>
					break;
     e1c:	d1 cf       	rjmp	.-94     	; 0xdc0 <CHECK_COMMAND>
				case '5' :
					LED_vidLedToggle(GPIOD,PIN3);
     e1e:	63 e0       	ldi	r22, 0x03	; 3
     e20:	84 e0       	ldi	r24, 0x04	; 4
     e22:	0e 94 cf 03 	call	0x79e	; 0x79e <LED_vidLedToggle>
					break;
     e26:	cc cf       	rjmp	.-104    	; 0xdc0 <CHECK_COMMAND>
				case '6' :
					LED_vidLedToggle(GPIOD,PIN4);
     e28:	64 e0       	ldi	r22, 0x04	; 4
     e2a:	84 e0       	ldi	r24, 0x04	; 4
     e2c:	0e 94 cf 03 	call	0x79e	; 0x79e <LED_vidLedToggle>
					break;
     e30:	c7 cf       	rjmp	.-114    	; 0xdc0 <CHECK_COMMAND>
				case 'O' :
					Motor2_ClockWise(50);
     e32:	82 e3       	ldi	r24, 0x32	; 50
     e34:	0e 94 64 07 	call	0xec8	; 0xec8 <Motor2_ClockWise>
					break;
     e38:	c3 cf       	rjmp	.-122    	; 0xdc0 <CHECK_COMMAND>
				case 'C' :
					Motor2_Stop();
     e3a:	0e 94 75 07 	call	0xeea	; 0xeea <Motor2_Stop>
					break;
     e3e:	c0 cf       	rjmp	.-128    	; 0xdc0 <CHECK_COMMAND>

00000e40 <motorA_vidInit>:
     e40:	41 e0       	ldi	r20, 0x01	; 1
     e42:	67 e0       	ldi	r22, 0x07	; 7
     e44:	82 e0       	ldi	r24, 0x02	; 2
     e46:	0e 94 a2 00 	call	0x144	; 0x144 <DIO_vidSetPinMode>
     e4a:	41 e0       	ldi	r20, 0x01	; 1
     e4c:	66 e0       	ldi	r22, 0x06	; 6
     e4e:	82 e0       	ldi	r24, 0x02	; 2
     e50:	0e 94 a2 00 	call	0x144	; 0x144 <DIO_vidSetPinMode>
     e54:	41 e0       	ldi	r20, 0x01	; 1
     e56:	63 e0       	ldi	r22, 0x03	; 3
     e58:	82 e0       	ldi	r24, 0x02	; 2
     e5a:	0e 94 a2 00 	call	0x144	; 0x144 <DIO_vidSetPinMode>
     e5e:	0e 94 3c 0e 	call	0x1c78	; 0x1c78 <PWM2_vidInit>
     e62:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <PWM2_vidStart>
     e66:	08 95       	ret

00000e68 <motorB_vidInit>:
     e68:	41 e0       	ldi	r20, 0x01	; 1
     e6a:	67 e0       	ldi	r22, 0x07	; 7
     e6c:	84 e0       	ldi	r24, 0x04	; 4
     e6e:	0e 94 a2 00 	call	0x144	; 0x144 <DIO_vidSetPinMode>
     e72:	41 e0       	ldi	r20, 0x01	; 1
     e74:	65 e0       	ldi	r22, 0x05	; 5
     e76:	82 e0       	ldi	r24, 0x02	; 2
     e78:	0e 94 a2 00 	call	0x144	; 0x144 <DIO_vidSetPinMode>
     e7c:	41 e0       	ldi	r20, 0x01	; 1
     e7e:	64 e0       	ldi	r22, 0x04	; 4
     e80:	82 e0       	ldi	r24, 0x02	; 2
     e82:	0e 94 a2 00 	call	0x144	; 0x144 <DIO_vidSetPinMode>
     e86:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <PWM0_vidInit>
     e8a:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <PWM0_vidStart>
     e8e:	08 95       	ret

00000e90 <Motor1_ClockWise>:
     e90:	cf 93       	push	r28
     e92:	c8 2f       	mov	r28, r24
     e94:	41 e0       	ldi	r20, 0x01	; 1
     e96:	67 e0       	ldi	r22, 0x07	; 7
     e98:	82 e0       	ldi	r24, 0x02	; 2
     e9a:	0e 94 12 01 	call	0x224	; 0x224 <DIO_vidWritePin>
     e9e:	40 e0       	ldi	r20, 0x00	; 0
     ea0:	66 e0       	ldi	r22, 0x06	; 6
     ea2:	82 e0       	ldi	r24, 0x02	; 2
     ea4:	0e 94 12 01 	call	0x224	; 0x224 <DIO_vidWritePin>
     ea8:	8c 2f       	mov	r24, r28
     eaa:	0e 94 21 0e 	call	0x1c42	; 0x1c42 <PWM0_vidGenerate>
     eae:	cf 91       	pop	r28
     eb0:	08 95       	ret

00000eb2 <Motor1_Stop>:
     eb2:	41 e0       	ldi	r20, 0x01	; 1
     eb4:	67 e0       	ldi	r22, 0x07	; 7
     eb6:	82 e0       	ldi	r24, 0x02	; 2
     eb8:	0e 94 12 01 	call	0x224	; 0x224 <DIO_vidWritePin>
     ebc:	41 e0       	ldi	r20, 0x01	; 1
     ebe:	66 e0       	ldi	r22, 0x06	; 6
     ec0:	82 e0       	ldi	r24, 0x02	; 2
     ec2:	0e 94 12 01 	call	0x224	; 0x224 <DIO_vidWritePin>
     ec6:	08 95       	ret

00000ec8 <Motor2_ClockWise>:
     ec8:	cf 93       	push	r28
     eca:	c8 2f       	mov	r28, r24
     ecc:	41 e0       	ldi	r20, 0x01	; 1
     ece:	65 e0       	ldi	r22, 0x05	; 5
     ed0:	82 e0       	ldi	r24, 0x02	; 2
     ed2:	0e 94 12 01 	call	0x224	; 0x224 <DIO_vidWritePin>
     ed6:	40 e0       	ldi	r20, 0x00	; 0
     ed8:	64 e0       	ldi	r22, 0x04	; 4
     eda:	82 e0       	ldi	r24, 0x02	; 2
     edc:	0e 94 12 01 	call	0x224	; 0x224 <DIO_vidWritePin>
     ee0:	8c 2f       	mov	r24, r28
     ee2:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <PWM2_vidGenerate>
     ee6:	cf 91       	pop	r28
     ee8:	08 95       	ret

00000eea <Motor2_Stop>:
     eea:	41 e0       	ldi	r20, 0x01	; 1
     eec:	65 e0       	ldi	r22, 0x05	; 5
     eee:	82 e0       	ldi	r24, 0x02	; 2
     ef0:	0e 94 12 01 	call	0x224	; 0x224 <DIO_vidWritePin>
     ef4:	41 e0       	ldi	r20, 0x01	; 1
     ef6:	64 e0       	ldi	r22, 0x04	; 4
     ef8:	82 e0       	ldi	r24, 0x02	; 2
     efa:	0e 94 12 01 	call	0x224	; 0x224 <DIO_vidWritePin>
     efe:	08 95       	ret

00000f00 <pvPortMalloc>:
     f00:	cf 93       	push	r28
     f02:	df 93       	push	r29
     f04:	ec 01       	movw	r28, r24
     f06:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <vTaskSuspendAll>
     f0a:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <pucAlignedHeap.1980>
     f0e:	90 91 ce 01 	lds	r25, 0x01CE	; 0x8001ce <pucAlignedHeap.1980+0x1>
     f12:	89 2b       	or	r24, r25
     f14:	31 f4       	brne	.+12     	; 0xf22 <pvPortMalloc+0x22>
     f16:	82 ed       	ldi	r24, 0xD2	; 210
     f18:	91 e0       	ldi	r25, 0x01	; 1
     f1a:	90 93 ce 01 	sts	0x01CE, r25	; 0x8001ce <pucAlignedHeap.1980+0x1>
     f1e:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <pucAlignedHeap.1980>
     f22:	20 91 cf 01 	lds	r18, 0x01CF	; 0x8001cf <xNextFreeByte>
     f26:	30 91 d0 01 	lds	r19, 0x01D0	; 0x8001d0 <xNextFreeByte+0x1>
     f2a:	c9 01       	movw	r24, r18
     f2c:	8c 0f       	add	r24, r28
     f2e:	9d 1f       	adc	r25, r29
     f30:	8b 3d       	cpi	r24, 0xDB	; 219
     f32:	45 e0       	ldi	r20, 0x05	; 5
     f34:	94 07       	cpc	r25, r20
     f36:	70 f4       	brcc	.+28     	; 0xf54 <pvPortMalloc+0x54>
     f38:	28 17       	cp	r18, r24
     f3a:	39 07       	cpc	r19, r25
     f3c:	70 f4       	brcc	.+28     	; 0xf5a <pvPortMalloc+0x5a>
     f3e:	c0 91 cd 01 	lds	r28, 0x01CD	; 0x8001cd <pucAlignedHeap.1980>
     f42:	d0 91 ce 01 	lds	r29, 0x01CE	; 0x8001ce <pucAlignedHeap.1980+0x1>
     f46:	c2 0f       	add	r28, r18
     f48:	d3 1f       	adc	r29, r19
     f4a:	90 93 d0 01 	sts	0x01D0, r25	; 0x8001d0 <xNextFreeByte+0x1>
     f4e:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <xNextFreeByte>
     f52:	05 c0       	rjmp	.+10     	; 0xf5e <pvPortMalloc+0x5e>
     f54:	c0 e0       	ldi	r28, 0x00	; 0
     f56:	d0 e0       	ldi	r29, 0x00	; 0
     f58:	02 c0       	rjmp	.+4      	; 0xf5e <pvPortMalloc+0x5e>
     f5a:	c0 e0       	ldi	r28, 0x00	; 0
     f5c:	d0 e0       	ldi	r29, 0x00	; 0
     f5e:	0e 94 a6 0c 	call	0x194c	; 0x194c <xTaskResumeAll>
     f62:	ce 01       	movw	r24, r28
     f64:	df 91       	pop	r29
     f66:	cf 91       	pop	r28
     f68:	08 95       	ret

00000f6a <vPortFree>:
     f6a:	08 95       	ret

00000f6c <vListInitialise>:
     f6c:	fc 01       	movw	r30, r24
     f6e:	03 96       	adiw	r24, 0x03	; 3
     f70:	92 83       	std	Z+2, r25	; 0x02
     f72:	81 83       	std	Z+1, r24	; 0x01
     f74:	2f ef       	ldi	r18, 0xFF	; 255
     f76:	3f ef       	ldi	r19, 0xFF	; 255
     f78:	34 83       	std	Z+4, r19	; 0x04
     f7a:	23 83       	std	Z+3, r18	; 0x03
     f7c:	96 83       	std	Z+6, r25	; 0x06
     f7e:	85 83       	std	Z+5, r24	; 0x05
     f80:	90 87       	std	Z+8, r25	; 0x08
     f82:	87 83       	std	Z+7, r24	; 0x07
     f84:	10 82       	st	Z, r1
     f86:	08 95       	ret

00000f88 <vListInitialiseItem>:
     f88:	fc 01       	movw	r30, r24
     f8a:	11 86       	std	Z+9, r1	; 0x09
     f8c:	10 86       	std	Z+8, r1	; 0x08
     f8e:	08 95       	ret

00000f90 <vListInsertEnd>:
     f90:	cf 93       	push	r28
     f92:	df 93       	push	r29
     f94:	9c 01       	movw	r18, r24
     f96:	fb 01       	movw	r30, r22
     f98:	dc 01       	movw	r26, r24
     f9a:	11 96       	adiw	r26, 0x01	; 1
     f9c:	cd 91       	ld	r28, X+
     f9e:	dc 91       	ld	r29, X
     fa0:	12 97       	sbiw	r26, 0x02	; 2
     fa2:	d3 83       	std	Z+3, r29	; 0x03
     fa4:	c2 83       	std	Z+2, r28	; 0x02
     fa6:	8c 81       	ldd	r24, Y+4	; 0x04
     fa8:	9d 81       	ldd	r25, Y+5	; 0x05
     faa:	95 83       	std	Z+5, r25	; 0x05
     fac:	84 83       	std	Z+4, r24	; 0x04
     fae:	8c 81       	ldd	r24, Y+4	; 0x04
     fb0:	9d 81       	ldd	r25, Y+5	; 0x05
     fb2:	dc 01       	movw	r26, r24
     fb4:	13 96       	adiw	r26, 0x03	; 3
     fb6:	7c 93       	st	X, r23
     fb8:	6e 93       	st	-X, r22
     fba:	12 97       	sbiw	r26, 0x02	; 2
     fbc:	7d 83       	std	Y+5, r23	; 0x05
     fbe:	6c 83       	std	Y+4, r22	; 0x04
     fc0:	31 87       	std	Z+9, r19	; 0x09
     fc2:	20 87       	std	Z+8, r18	; 0x08
     fc4:	f9 01       	movw	r30, r18
     fc6:	80 81       	ld	r24, Z
     fc8:	8f 5f       	subi	r24, 0xFF	; 255
     fca:	80 83       	st	Z, r24
     fcc:	df 91       	pop	r29
     fce:	cf 91       	pop	r28
     fd0:	08 95       	ret

00000fd2 <vListInsert>:
     fd2:	cf 93       	push	r28
     fd4:	df 93       	push	r29
     fd6:	eb 01       	movw	r28, r22
     fd8:	48 81       	ld	r20, Y
     fda:	59 81       	ldd	r21, Y+1	; 0x01
     fdc:	4f 3f       	cpi	r20, 0xFF	; 255
     fde:	2f ef       	ldi	r18, 0xFF	; 255
     fe0:	52 07       	cpc	r21, r18
     fe2:	21 f4       	brne	.+8      	; 0xfec <vListInsert+0x1a>
     fe4:	fc 01       	movw	r30, r24
     fe6:	a7 81       	ldd	r26, Z+7	; 0x07
     fe8:	b0 85       	ldd	r27, Z+8	; 0x08
     fea:	0d c0       	rjmp	.+26     	; 0x1006 <vListInsert+0x34>
     fec:	dc 01       	movw	r26, r24
     fee:	13 96       	adiw	r26, 0x03	; 3
     ff0:	01 c0       	rjmp	.+2      	; 0xff4 <vListInsert+0x22>
     ff2:	df 01       	movw	r26, r30
     ff4:	12 96       	adiw	r26, 0x02	; 2
     ff6:	ed 91       	ld	r30, X+
     ff8:	fc 91       	ld	r31, X
     ffa:	13 97       	sbiw	r26, 0x03	; 3
     ffc:	20 81       	ld	r18, Z
     ffe:	31 81       	ldd	r19, Z+1	; 0x01
    1000:	42 17       	cp	r20, r18
    1002:	53 07       	cpc	r21, r19
    1004:	b0 f7       	brcc	.-20     	; 0xff2 <vListInsert+0x20>
    1006:	12 96       	adiw	r26, 0x02	; 2
    1008:	ed 91       	ld	r30, X+
    100a:	fc 91       	ld	r31, X
    100c:	13 97       	sbiw	r26, 0x03	; 3
    100e:	fb 83       	std	Y+3, r31	; 0x03
    1010:	ea 83       	std	Y+2, r30	; 0x02
    1012:	d5 83       	std	Z+5, r29	; 0x05
    1014:	c4 83       	std	Z+4, r28	; 0x04
    1016:	bd 83       	std	Y+5, r27	; 0x05
    1018:	ac 83       	std	Y+4, r26	; 0x04
    101a:	13 96       	adiw	r26, 0x03	; 3
    101c:	dc 93       	st	X, r29
    101e:	ce 93       	st	-X, r28
    1020:	12 97       	sbiw	r26, 0x02	; 2
    1022:	99 87       	std	Y+9, r25	; 0x09
    1024:	88 87       	std	Y+8, r24	; 0x08
    1026:	fc 01       	movw	r30, r24
    1028:	20 81       	ld	r18, Z
    102a:	2f 5f       	subi	r18, 0xFF	; 255
    102c:	20 83       	st	Z, r18
    102e:	df 91       	pop	r29
    1030:	cf 91       	pop	r28
    1032:	08 95       	ret

00001034 <uxListRemove>:
    1034:	cf 93       	push	r28
    1036:	df 93       	push	r29
    1038:	fc 01       	movw	r30, r24
    103a:	a0 85       	ldd	r26, Z+8	; 0x08
    103c:	b1 85       	ldd	r27, Z+9	; 0x09
    103e:	c2 81       	ldd	r28, Z+2	; 0x02
    1040:	d3 81       	ldd	r29, Z+3	; 0x03
    1042:	84 81       	ldd	r24, Z+4	; 0x04
    1044:	95 81       	ldd	r25, Z+5	; 0x05
    1046:	9d 83       	std	Y+5, r25	; 0x05
    1048:	8c 83       	std	Y+4, r24	; 0x04
    104a:	c4 81       	ldd	r28, Z+4	; 0x04
    104c:	d5 81       	ldd	r29, Z+5	; 0x05
    104e:	82 81       	ldd	r24, Z+2	; 0x02
    1050:	93 81       	ldd	r25, Z+3	; 0x03
    1052:	9b 83       	std	Y+3, r25	; 0x03
    1054:	8a 83       	std	Y+2, r24	; 0x02
    1056:	11 96       	adiw	r26, 0x01	; 1
    1058:	8d 91       	ld	r24, X+
    105a:	9c 91       	ld	r25, X
    105c:	12 97       	sbiw	r26, 0x02	; 2
    105e:	e8 17       	cp	r30, r24
    1060:	f9 07       	cpc	r31, r25
    1062:	31 f4       	brne	.+12     	; 0x1070 <uxListRemove+0x3c>
    1064:	84 81       	ldd	r24, Z+4	; 0x04
    1066:	95 81       	ldd	r25, Z+5	; 0x05
    1068:	12 96       	adiw	r26, 0x02	; 2
    106a:	9c 93       	st	X, r25
    106c:	8e 93       	st	-X, r24
    106e:	11 97       	sbiw	r26, 0x01	; 1
    1070:	11 86       	std	Z+9, r1	; 0x09
    1072:	10 86       	std	Z+8, r1	; 0x08
    1074:	8c 91       	ld	r24, X
    1076:	81 50       	subi	r24, 0x01	; 1
    1078:	8c 93       	st	X, r24
    107a:	df 91       	pop	r29
    107c:	cf 91       	pop	r28
    107e:	08 95       	ret

00001080 <prvSetupTimerInterrupt>:
    1080:	1b bc       	out	0x2b, r1	; 43
    1082:	8c e7       	ldi	r24, 0x7C	; 124
    1084:	8a bd       	out	0x2a, r24	; 42
    1086:	8b e0       	ldi	r24, 0x0B	; 11
    1088:	8e bd       	out	0x2e, r24	; 46
    108a:	89 b7       	in	r24, 0x39	; 57
    108c:	80 61       	ori	r24, 0x10	; 16
    108e:	89 bf       	out	0x39, r24	; 57
    1090:	08 95       	ret

00001092 <pxPortInitialiseStack>:
    1092:	31 e1       	ldi	r19, 0x11	; 17
    1094:	fc 01       	movw	r30, r24
    1096:	30 83       	st	Z, r19
    1098:	31 97       	sbiw	r30, 0x01	; 1
    109a:	22 e2       	ldi	r18, 0x22	; 34
    109c:	20 83       	st	Z, r18
    109e:	31 97       	sbiw	r30, 0x01	; 1
    10a0:	a3 e3       	ldi	r26, 0x33	; 51
    10a2:	a0 83       	st	Z, r26
    10a4:	31 97       	sbiw	r30, 0x01	; 1
    10a6:	60 83       	st	Z, r22
    10a8:	31 97       	sbiw	r30, 0x01	; 1
    10aa:	70 83       	st	Z, r23
    10ac:	31 97       	sbiw	r30, 0x01	; 1
    10ae:	10 82       	st	Z, r1
    10b0:	31 97       	sbiw	r30, 0x01	; 1
    10b2:	60 e8       	ldi	r22, 0x80	; 128
    10b4:	60 83       	st	Z, r22
    10b6:	31 97       	sbiw	r30, 0x01	; 1
    10b8:	10 82       	st	Z, r1
    10ba:	31 97       	sbiw	r30, 0x01	; 1
    10bc:	62 e0       	ldi	r22, 0x02	; 2
    10be:	60 83       	st	Z, r22
    10c0:	31 97       	sbiw	r30, 0x01	; 1
    10c2:	63 e0       	ldi	r22, 0x03	; 3
    10c4:	60 83       	st	Z, r22
    10c6:	31 97       	sbiw	r30, 0x01	; 1
    10c8:	64 e0       	ldi	r22, 0x04	; 4
    10ca:	60 83       	st	Z, r22
    10cc:	31 97       	sbiw	r30, 0x01	; 1
    10ce:	65 e0       	ldi	r22, 0x05	; 5
    10d0:	60 83       	st	Z, r22
    10d2:	31 97       	sbiw	r30, 0x01	; 1
    10d4:	66 e0       	ldi	r22, 0x06	; 6
    10d6:	60 83       	st	Z, r22
    10d8:	31 97       	sbiw	r30, 0x01	; 1
    10da:	67 e0       	ldi	r22, 0x07	; 7
    10dc:	60 83       	st	Z, r22
    10de:	31 97       	sbiw	r30, 0x01	; 1
    10e0:	68 e0       	ldi	r22, 0x08	; 8
    10e2:	60 83       	st	Z, r22
    10e4:	31 97       	sbiw	r30, 0x01	; 1
    10e6:	69 e0       	ldi	r22, 0x09	; 9
    10e8:	60 83       	st	Z, r22
    10ea:	31 97       	sbiw	r30, 0x01	; 1
    10ec:	60 e1       	ldi	r22, 0x10	; 16
    10ee:	60 83       	st	Z, r22
    10f0:	31 97       	sbiw	r30, 0x01	; 1
    10f2:	30 83       	st	Z, r19
    10f4:	31 97       	sbiw	r30, 0x01	; 1
    10f6:	32 e1       	ldi	r19, 0x12	; 18
    10f8:	30 83       	st	Z, r19
    10fa:	31 97       	sbiw	r30, 0x01	; 1
    10fc:	33 e1       	ldi	r19, 0x13	; 19
    10fe:	30 83       	st	Z, r19
    1100:	31 97       	sbiw	r30, 0x01	; 1
    1102:	34 e1       	ldi	r19, 0x14	; 20
    1104:	30 83       	st	Z, r19
    1106:	31 97       	sbiw	r30, 0x01	; 1
    1108:	35 e1       	ldi	r19, 0x15	; 21
    110a:	30 83       	st	Z, r19
    110c:	31 97       	sbiw	r30, 0x01	; 1
    110e:	36 e1       	ldi	r19, 0x16	; 22
    1110:	30 83       	st	Z, r19
    1112:	31 97       	sbiw	r30, 0x01	; 1
    1114:	37 e1       	ldi	r19, 0x17	; 23
    1116:	30 83       	st	Z, r19
    1118:	31 97       	sbiw	r30, 0x01	; 1
    111a:	38 e1       	ldi	r19, 0x18	; 24
    111c:	30 83       	st	Z, r19
    111e:	31 97       	sbiw	r30, 0x01	; 1
    1120:	39 e1       	ldi	r19, 0x19	; 25
    1122:	30 83       	st	Z, r19
    1124:	31 97       	sbiw	r30, 0x01	; 1
    1126:	30 e2       	ldi	r19, 0x20	; 32
    1128:	30 83       	st	Z, r19
    112a:	31 97       	sbiw	r30, 0x01	; 1
    112c:	31 e2       	ldi	r19, 0x21	; 33
    112e:	30 83       	st	Z, r19
    1130:	31 97       	sbiw	r30, 0x01	; 1
    1132:	20 83       	st	Z, r18
    1134:	31 97       	sbiw	r30, 0x01	; 1
    1136:	23 e2       	ldi	r18, 0x23	; 35
    1138:	20 83       	st	Z, r18
    113a:	31 97       	sbiw	r30, 0x01	; 1
    113c:	40 83       	st	Z, r20
    113e:	31 97       	sbiw	r30, 0x01	; 1
    1140:	50 83       	st	Z, r21
    1142:	31 97       	sbiw	r30, 0x01	; 1
    1144:	26 e2       	ldi	r18, 0x26	; 38
    1146:	20 83       	st	Z, r18
    1148:	31 97       	sbiw	r30, 0x01	; 1
    114a:	27 e2       	ldi	r18, 0x27	; 39
    114c:	20 83       	st	Z, r18
    114e:	31 97       	sbiw	r30, 0x01	; 1
    1150:	28 e2       	ldi	r18, 0x28	; 40
    1152:	20 83       	st	Z, r18
    1154:	31 97       	sbiw	r30, 0x01	; 1
    1156:	29 e2       	ldi	r18, 0x29	; 41
    1158:	20 83       	st	Z, r18
    115a:	31 97       	sbiw	r30, 0x01	; 1
    115c:	20 e3       	ldi	r18, 0x30	; 48
    115e:	20 83       	st	Z, r18
    1160:	31 97       	sbiw	r30, 0x01	; 1
    1162:	21 e3       	ldi	r18, 0x31	; 49
    1164:	20 83       	st	Z, r18
    1166:	86 97       	sbiw	r24, 0x26	; 38
    1168:	08 95       	ret

0000116a <xPortStartScheduler>:
    116a:	0e 94 40 08 	call	0x1080	; 0x1080 <prvSetupTimerInterrupt>
    116e:	a0 91 04 08 	lds	r26, 0x0804	; 0x800804 <pxCurrentTCB>
    1172:	b0 91 05 08 	lds	r27, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    1176:	cd 91       	ld	r28, X+
    1178:	cd bf       	out	0x3d, r28	; 61
    117a:	dd 91       	ld	r29, X+
    117c:	de bf       	out	0x3e, r29	; 62
    117e:	ff 91       	pop	r31
    1180:	ef 91       	pop	r30
    1182:	df 91       	pop	r29
    1184:	cf 91       	pop	r28
    1186:	bf 91       	pop	r27
    1188:	af 91       	pop	r26
    118a:	9f 91       	pop	r25
    118c:	8f 91       	pop	r24
    118e:	7f 91       	pop	r23
    1190:	6f 91       	pop	r22
    1192:	5f 91       	pop	r21
    1194:	4f 91       	pop	r20
    1196:	3f 91       	pop	r19
    1198:	2f 91       	pop	r18
    119a:	1f 91       	pop	r17
    119c:	0f 91       	pop	r16
    119e:	ff 90       	pop	r15
    11a0:	ef 90       	pop	r14
    11a2:	df 90       	pop	r13
    11a4:	cf 90       	pop	r12
    11a6:	bf 90       	pop	r11
    11a8:	af 90       	pop	r10
    11aa:	9f 90       	pop	r9
    11ac:	8f 90       	pop	r8
    11ae:	7f 90       	pop	r7
    11b0:	6f 90       	pop	r6
    11b2:	5f 90       	pop	r5
    11b4:	4f 90       	pop	r4
    11b6:	3f 90       	pop	r3
    11b8:	2f 90       	pop	r2
    11ba:	1f 90       	pop	r1
    11bc:	0f 90       	pop	r0
    11be:	0f be       	out	0x3f, r0	; 63
    11c0:	0f 90       	pop	r0
    11c2:	08 95       	ret
    11c4:	81 e0       	ldi	r24, 0x01	; 1
    11c6:	08 95       	ret

000011c8 <vPortYield>:
    11c8:	0f 92       	push	r0
    11ca:	0f b6       	in	r0, 0x3f	; 63
    11cc:	f8 94       	cli
    11ce:	0f 92       	push	r0
    11d0:	1f 92       	push	r1
    11d2:	11 24       	eor	r1, r1
    11d4:	2f 92       	push	r2
    11d6:	3f 92       	push	r3
    11d8:	4f 92       	push	r4
    11da:	5f 92       	push	r5
    11dc:	6f 92       	push	r6
    11de:	7f 92       	push	r7
    11e0:	8f 92       	push	r8
    11e2:	9f 92       	push	r9
    11e4:	af 92       	push	r10
    11e6:	bf 92       	push	r11
    11e8:	cf 92       	push	r12
    11ea:	df 92       	push	r13
    11ec:	ef 92       	push	r14
    11ee:	ff 92       	push	r15
    11f0:	0f 93       	push	r16
    11f2:	1f 93       	push	r17
    11f4:	2f 93       	push	r18
    11f6:	3f 93       	push	r19
    11f8:	4f 93       	push	r20
    11fa:	5f 93       	push	r21
    11fc:	6f 93       	push	r22
    11fe:	7f 93       	push	r23
    1200:	8f 93       	push	r24
    1202:	9f 93       	push	r25
    1204:	af 93       	push	r26
    1206:	bf 93       	push	r27
    1208:	cf 93       	push	r28
    120a:	df 93       	push	r29
    120c:	ef 93       	push	r30
    120e:	ff 93       	push	r31
    1210:	a0 91 04 08 	lds	r26, 0x0804	; 0x800804 <pxCurrentTCB>
    1214:	b0 91 05 08 	lds	r27, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    1218:	0d b6       	in	r0, 0x3d	; 61
    121a:	0d 92       	st	X+, r0
    121c:	0e b6       	in	r0, 0x3e	; 62
    121e:	0d 92       	st	X+, r0
    1220:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <vTaskSwitchContext>
    1224:	a0 91 04 08 	lds	r26, 0x0804	; 0x800804 <pxCurrentTCB>
    1228:	b0 91 05 08 	lds	r27, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    122c:	cd 91       	ld	r28, X+
    122e:	cd bf       	out	0x3d, r28	; 61
    1230:	dd 91       	ld	r29, X+
    1232:	de bf       	out	0x3e, r29	; 62
    1234:	ff 91       	pop	r31
    1236:	ef 91       	pop	r30
    1238:	df 91       	pop	r29
    123a:	cf 91       	pop	r28
    123c:	bf 91       	pop	r27
    123e:	af 91       	pop	r26
    1240:	9f 91       	pop	r25
    1242:	8f 91       	pop	r24
    1244:	7f 91       	pop	r23
    1246:	6f 91       	pop	r22
    1248:	5f 91       	pop	r21
    124a:	4f 91       	pop	r20
    124c:	3f 91       	pop	r19
    124e:	2f 91       	pop	r18
    1250:	1f 91       	pop	r17
    1252:	0f 91       	pop	r16
    1254:	ff 90       	pop	r15
    1256:	ef 90       	pop	r14
    1258:	df 90       	pop	r13
    125a:	cf 90       	pop	r12
    125c:	bf 90       	pop	r11
    125e:	af 90       	pop	r10
    1260:	9f 90       	pop	r9
    1262:	8f 90       	pop	r8
    1264:	7f 90       	pop	r7
    1266:	6f 90       	pop	r6
    1268:	5f 90       	pop	r5
    126a:	4f 90       	pop	r4
    126c:	3f 90       	pop	r3
    126e:	2f 90       	pop	r2
    1270:	1f 90       	pop	r1
    1272:	0f 90       	pop	r0
    1274:	0f be       	out	0x3f, r0	; 63
    1276:	0f 90       	pop	r0
    1278:	08 95       	ret

0000127a <vPortYieldFromTick>:
    127a:	0f 92       	push	r0
    127c:	0f b6       	in	r0, 0x3f	; 63
    127e:	f8 94       	cli
    1280:	0f 92       	push	r0
    1282:	1f 92       	push	r1
    1284:	11 24       	eor	r1, r1
    1286:	2f 92       	push	r2
    1288:	3f 92       	push	r3
    128a:	4f 92       	push	r4
    128c:	5f 92       	push	r5
    128e:	6f 92       	push	r6
    1290:	7f 92       	push	r7
    1292:	8f 92       	push	r8
    1294:	9f 92       	push	r9
    1296:	af 92       	push	r10
    1298:	bf 92       	push	r11
    129a:	cf 92       	push	r12
    129c:	df 92       	push	r13
    129e:	ef 92       	push	r14
    12a0:	ff 92       	push	r15
    12a2:	0f 93       	push	r16
    12a4:	1f 93       	push	r17
    12a6:	2f 93       	push	r18
    12a8:	3f 93       	push	r19
    12aa:	4f 93       	push	r20
    12ac:	5f 93       	push	r21
    12ae:	6f 93       	push	r22
    12b0:	7f 93       	push	r23
    12b2:	8f 93       	push	r24
    12b4:	9f 93       	push	r25
    12b6:	af 93       	push	r26
    12b8:	bf 93       	push	r27
    12ba:	cf 93       	push	r28
    12bc:	df 93       	push	r29
    12be:	ef 93       	push	r30
    12c0:	ff 93       	push	r31
    12c2:	a0 91 04 08 	lds	r26, 0x0804	; 0x800804 <pxCurrentTCB>
    12c6:	b0 91 05 08 	lds	r27, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    12ca:	0d b6       	in	r0, 0x3d	; 61
    12cc:	0d 92       	st	X+, r0
    12ce:	0e b6       	in	r0, 0x3e	; 62
    12d0:	0d 92       	st	X+, r0
    12d2:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <xTaskIncrementTick>
    12d6:	81 11       	cpse	r24, r1
    12d8:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <vTaskSwitchContext>
    12dc:	a0 91 04 08 	lds	r26, 0x0804	; 0x800804 <pxCurrentTCB>
    12e0:	b0 91 05 08 	lds	r27, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    12e4:	cd 91       	ld	r28, X+
    12e6:	cd bf       	out	0x3d, r28	; 61
    12e8:	dd 91       	ld	r29, X+
    12ea:	de bf       	out	0x3e, r29	; 62
    12ec:	ff 91       	pop	r31
    12ee:	ef 91       	pop	r30
    12f0:	df 91       	pop	r29
    12f2:	cf 91       	pop	r28
    12f4:	bf 91       	pop	r27
    12f6:	af 91       	pop	r26
    12f8:	9f 91       	pop	r25
    12fa:	8f 91       	pop	r24
    12fc:	7f 91       	pop	r23
    12fe:	6f 91       	pop	r22
    1300:	5f 91       	pop	r21
    1302:	4f 91       	pop	r20
    1304:	3f 91       	pop	r19
    1306:	2f 91       	pop	r18
    1308:	1f 91       	pop	r17
    130a:	0f 91       	pop	r16
    130c:	ff 90       	pop	r15
    130e:	ef 90       	pop	r14
    1310:	df 90       	pop	r13
    1312:	cf 90       	pop	r12
    1314:	bf 90       	pop	r11
    1316:	af 90       	pop	r10
    1318:	9f 90       	pop	r9
    131a:	8f 90       	pop	r8
    131c:	7f 90       	pop	r7
    131e:	6f 90       	pop	r6
    1320:	5f 90       	pop	r5
    1322:	4f 90       	pop	r4
    1324:	3f 90       	pop	r3
    1326:	2f 90       	pop	r2
    1328:	1f 90       	pop	r1
    132a:	0f 90       	pop	r0
    132c:	0f be       	out	0x3f, r0	; 63
    132e:	0f 90       	pop	r0
    1330:	08 95       	ret

00001332 <__vector_7>:
    1332:	0e 94 3d 09 	call	0x127a	; 0x127a <vPortYieldFromTick>
    1336:	18 95       	reti

00001338 <xQueueGenericReset>:
    1338:	cf 93       	push	r28
    133a:	df 93       	push	r29
    133c:	ec 01       	movw	r28, r24
    133e:	0f b6       	in	r0, 0x3f	; 63
    1340:	f8 94       	cli
    1342:	0f 92       	push	r0
    1344:	e8 81       	ld	r30, Y
    1346:	f9 81       	ldd	r31, Y+1	; 0x01
    1348:	8b 8d       	ldd	r24, Y+27	; 0x1b
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	2c 8d       	ldd	r18, Y+28	; 0x1c
    134e:	30 e0       	ldi	r19, 0x00	; 0
    1350:	82 9f       	mul	r24, r18
    1352:	a0 01       	movw	r20, r0
    1354:	83 9f       	mul	r24, r19
    1356:	50 0d       	add	r21, r0
    1358:	92 9f       	mul	r25, r18
    135a:	50 0d       	add	r21, r0
    135c:	11 24       	eor	r1, r1
    135e:	4e 0f       	add	r20, r30
    1360:	5f 1f       	adc	r21, r31
    1362:	5b 83       	std	Y+3, r21	; 0x03
    1364:	4a 83       	std	Y+2, r20	; 0x02
    1366:	1a 8e       	std	Y+26, r1	; 0x1a
    1368:	fd 83       	std	Y+5, r31	; 0x05
    136a:	ec 83       	std	Y+4, r30	; 0x04
    136c:	01 97       	sbiw	r24, 0x01	; 1
    136e:	28 9f       	mul	r18, r24
    1370:	a0 01       	movw	r20, r0
    1372:	29 9f       	mul	r18, r25
    1374:	50 0d       	add	r21, r0
    1376:	38 9f       	mul	r19, r24
    1378:	50 0d       	add	r21, r0
    137a:	11 24       	eor	r1, r1
    137c:	cf 01       	movw	r24, r30
    137e:	84 0f       	add	r24, r20
    1380:	95 1f       	adc	r25, r21
    1382:	9f 83       	std	Y+7, r25	; 0x07
    1384:	8e 83       	std	Y+6, r24	; 0x06
    1386:	8f ef       	ldi	r24, 0xFF	; 255
    1388:	8d 8f       	std	Y+29, r24	; 0x1d
    138a:	8e 8f       	std	Y+30, r24	; 0x1e
    138c:	61 11       	cpse	r22, r1
    138e:	0c c0       	rjmp	.+24     	; 0x13a8 <xQueueGenericReset+0x70>
    1390:	88 85       	ldd	r24, Y+8	; 0x08
    1392:	88 23       	and	r24, r24
    1394:	89 f0       	breq	.+34     	; 0x13b8 <xQueueGenericReset+0x80>
    1396:	ce 01       	movw	r24, r28
    1398:	08 96       	adiw	r24, 0x08	; 8
    139a:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <xTaskRemoveFromEventList>
    139e:	81 30       	cpi	r24, 0x01	; 1
    13a0:	59 f4       	brne	.+22     	; 0x13b8 <xQueueGenericReset+0x80>
    13a2:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <vPortYield>
    13a6:	08 c0       	rjmp	.+16     	; 0x13b8 <xQueueGenericReset+0x80>
    13a8:	ce 01       	movw	r24, r28
    13aa:	08 96       	adiw	r24, 0x08	; 8
    13ac:	0e 94 b6 07 	call	0xf6c	; 0xf6c <vListInitialise>
    13b0:	ce 01       	movw	r24, r28
    13b2:	41 96       	adiw	r24, 0x11	; 17
    13b4:	0e 94 b6 07 	call	0xf6c	; 0xf6c <vListInitialise>
    13b8:	0f 90       	pop	r0
    13ba:	0f be       	out	0x3f, r0	; 63
    13bc:	81 e0       	ldi	r24, 0x01	; 1
    13be:	df 91       	pop	r29
    13c0:	cf 91       	pop	r28
    13c2:	08 95       	ret

000013c4 <xQueueGenericCreate>:
    13c4:	0f 93       	push	r16
    13c6:	1f 93       	push	r17
    13c8:	cf 93       	push	r28
    13ca:	df 93       	push	r29
    13cc:	88 23       	and	r24, r24
    13ce:	01 f1       	breq	.+64     	; 0x1410 <xQueueGenericCreate+0x4c>
    13d0:	06 2f       	mov	r16, r22
    13d2:	18 2f       	mov	r17, r24
    13d4:	8f e1       	ldi	r24, 0x1F	; 31
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	0e 94 80 07 	call	0xf00	; 0xf00 <pvPortMalloc>
    13dc:	ec 01       	movw	r28, r24
    13de:	89 2b       	or	r24, r25
    13e0:	c9 f0       	breq	.+50     	; 0x1414 <xQueueGenericCreate+0x50>
    13e2:	10 9f       	mul	r17, r16
    13e4:	c0 01       	movw	r24, r0
    13e6:	11 24       	eor	r1, r1
    13e8:	01 96       	adiw	r24, 0x01	; 1
    13ea:	0e 94 80 07 	call	0xf00	; 0xf00 <pvPortMalloc>
    13ee:	99 83       	std	Y+1, r25	; 0x01
    13f0:	88 83       	st	Y, r24
    13f2:	89 2b       	or	r24, r25
    13f4:	39 f0       	breq	.+14     	; 0x1404 <xQueueGenericCreate+0x40>
    13f6:	1b 8f       	std	Y+27, r17	; 0x1b
    13f8:	0c 8f       	std	Y+28, r16	; 0x1c
    13fa:	61 e0       	ldi	r22, 0x01	; 1
    13fc:	ce 01       	movw	r24, r28
    13fe:	0e 94 9c 09 	call	0x1338	; 0x1338 <xQueueGenericReset>
    1402:	08 c0       	rjmp	.+16     	; 0x1414 <xQueueGenericCreate+0x50>
    1404:	ce 01       	movw	r24, r28
    1406:	0e 94 b5 07 	call	0xf6a	; 0xf6a <vPortFree>
    140a:	c0 e0       	ldi	r28, 0x00	; 0
    140c:	d0 e0       	ldi	r29, 0x00	; 0
    140e:	02 c0       	rjmp	.+4      	; 0x1414 <xQueueGenericCreate+0x50>
    1410:	c0 e0       	ldi	r28, 0x00	; 0
    1412:	d0 e0       	ldi	r29, 0x00	; 0
    1414:	ce 01       	movw	r24, r28
    1416:	df 91       	pop	r29
    1418:	cf 91       	pop	r28
    141a:	1f 91       	pop	r17
    141c:	0f 91       	pop	r16
    141e:	08 95       	ret

00001420 <prvResetNextTaskUnblockTime>:
    1420:	e0 91 cc 07 	lds	r30, 0x07CC	; 0x8007cc <pxDelayedTaskList>
    1424:	f0 91 cd 07 	lds	r31, 0x07CD	; 0x8007cd <pxDelayedTaskList+0x1>
    1428:	80 81       	ld	r24, Z
    142a:	81 11       	cpse	r24, r1
    142c:	07 c0       	rjmp	.+14     	; 0x143c <prvResetNextTaskUnblockTime+0x1c>
    142e:	8f ef       	ldi	r24, 0xFF	; 255
    1430:	9f ef       	ldi	r25, 0xFF	; 255
    1432:	90 93 64 00 	sts	0x0064, r25	; 0x800064 <xNextTaskUnblockTime+0x1>
    1436:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <xNextTaskUnblockTime>
    143a:	08 95       	ret
    143c:	e0 91 cc 07 	lds	r30, 0x07CC	; 0x8007cc <pxDelayedTaskList>
    1440:	f0 91 cd 07 	lds	r31, 0x07CD	; 0x8007cd <pxDelayedTaskList+0x1>
    1444:	05 80       	ldd	r0, Z+5	; 0x05
    1446:	f6 81       	ldd	r31, Z+6	; 0x06
    1448:	e0 2d       	mov	r30, r0
    144a:	06 80       	ldd	r0, Z+6	; 0x06
    144c:	f7 81       	ldd	r31, Z+7	; 0x07
    144e:	e0 2d       	mov	r30, r0
    1450:	82 81       	ldd	r24, Z+2	; 0x02
    1452:	93 81       	ldd	r25, Z+3	; 0x03
    1454:	90 93 64 00 	sts	0x0064, r25	; 0x800064 <xNextTaskUnblockTime+0x1>
    1458:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <xNextTaskUnblockTime>
    145c:	08 95       	ret

0000145e <prvAllocateTCBAndStack>:
    145e:	ef 92       	push	r14
    1460:	ff 92       	push	r15
    1462:	0f 93       	push	r16
    1464:	1f 93       	push	r17
    1466:	cf 93       	push	r28
    1468:	df 93       	push	r29
    146a:	7c 01       	movw	r14, r24
    146c:	eb 01       	movw	r28, r22
    146e:	8d e2       	ldi	r24, 0x2D	; 45
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	0e 94 80 07 	call	0xf00	; 0xf00 <pvPortMalloc>
    1476:	8c 01       	movw	r16, r24
    1478:	89 2b       	or	r24, r25
    147a:	89 f0       	breq	.+34     	; 0x149e <prvAllocateTCBAndStack+0x40>
    147c:	20 97       	sbiw	r28, 0x00	; 0
    147e:	21 f4       	brne	.+8      	; 0x1488 <prvAllocateTCBAndStack+0x2a>
    1480:	c7 01       	movw	r24, r14
    1482:	0e 94 80 07 	call	0xf00	; 0xf00 <pvPortMalloc>
    1486:	01 c0       	rjmp	.+2      	; 0x148a <prvAllocateTCBAndStack+0x2c>
    1488:	ce 01       	movw	r24, r28
    148a:	f8 01       	movw	r30, r16
    148c:	90 8f       	std	Z+24, r25	; 0x18
    148e:	87 8b       	std	Z+23, r24	; 0x17
    1490:	89 2b       	or	r24, r25
    1492:	29 f4       	brne	.+10     	; 0x149e <prvAllocateTCBAndStack+0x40>
    1494:	c8 01       	movw	r24, r16
    1496:	0e 94 b5 07 	call	0xf6a	; 0xf6a <vPortFree>
    149a:	00 e0       	ldi	r16, 0x00	; 0
    149c:	10 e0       	ldi	r17, 0x00	; 0
    149e:	c8 01       	movw	r24, r16
    14a0:	df 91       	pop	r29
    14a2:	cf 91       	pop	r28
    14a4:	1f 91       	pop	r17
    14a6:	0f 91       	pop	r16
    14a8:	ff 90       	pop	r15
    14aa:	ef 90       	pop	r14
    14ac:	08 95       	ret

000014ae <prvDeleteTCB>:
    14ae:	cf 93       	push	r28
    14b0:	df 93       	push	r29
    14b2:	ec 01       	movw	r28, r24
    14b4:	8f 89       	ldd	r24, Y+23	; 0x17
    14b6:	98 8d       	ldd	r25, Y+24	; 0x18
    14b8:	0e 94 b5 07 	call	0xf6a	; 0xf6a <vPortFree>
    14bc:	ce 01       	movw	r24, r28
    14be:	0e 94 b5 07 	call	0xf6a	; 0xf6a <vPortFree>
    14c2:	df 91       	pop	r29
    14c4:	cf 91       	pop	r28
    14c6:	08 95       	ret

000014c8 <prvInitialiseTCBVariables>:
    14c8:	1f 93       	push	r17
    14ca:	cf 93       	push	r28
    14cc:	df 93       	push	r29
    14ce:	ec 01       	movw	r28, r24
    14d0:	14 2f       	mov	r17, r20
    14d2:	20 e0       	ldi	r18, 0x00	; 0
    14d4:	0f c0       	rjmp	.+30     	; 0x14f4 <prvInitialiseTCBVariables+0x2c>
    14d6:	82 2f       	mov	r24, r18
    14d8:	90 e0       	ldi	r25, 0x00	; 0
    14da:	fb 01       	movw	r30, r22
    14dc:	e8 0f       	add	r30, r24
    14de:	f9 1f       	adc	r31, r25
    14e0:	30 81       	ld	r19, Z
    14e2:	de 01       	movw	r26, r28
    14e4:	a8 0f       	add	r26, r24
    14e6:	b9 1f       	adc	r27, r25
    14e8:	59 96       	adiw	r26, 0x19	; 25
    14ea:	3c 93       	st	X, r19
    14ec:	80 81       	ld	r24, Z
    14ee:	88 23       	and	r24, r24
    14f0:	19 f0       	breq	.+6      	; 0x14f8 <prvInitialiseTCBVariables+0x30>
    14f2:	2f 5f       	subi	r18, 0xFF	; 255
    14f4:	24 31       	cpi	r18, 0x14	; 20
    14f6:	78 f3       	brcs	.-34     	; 0x14d6 <prvInitialiseTCBVariables+0xe>
    14f8:	1c a6       	std	Y+44, r1	; 0x2c
    14fa:	14 30       	cpi	r17, 0x04	; 4
    14fc:	08 f0       	brcs	.+2      	; 0x1500 <prvInitialiseTCBVariables+0x38>
    14fe:	13 e0       	ldi	r17, 0x03	; 3
    1500:	1e 8b       	std	Y+22, r17	; 0x16
    1502:	ce 01       	movw	r24, r28
    1504:	02 96       	adiw	r24, 0x02	; 2
    1506:	0e 94 c4 07 	call	0xf88	; 0xf88 <vListInitialiseItem>
    150a:	ce 01       	movw	r24, r28
    150c:	0c 96       	adiw	r24, 0x0c	; 12
    150e:	0e 94 c4 07 	call	0xf88	; 0xf88 <vListInitialiseItem>
    1512:	d9 87       	std	Y+9, r29	; 0x09
    1514:	c8 87       	std	Y+8, r28	; 0x08
    1516:	84 e0       	ldi	r24, 0x04	; 4
    1518:	90 e0       	ldi	r25, 0x00	; 0
    151a:	81 1b       	sub	r24, r17
    151c:	91 09       	sbc	r25, r1
    151e:	9d 87       	std	Y+13, r25	; 0x0d
    1520:	8c 87       	std	Y+12, r24	; 0x0c
    1522:	db 8b       	std	Y+19, r29	; 0x13
    1524:	ca 8b       	std	Y+18, r28	; 0x12
    1526:	df 91       	pop	r29
    1528:	cf 91       	pop	r28
    152a:	1f 91       	pop	r17
    152c:	08 95       	ret

0000152e <prvInitialiseTaskLists>:
    152e:	cf 93       	push	r28
    1530:	c0 e0       	ldi	r28, 0x00	; 0
    1532:	10 c0       	rjmp	.+32     	; 0x1554 <prvInitialiseTaskLists+0x26>
    1534:	8c 2f       	mov	r24, r28
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	9c 01       	movw	r18, r24
    153a:	22 0f       	add	r18, r18
    153c:	33 1f       	adc	r19, r19
    153e:	22 0f       	add	r18, r18
    1540:	33 1f       	adc	r19, r19
    1542:	22 0f       	add	r18, r18
    1544:	33 1f       	adc	r19, r19
    1546:	82 0f       	add	r24, r18
    1548:	93 1f       	adc	r25, r19
    154a:	80 52       	subi	r24, 0x20	; 32
    154c:	98 4f       	sbci	r25, 0xF8	; 248
    154e:	0e 94 b6 07 	call	0xf6c	; 0xf6c <vListInitialise>
    1552:	cf 5f       	subi	r28, 0xFF	; 255
    1554:	c4 30       	cpi	r28, 0x04	; 4
    1556:	70 f3       	brcs	.-36     	; 0x1534 <prvInitialiseTaskLists+0x6>
    1558:	87 ed       	ldi	r24, 0xD7	; 215
    155a:	97 e0       	ldi	r25, 0x07	; 7
    155c:	0e 94 b6 07 	call	0xf6c	; 0xf6c <vListInitialise>
    1560:	8e ec       	ldi	r24, 0xCE	; 206
    1562:	97 e0       	ldi	r25, 0x07	; 7
    1564:	0e 94 b6 07 	call	0xf6c	; 0xf6c <vListInitialise>
    1568:	81 ec       	ldi	r24, 0xC1	; 193
    156a:	97 e0       	ldi	r25, 0x07	; 7
    156c:	0e 94 b6 07 	call	0xf6c	; 0xf6c <vListInitialise>
    1570:	88 eb       	ldi	r24, 0xB8	; 184
    1572:	97 e0       	ldi	r25, 0x07	; 7
    1574:	0e 94 b6 07 	call	0xf6c	; 0xf6c <vListInitialise>
    1578:	87 ed       	ldi	r24, 0xD7	; 215
    157a:	97 e0       	ldi	r25, 0x07	; 7
    157c:	90 93 cd 07 	sts	0x07CD, r25	; 0x8007cd <pxDelayedTaskList+0x1>
    1580:	80 93 cc 07 	sts	0x07CC, r24	; 0x8007cc <pxDelayedTaskList>
    1584:	8e ec       	ldi	r24, 0xCE	; 206
    1586:	97 e0       	ldi	r25, 0x07	; 7
    1588:	90 93 cb 07 	sts	0x07CB, r25	; 0x8007cb <pxOverflowDelayedTaskList+0x1>
    158c:	80 93 ca 07 	sts	0x07CA, r24	; 0x8007ca <pxOverflowDelayedTaskList>
    1590:	cf 91       	pop	r28
    1592:	08 95       	ret

00001594 <prvAddCurrentTaskToDelayedList>:
    1594:	cf 93       	push	r28
    1596:	df 93       	push	r29
    1598:	ec 01       	movw	r28, r24
    159a:	e0 91 04 08 	lds	r30, 0x0804	; 0x800804 <pxCurrentTCB>
    159e:	f0 91 05 08 	lds	r31, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    15a2:	93 83       	std	Z+3, r25	; 0x03
    15a4:	82 83       	std	Z+2, r24	; 0x02
    15a6:	80 91 b4 07 	lds	r24, 0x07B4	; 0x8007b4 <xTickCount>
    15aa:	90 91 b5 07 	lds	r25, 0x07B5	; 0x8007b5 <xTickCount+0x1>
    15ae:	c8 17       	cp	r28, r24
    15b0:	d9 07       	cpc	r29, r25
    15b2:	68 f4       	brcc	.+26     	; 0x15ce <prvAddCurrentTaskToDelayedList+0x3a>
    15b4:	60 91 04 08 	lds	r22, 0x0804	; 0x800804 <pxCurrentTCB>
    15b8:	70 91 05 08 	lds	r23, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    15bc:	80 91 ca 07 	lds	r24, 0x07CA	; 0x8007ca <pxOverflowDelayedTaskList>
    15c0:	90 91 cb 07 	lds	r25, 0x07CB	; 0x8007cb <pxOverflowDelayedTaskList+0x1>
    15c4:	6e 5f       	subi	r22, 0xFE	; 254
    15c6:	7f 4f       	sbci	r23, 0xFF	; 255
    15c8:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <vListInsert>
    15cc:	17 c0       	rjmp	.+46     	; 0x15fc <prvAddCurrentTaskToDelayedList+0x68>
    15ce:	60 91 04 08 	lds	r22, 0x0804	; 0x800804 <pxCurrentTCB>
    15d2:	70 91 05 08 	lds	r23, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    15d6:	80 91 cc 07 	lds	r24, 0x07CC	; 0x8007cc <pxDelayedTaskList>
    15da:	90 91 cd 07 	lds	r25, 0x07CD	; 0x8007cd <pxDelayedTaskList+0x1>
    15de:	6e 5f       	subi	r22, 0xFE	; 254
    15e0:	7f 4f       	sbci	r23, 0xFF	; 255
    15e2:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <vListInsert>
    15e6:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <xNextTaskUnblockTime>
    15ea:	90 91 64 00 	lds	r25, 0x0064	; 0x800064 <xNextTaskUnblockTime+0x1>
    15ee:	c8 17       	cp	r28, r24
    15f0:	d9 07       	cpc	r29, r25
    15f2:	20 f4       	brcc	.+8      	; 0x15fc <prvAddCurrentTaskToDelayedList+0x68>
    15f4:	d0 93 64 00 	sts	0x0064, r29	; 0x800064 <xNextTaskUnblockTime+0x1>
    15f8:	c0 93 63 00 	sts	0x0063, r28	; 0x800063 <xNextTaskUnblockTime>
    15fc:	df 91       	pop	r29
    15fe:	cf 91       	pop	r28
    1600:	08 95       	ret

00001602 <xTaskGenericCreate>:
    1602:	2f 92       	push	r2
    1604:	3f 92       	push	r3
    1606:	4f 92       	push	r4
    1608:	5f 92       	push	r5
    160a:	7f 92       	push	r7
    160c:	8f 92       	push	r8
    160e:	9f 92       	push	r9
    1610:	af 92       	push	r10
    1612:	bf 92       	push	r11
    1614:	cf 92       	push	r12
    1616:	df 92       	push	r13
    1618:	ef 92       	push	r14
    161a:	ff 92       	push	r15
    161c:	0f 93       	push	r16
    161e:	1f 93       	push	r17
    1620:	cf 93       	push	r28
    1622:	df 93       	push	r29
    1624:	00 d0       	rcall	.+0      	; 0x1626 <xTaskGenericCreate+0x24>
    1626:	00 d0       	rcall	.+0      	; 0x1628 <xTaskGenericCreate+0x26>
    1628:	cd b7       	in	r28, 0x3d	; 61
    162a:	de b7       	in	r29, 0x3e	; 62
    162c:	9a 83       	std	Y+2, r25	; 0x02
    162e:	89 83       	std	Y+1, r24	; 0x01
    1630:	4b 01       	movw	r8, r22
    1632:	5c 83       	std	Y+4, r21	; 0x04
    1634:	4b 83       	std	Y+3, r20	; 0x03
    1636:	19 01       	movw	r2, r18
    1638:	70 2e       	mov	r7, r16
    163a:	b6 01       	movw	r22, r12
    163c:	25 01       	movw	r4, r10
    163e:	ca 01       	movw	r24, r20
    1640:	0e 94 2f 0a 	call	0x145e	; 0x145e <prvAllocateTCBAndStack>
    1644:	5c 01       	movw	r10, r24
    1646:	00 97       	sbiw	r24, 0x00	; 0
    1648:	09 f4       	brne	.+2      	; 0x164c <xTaskGenericCreate+0x4a>
    164a:	6a c0       	rjmp	.+212    	; 0x1720 <xTaskGenericCreate+0x11e>
    164c:	fc 01       	movw	r30, r24
    164e:	c7 88       	ldd	r12, Z+23	; 0x17
    1650:	d0 8c       	ldd	r13, Z+24	; 0x18
    1652:	8b 81       	ldd	r24, Y+3	; 0x03
    1654:	9c 81       	ldd	r25, Y+4	; 0x04
    1656:	01 97       	sbiw	r24, 0x01	; 1
    1658:	c8 0e       	add	r12, r24
    165a:	d9 1e       	adc	r13, r25
    165c:	0b 81       	ldd	r16, Y+3	; 0x03
    165e:	1c 81       	ldd	r17, Y+4	; 0x04
    1660:	92 01       	movw	r18, r4
    1662:	47 2d       	mov	r20, r7
    1664:	b4 01       	movw	r22, r8
    1666:	c5 01       	movw	r24, r10
    1668:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <prvInitialiseTCBVariables>
    166c:	a1 01       	movw	r20, r2
    166e:	69 81       	ldd	r22, Y+1	; 0x01
    1670:	7a 81       	ldd	r23, Y+2	; 0x02
    1672:	c6 01       	movw	r24, r12
    1674:	0e 94 49 08 	call	0x1092	; 0x1092 <pxPortInitialiseStack>
    1678:	f5 01       	movw	r30, r10
    167a:	91 83       	std	Z+1, r25	; 0x01
    167c:	80 83       	st	Z, r24
    167e:	e1 14       	cp	r14, r1
    1680:	f1 04       	cpc	r15, r1
    1682:	19 f0       	breq	.+6      	; 0x168a <xTaskGenericCreate+0x88>
    1684:	f7 01       	movw	r30, r14
    1686:	b1 82       	std	Z+1, r11	; 0x01
    1688:	a0 82       	st	Z, r10
    168a:	0f b6       	in	r0, 0x3f	; 63
    168c:	f8 94       	cli
    168e:	0f 92       	push	r0
    1690:	80 91 b6 07 	lds	r24, 0x07B6	; 0x8007b6 <uxCurrentNumberOfTasks>
    1694:	8f 5f       	subi	r24, 0xFF	; 255
    1696:	80 93 b6 07 	sts	0x07B6, r24	; 0x8007b6 <uxCurrentNumberOfTasks>
    169a:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <pxCurrentTCB>
    169e:	90 91 05 08 	lds	r25, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    16a2:	89 2b       	or	r24, r25
    16a4:	59 f4       	brne	.+22     	; 0x16bc <xTaskGenericCreate+0xba>
    16a6:	b0 92 05 08 	sts	0x0805, r11	; 0x800805 <pxCurrentTCB+0x1>
    16aa:	a0 92 04 08 	sts	0x0804, r10	; 0x800804 <pxCurrentTCB>
    16ae:	80 91 b6 07 	lds	r24, 0x07B6	; 0x8007b6 <uxCurrentNumberOfTasks>
    16b2:	81 30       	cpi	r24, 0x01	; 1
    16b4:	91 f4       	brne	.+36     	; 0x16da <xTaskGenericCreate+0xd8>
    16b6:	0e 94 97 0a 	call	0x152e	; 0x152e <prvInitialiseTaskLists>
    16ba:	0f c0       	rjmp	.+30     	; 0x16da <xTaskGenericCreate+0xd8>
    16bc:	80 91 b2 07 	lds	r24, 0x07B2	; 0x8007b2 <xSchedulerRunning>
    16c0:	81 11       	cpse	r24, r1
    16c2:	0b c0       	rjmp	.+22     	; 0x16da <xTaskGenericCreate+0xd8>
    16c4:	e0 91 04 08 	lds	r30, 0x0804	; 0x800804 <pxCurrentTCB>
    16c8:	f0 91 05 08 	lds	r31, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    16cc:	86 89       	ldd	r24, Z+22	; 0x16
    16ce:	78 16       	cp	r7, r24
    16d0:	20 f0       	brcs	.+8      	; 0x16da <xTaskGenericCreate+0xd8>
    16d2:	b0 92 05 08 	sts	0x0805, r11	; 0x800805 <pxCurrentTCB+0x1>
    16d6:	a0 92 04 08 	sts	0x0804, r10	; 0x800804 <pxCurrentTCB>
    16da:	80 91 ae 07 	lds	r24, 0x07AE	; 0x8007ae <uxTaskNumber>
    16de:	8f 5f       	subi	r24, 0xFF	; 255
    16e0:	80 93 ae 07 	sts	0x07AE, r24	; 0x8007ae <uxTaskNumber>
    16e4:	f5 01       	movw	r30, r10
    16e6:	86 89       	ldd	r24, Z+22	; 0x16
    16e8:	90 91 b3 07 	lds	r25, 0x07B3	; 0x8007b3 <uxTopReadyPriority>
    16ec:	98 17       	cp	r25, r24
    16ee:	10 f4       	brcc	.+4      	; 0x16f4 <xTaskGenericCreate+0xf2>
    16f0:	80 93 b3 07 	sts	0x07B3, r24	; 0x8007b3 <uxTopReadyPriority>
    16f4:	90 e0       	ldi	r25, 0x00	; 0
    16f6:	b5 01       	movw	r22, r10
    16f8:	6e 5f       	subi	r22, 0xFE	; 254
    16fa:	7f 4f       	sbci	r23, 0xFF	; 255
    16fc:	9c 01       	movw	r18, r24
    16fe:	22 0f       	add	r18, r18
    1700:	33 1f       	adc	r19, r19
    1702:	22 0f       	add	r18, r18
    1704:	33 1f       	adc	r19, r19
    1706:	22 0f       	add	r18, r18
    1708:	33 1f       	adc	r19, r19
    170a:	82 0f       	add	r24, r18
    170c:	93 1f       	adc	r25, r19
    170e:	80 52       	subi	r24, 0x20	; 32
    1710:	98 4f       	sbci	r25, 0xF8	; 248
    1712:	0e 94 c8 07 	call	0xf90	; 0xf90 <vListInsertEnd>
    1716:	0f 90       	pop	r0
    1718:	0f be       	out	0x3f, r0	; 63
    171a:	f1 e0       	ldi	r31, 0x01	; 1
    171c:	f9 83       	std	Y+1, r31	; 0x01
    171e:	02 c0       	rjmp	.+4      	; 0x1724 <xTaskGenericCreate+0x122>
    1720:	8f ef       	ldi	r24, 0xFF	; 255
    1722:	89 83       	std	Y+1, r24	; 0x01
    1724:	e9 81       	ldd	r30, Y+1	; 0x01
    1726:	e1 30       	cpi	r30, 0x01	; 1
    1728:	69 f4       	brne	.+26     	; 0x1744 <xTaskGenericCreate+0x142>
    172a:	80 91 b2 07 	lds	r24, 0x07B2	; 0x8007b2 <xSchedulerRunning>
    172e:	88 23       	and	r24, r24
    1730:	49 f0       	breq	.+18     	; 0x1744 <xTaskGenericCreate+0x142>
    1732:	e0 91 04 08 	lds	r30, 0x0804	; 0x800804 <pxCurrentTCB>
    1736:	f0 91 05 08 	lds	r31, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    173a:	86 89       	ldd	r24, Z+22	; 0x16
    173c:	87 15       	cp	r24, r7
    173e:	10 f4       	brcc	.+4      	; 0x1744 <xTaskGenericCreate+0x142>
    1740:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <vPortYield>
    1744:	89 81       	ldd	r24, Y+1	; 0x01
    1746:	0f 90       	pop	r0
    1748:	0f 90       	pop	r0
    174a:	0f 90       	pop	r0
    174c:	0f 90       	pop	r0
    174e:	df 91       	pop	r29
    1750:	cf 91       	pop	r28
    1752:	1f 91       	pop	r17
    1754:	0f 91       	pop	r16
    1756:	ff 90       	pop	r15
    1758:	ef 90       	pop	r14
    175a:	df 90       	pop	r13
    175c:	cf 90       	pop	r12
    175e:	bf 90       	pop	r11
    1760:	af 90       	pop	r10
    1762:	9f 90       	pop	r9
    1764:	8f 90       	pop	r8
    1766:	7f 90       	pop	r7
    1768:	5f 90       	pop	r5
    176a:	4f 90       	pop	r4
    176c:	3f 90       	pop	r3
    176e:	2f 90       	pop	r2
    1770:	08 95       	ret

00001772 <vTaskStartScheduler>:
    1772:	af 92       	push	r10
    1774:	bf 92       	push	r11
    1776:	cf 92       	push	r12
    1778:	df 92       	push	r13
    177a:	ef 92       	push	r14
    177c:	ff 92       	push	r15
    177e:	0f 93       	push	r16
    1780:	a1 2c       	mov	r10, r1
    1782:	b1 2c       	mov	r11, r1
    1784:	c1 2c       	mov	r12, r1
    1786:	d1 2c       	mov	r13, r1
    1788:	e1 2c       	mov	r14, r1
    178a:	f1 2c       	mov	r15, r1
    178c:	00 e0       	ldi	r16, 0x00	; 0
    178e:	20 e0       	ldi	r18, 0x00	; 0
    1790:	30 e0       	ldi	r19, 0x00	; 0
    1792:	45 e5       	ldi	r20, 0x55	; 85
    1794:	50 e0       	ldi	r21, 0x00	; 0
    1796:	67 ec       	ldi	r22, 0xC7	; 199
    1798:	71 e0       	ldi	r23, 0x01	; 1
    179a:	87 e6       	ldi	r24, 0x67	; 103
    179c:	9d e0       	ldi	r25, 0x0D	; 13
    179e:	0e 94 01 0b 	call	0x1602	; 0x1602 <xTaskGenericCreate>
    17a2:	81 30       	cpi	r24, 0x01	; 1
    17a4:	49 f4       	brne	.+18     	; 0x17b8 <vTaskStartScheduler+0x46>
    17a6:	f8 94       	cli
    17a8:	80 93 b2 07 	sts	0x07B2, r24	; 0x8007b2 <xSchedulerRunning>
    17ac:	10 92 b5 07 	sts	0x07B5, r1	; 0x8007b5 <xTickCount+0x1>
    17b0:	10 92 b4 07 	sts	0x07B4, r1	; 0x8007b4 <xTickCount>
    17b4:	0e 94 b5 08 	call	0x116a	; 0x116a <xPortStartScheduler>
    17b8:	0f 91       	pop	r16
    17ba:	ff 90       	pop	r15
    17bc:	ef 90       	pop	r14
    17be:	df 90       	pop	r13
    17c0:	cf 90       	pop	r12
    17c2:	bf 90       	pop	r11
    17c4:	af 90       	pop	r10
    17c6:	08 95       	ret

000017c8 <vTaskSuspendAll>:
    17c8:	80 91 ad 07 	lds	r24, 0x07AD	; 0x8007ad <uxSchedulerSuspended>
    17cc:	8f 5f       	subi	r24, 0xFF	; 255
    17ce:	80 93 ad 07 	sts	0x07AD, r24	; 0x8007ad <uxSchedulerSuspended>
    17d2:	08 95       	ret

000017d4 <xTaskIncrementTick>:
    17d4:	df 92       	push	r13
    17d6:	ef 92       	push	r14
    17d8:	ff 92       	push	r15
    17da:	0f 93       	push	r16
    17dc:	1f 93       	push	r17
    17de:	cf 93       	push	r28
    17e0:	df 93       	push	r29
    17e2:	80 91 ad 07 	lds	r24, 0x07AD	; 0x8007ad <uxSchedulerSuspended>
    17e6:	81 11       	cpse	r24, r1
    17e8:	99 c0       	rjmp	.+306    	; 0x191c <xTaskIncrementTick+0x148>
    17ea:	80 91 b4 07 	lds	r24, 0x07B4	; 0x8007b4 <xTickCount>
    17ee:	90 91 b5 07 	lds	r25, 0x07B5	; 0x8007b5 <xTickCount+0x1>
    17f2:	01 96       	adiw	r24, 0x01	; 1
    17f4:	90 93 b5 07 	sts	0x07B5, r25	; 0x8007b5 <xTickCount+0x1>
    17f8:	80 93 b4 07 	sts	0x07B4, r24	; 0x8007b4 <xTickCount>
    17fc:	e0 90 b4 07 	lds	r14, 0x07B4	; 0x8007b4 <xTickCount>
    1800:	f0 90 b5 07 	lds	r15, 0x07B5	; 0x8007b5 <xTickCount+0x1>
    1804:	e1 14       	cp	r14, r1
    1806:	f1 04       	cpc	r15, r1
    1808:	b9 f4       	brne	.+46     	; 0x1838 <xTaskIncrementTick+0x64>
    180a:	80 91 cc 07 	lds	r24, 0x07CC	; 0x8007cc <pxDelayedTaskList>
    180e:	90 91 cd 07 	lds	r25, 0x07CD	; 0x8007cd <pxDelayedTaskList+0x1>
    1812:	20 91 ca 07 	lds	r18, 0x07CA	; 0x8007ca <pxOverflowDelayedTaskList>
    1816:	30 91 cb 07 	lds	r19, 0x07CB	; 0x8007cb <pxOverflowDelayedTaskList+0x1>
    181a:	30 93 cd 07 	sts	0x07CD, r19	; 0x8007cd <pxDelayedTaskList+0x1>
    181e:	20 93 cc 07 	sts	0x07CC, r18	; 0x8007cc <pxDelayedTaskList>
    1822:	90 93 cb 07 	sts	0x07CB, r25	; 0x8007cb <pxOverflowDelayedTaskList+0x1>
    1826:	80 93 ca 07 	sts	0x07CA, r24	; 0x8007ca <pxOverflowDelayedTaskList>
    182a:	80 91 af 07 	lds	r24, 0x07AF	; 0x8007af <xNumOfOverflows>
    182e:	8f 5f       	subi	r24, 0xFF	; 255
    1830:	80 93 af 07 	sts	0x07AF, r24	; 0x8007af <xNumOfOverflows>
    1834:	0e 94 10 0a 	call	0x1420	; 0x1420 <prvResetNextTaskUnblockTime>
    1838:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <xNextTaskUnblockTime>
    183c:	90 91 64 00 	lds	r25, 0x0064	; 0x800064 <xNextTaskUnblockTime+0x1>
    1840:	e8 16       	cp	r14, r24
    1842:	f9 06       	cpc	r15, r25
    1844:	28 f4       	brcc	.+10     	; 0x1850 <xTaskIncrementTick+0x7c>
    1846:	d1 2c       	mov	r13, r1
    1848:	53 c0       	rjmp	.+166    	; 0x18f0 <xTaskIncrementTick+0x11c>
    184a:	dd 24       	eor	r13, r13
    184c:	d3 94       	inc	r13
    184e:	01 c0       	rjmp	.+2      	; 0x1852 <xTaskIncrementTick+0x7e>
    1850:	d1 2c       	mov	r13, r1
    1852:	e0 91 cc 07 	lds	r30, 0x07CC	; 0x8007cc <pxDelayedTaskList>
    1856:	f0 91 cd 07 	lds	r31, 0x07CD	; 0x8007cd <pxDelayedTaskList+0x1>
    185a:	80 81       	ld	r24, Z
    185c:	81 11       	cpse	r24, r1
    185e:	07 c0       	rjmp	.+14     	; 0x186e <xTaskIncrementTick+0x9a>
    1860:	8f ef       	ldi	r24, 0xFF	; 255
    1862:	9f ef       	ldi	r25, 0xFF	; 255
    1864:	90 93 64 00 	sts	0x0064, r25	; 0x800064 <xNextTaskUnblockTime+0x1>
    1868:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <xNextTaskUnblockTime>
    186c:	41 c0       	rjmp	.+130    	; 0x18f0 <xTaskIncrementTick+0x11c>
    186e:	e0 91 cc 07 	lds	r30, 0x07CC	; 0x8007cc <pxDelayedTaskList>
    1872:	f0 91 cd 07 	lds	r31, 0x07CD	; 0x8007cd <pxDelayedTaskList+0x1>
    1876:	05 80       	ldd	r0, Z+5	; 0x05
    1878:	f6 81       	ldd	r31, Z+6	; 0x06
    187a:	e0 2d       	mov	r30, r0
    187c:	c6 81       	ldd	r28, Z+6	; 0x06
    187e:	d7 81       	ldd	r29, Z+7	; 0x07
    1880:	8a 81       	ldd	r24, Y+2	; 0x02
    1882:	9b 81       	ldd	r25, Y+3	; 0x03
    1884:	e8 16       	cp	r14, r24
    1886:	f9 06       	cpc	r15, r25
    1888:	28 f4       	brcc	.+10     	; 0x1894 <xTaskIncrementTick+0xc0>
    188a:	90 93 64 00 	sts	0x0064, r25	; 0x800064 <xNextTaskUnblockTime+0x1>
    188e:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <xNextTaskUnblockTime>
    1892:	2e c0       	rjmp	.+92     	; 0x18f0 <xTaskIncrementTick+0x11c>
    1894:	8e 01       	movw	r16, r28
    1896:	0e 5f       	subi	r16, 0xFE	; 254
    1898:	1f 4f       	sbci	r17, 0xFF	; 255
    189a:	c8 01       	movw	r24, r16
    189c:	0e 94 1a 08 	call	0x1034	; 0x1034 <uxListRemove>
    18a0:	8c 89       	ldd	r24, Y+20	; 0x14
    18a2:	9d 89       	ldd	r25, Y+21	; 0x15
    18a4:	89 2b       	or	r24, r25
    18a6:	21 f0       	breq	.+8      	; 0x18b0 <xTaskIncrementTick+0xdc>
    18a8:	ce 01       	movw	r24, r28
    18aa:	0c 96       	adiw	r24, 0x0c	; 12
    18ac:	0e 94 1a 08 	call	0x1034	; 0x1034 <uxListRemove>
    18b0:	8e 89       	ldd	r24, Y+22	; 0x16
    18b2:	90 91 b3 07 	lds	r25, 0x07B3	; 0x8007b3 <uxTopReadyPriority>
    18b6:	98 17       	cp	r25, r24
    18b8:	10 f4       	brcc	.+4      	; 0x18be <xTaskIncrementTick+0xea>
    18ba:	80 93 b3 07 	sts	0x07B3, r24	; 0x8007b3 <uxTopReadyPriority>
    18be:	90 e0       	ldi	r25, 0x00	; 0
    18c0:	9c 01       	movw	r18, r24
    18c2:	22 0f       	add	r18, r18
    18c4:	33 1f       	adc	r19, r19
    18c6:	22 0f       	add	r18, r18
    18c8:	33 1f       	adc	r19, r19
    18ca:	22 0f       	add	r18, r18
    18cc:	33 1f       	adc	r19, r19
    18ce:	82 0f       	add	r24, r18
    18d0:	93 1f       	adc	r25, r19
    18d2:	b8 01       	movw	r22, r16
    18d4:	80 52       	subi	r24, 0x20	; 32
    18d6:	98 4f       	sbci	r25, 0xF8	; 248
    18d8:	0e 94 c8 07 	call	0xf90	; 0xf90 <vListInsertEnd>
    18dc:	9e 89       	ldd	r25, Y+22	; 0x16
    18de:	e0 91 04 08 	lds	r30, 0x0804	; 0x800804 <pxCurrentTCB>
    18e2:	f0 91 05 08 	lds	r31, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    18e6:	86 89       	ldd	r24, Z+22	; 0x16
    18e8:	98 17       	cp	r25, r24
    18ea:	08 f0       	brcs	.+2      	; 0x18ee <xTaskIncrementTick+0x11a>
    18ec:	ae cf       	rjmp	.-164    	; 0x184a <xTaskIncrementTick+0x76>
    18ee:	b1 cf       	rjmp	.-158    	; 0x1852 <xTaskIncrementTick+0x7e>
    18f0:	e0 91 04 08 	lds	r30, 0x0804	; 0x800804 <pxCurrentTCB>
    18f4:	f0 91 05 08 	lds	r31, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    18f8:	86 89       	ldd	r24, Z+22	; 0x16
    18fa:	90 e0       	ldi	r25, 0x00	; 0
    18fc:	fc 01       	movw	r30, r24
    18fe:	ee 0f       	add	r30, r30
    1900:	ff 1f       	adc	r31, r31
    1902:	ee 0f       	add	r30, r30
    1904:	ff 1f       	adc	r31, r31
    1906:	ee 0f       	add	r30, r30
    1908:	ff 1f       	adc	r31, r31
    190a:	8e 0f       	add	r24, r30
    190c:	9f 1f       	adc	r25, r31
    190e:	fc 01       	movw	r30, r24
    1910:	e0 52       	subi	r30, 0x20	; 32
    1912:	f8 4f       	sbci	r31, 0xF8	; 248
    1914:	80 81       	ld	r24, Z
    1916:	82 30       	cpi	r24, 0x02	; 2
    1918:	40 f4       	brcc	.+16     	; 0x192a <xTaskIncrementTick+0x156>
    191a:	09 c0       	rjmp	.+18     	; 0x192e <xTaskIncrementTick+0x15a>
    191c:	80 91 b1 07 	lds	r24, 0x07B1	; 0x8007b1 <uxPendedTicks>
    1920:	8f 5f       	subi	r24, 0xFF	; 255
    1922:	80 93 b1 07 	sts	0x07B1, r24	; 0x8007b1 <uxPendedTicks>
    1926:	d1 2c       	mov	r13, r1
    1928:	02 c0       	rjmp	.+4      	; 0x192e <xTaskIncrementTick+0x15a>
    192a:	dd 24       	eor	r13, r13
    192c:	d3 94       	inc	r13
    192e:	80 91 b0 07 	lds	r24, 0x07B0	; 0x8007b0 <xYieldPending>
    1932:	88 23       	and	r24, r24
    1934:	11 f0       	breq	.+4      	; 0x193a <xTaskIncrementTick+0x166>
    1936:	dd 24       	eor	r13, r13
    1938:	d3 94       	inc	r13
    193a:	8d 2d       	mov	r24, r13
    193c:	df 91       	pop	r29
    193e:	cf 91       	pop	r28
    1940:	1f 91       	pop	r17
    1942:	0f 91       	pop	r16
    1944:	ff 90       	pop	r15
    1946:	ef 90       	pop	r14
    1948:	df 90       	pop	r13
    194a:	08 95       	ret

0000194c <xTaskResumeAll>:
    194c:	0f 93       	push	r16
    194e:	1f 93       	push	r17
    1950:	cf 93       	push	r28
    1952:	df 93       	push	r29
    1954:	0f b6       	in	r0, 0x3f	; 63
    1956:	f8 94       	cli
    1958:	0f 92       	push	r0
    195a:	80 91 ad 07 	lds	r24, 0x07AD	; 0x8007ad <uxSchedulerSuspended>
    195e:	81 50       	subi	r24, 0x01	; 1
    1960:	80 93 ad 07 	sts	0x07AD, r24	; 0x8007ad <uxSchedulerSuspended>
    1964:	80 91 ad 07 	lds	r24, 0x07AD	; 0x8007ad <uxSchedulerSuspended>
    1968:	81 11       	cpse	r24, r1
    196a:	57 c0       	rjmp	.+174    	; 0x1a1a <xTaskResumeAll+0xce>
    196c:	80 91 b6 07 	lds	r24, 0x07B6	; 0x8007b6 <uxCurrentNumberOfTasks>
    1970:	81 11       	cpse	r24, r1
    1972:	32 c0       	rjmp	.+100    	; 0x19d8 <xTaskResumeAll+0x8c>
    1974:	55 c0       	rjmp	.+170    	; 0x1a20 <xTaskResumeAll+0xd4>
    1976:	e0 91 c6 07 	lds	r30, 0x07C6	; 0x8007c6 <xPendingReadyList+0x5>
    197a:	f0 91 c7 07 	lds	r31, 0x07C7	; 0x8007c7 <xPendingReadyList+0x6>
    197e:	c6 81       	ldd	r28, Z+6	; 0x06
    1980:	d7 81       	ldd	r29, Z+7	; 0x07
    1982:	ce 01       	movw	r24, r28
    1984:	0c 96       	adiw	r24, 0x0c	; 12
    1986:	0e 94 1a 08 	call	0x1034	; 0x1034 <uxListRemove>
    198a:	8e 01       	movw	r16, r28
    198c:	0e 5f       	subi	r16, 0xFE	; 254
    198e:	1f 4f       	sbci	r17, 0xFF	; 255
    1990:	c8 01       	movw	r24, r16
    1992:	0e 94 1a 08 	call	0x1034	; 0x1034 <uxListRemove>
    1996:	8e 89       	ldd	r24, Y+22	; 0x16
    1998:	90 91 b3 07 	lds	r25, 0x07B3	; 0x8007b3 <uxTopReadyPriority>
    199c:	98 17       	cp	r25, r24
    199e:	10 f4       	brcc	.+4      	; 0x19a4 <xTaskResumeAll+0x58>
    19a0:	80 93 b3 07 	sts	0x07B3, r24	; 0x8007b3 <uxTopReadyPriority>
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	9c 01       	movw	r18, r24
    19a8:	22 0f       	add	r18, r18
    19aa:	33 1f       	adc	r19, r19
    19ac:	22 0f       	add	r18, r18
    19ae:	33 1f       	adc	r19, r19
    19b0:	22 0f       	add	r18, r18
    19b2:	33 1f       	adc	r19, r19
    19b4:	82 0f       	add	r24, r18
    19b6:	93 1f       	adc	r25, r19
    19b8:	b8 01       	movw	r22, r16
    19ba:	80 52       	subi	r24, 0x20	; 32
    19bc:	98 4f       	sbci	r25, 0xF8	; 248
    19be:	0e 94 c8 07 	call	0xf90	; 0xf90 <vListInsertEnd>
    19c2:	9e 89       	ldd	r25, Y+22	; 0x16
    19c4:	e0 91 04 08 	lds	r30, 0x0804	; 0x800804 <pxCurrentTCB>
    19c8:	f0 91 05 08 	lds	r31, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    19cc:	86 89       	ldd	r24, Z+22	; 0x16
    19ce:	98 17       	cp	r25, r24
    19d0:	18 f0       	brcs	.+6      	; 0x19d8 <xTaskResumeAll+0x8c>
    19d2:	81 e0       	ldi	r24, 0x01	; 1
    19d4:	80 93 b0 07 	sts	0x07B0, r24	; 0x8007b0 <xYieldPending>
    19d8:	80 91 c1 07 	lds	r24, 0x07C1	; 0x8007c1 <xPendingReadyList>
    19dc:	81 11       	cpse	r24, r1
    19de:	cb cf       	rjmp	.-106    	; 0x1976 <xTaskResumeAll+0x2a>
    19e0:	80 91 b1 07 	lds	r24, 0x07B1	; 0x8007b1 <uxPendedTicks>
    19e4:	81 11       	cpse	r24, r1
    19e6:	0d c0       	rjmp	.+26     	; 0x1a02 <xTaskResumeAll+0xb6>
    19e8:	10 c0       	rjmp	.+32     	; 0x1a0a <xTaskResumeAll+0xbe>
    19ea:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <xTaskIncrementTick>
    19ee:	88 23       	and	r24, r24
    19f0:	19 f0       	breq	.+6      	; 0x19f8 <xTaskResumeAll+0xac>
    19f2:	81 e0       	ldi	r24, 0x01	; 1
    19f4:	80 93 b0 07 	sts	0x07B0, r24	; 0x8007b0 <xYieldPending>
    19f8:	80 91 b1 07 	lds	r24, 0x07B1	; 0x8007b1 <uxPendedTicks>
    19fc:	81 50       	subi	r24, 0x01	; 1
    19fe:	80 93 b1 07 	sts	0x07B1, r24	; 0x8007b1 <uxPendedTicks>
    1a02:	80 91 b1 07 	lds	r24, 0x07B1	; 0x8007b1 <uxPendedTicks>
    1a06:	81 11       	cpse	r24, r1
    1a08:	f0 cf       	rjmp	.-32     	; 0x19ea <xTaskResumeAll+0x9e>
    1a0a:	80 91 b0 07 	lds	r24, 0x07B0	; 0x8007b0 <xYieldPending>
    1a0e:	81 30       	cpi	r24, 0x01	; 1
    1a10:	31 f4       	brne	.+12     	; 0x1a1e <xTaskResumeAll+0xd2>
    1a12:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <vPortYield>
    1a16:	81 e0       	ldi	r24, 0x01	; 1
    1a18:	03 c0       	rjmp	.+6      	; 0x1a20 <xTaskResumeAll+0xd4>
    1a1a:	80 e0       	ldi	r24, 0x00	; 0
    1a1c:	01 c0       	rjmp	.+2      	; 0x1a20 <xTaskResumeAll+0xd4>
    1a1e:	80 e0       	ldi	r24, 0x00	; 0
    1a20:	0f 90       	pop	r0
    1a22:	0f be       	out	0x3f, r0	; 63
    1a24:	df 91       	pop	r29
    1a26:	cf 91       	pop	r28
    1a28:	1f 91       	pop	r17
    1a2a:	0f 91       	pop	r16
    1a2c:	08 95       	ret

00001a2e <vTaskDelay>:
    1a2e:	cf 93       	push	r28
    1a30:	df 93       	push	r29
    1a32:	ec 01       	movw	r28, r24
    1a34:	89 2b       	or	r24, r25
    1a36:	a9 f0       	breq	.+42     	; 0x1a62 <vTaskDelay+0x34>
    1a38:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <vTaskSuspendAll>
    1a3c:	80 91 b4 07 	lds	r24, 0x07B4	; 0x8007b4 <xTickCount>
    1a40:	90 91 b5 07 	lds	r25, 0x07B5	; 0x8007b5 <xTickCount+0x1>
    1a44:	c8 0f       	add	r28, r24
    1a46:	d9 1f       	adc	r29, r25
    1a48:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <pxCurrentTCB>
    1a4c:	90 91 05 08 	lds	r25, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    1a50:	02 96       	adiw	r24, 0x02	; 2
    1a52:	0e 94 1a 08 	call	0x1034	; 0x1034 <uxListRemove>
    1a56:	ce 01       	movw	r24, r28
    1a58:	0e 94 ca 0a 	call	0x1594	; 0x1594 <prvAddCurrentTaskToDelayedList>
    1a5c:	0e 94 a6 0c 	call	0x194c	; 0x194c <xTaskResumeAll>
    1a60:	01 c0       	rjmp	.+2      	; 0x1a64 <vTaskDelay+0x36>
    1a62:	80 e0       	ldi	r24, 0x00	; 0
    1a64:	81 11       	cpse	r24, r1
    1a66:	02 c0       	rjmp	.+4      	; 0x1a6c <vTaskDelay+0x3e>
    1a68:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <vPortYield>
    1a6c:	df 91       	pop	r29
    1a6e:	cf 91       	pop	r28
    1a70:	08 95       	ret

00001a72 <prvCheckTasksWaitingTermination>:
    1a72:	cf 93       	push	r28
    1a74:	df 93       	push	r29
    1a76:	24 c0       	rjmp	.+72     	; 0x1ac0 <prvCheckTasksWaitingTermination+0x4e>
    1a78:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <vTaskSuspendAll>
    1a7c:	c0 91 b8 07 	lds	r28, 0x07B8	; 0x8007b8 <xTasksWaitingTermination>
    1a80:	0e 94 a6 0c 	call	0x194c	; 0x194c <xTaskResumeAll>
    1a84:	cc 23       	and	r28, r28
    1a86:	e1 f0       	breq	.+56     	; 0x1ac0 <prvCheckTasksWaitingTermination+0x4e>
    1a88:	0f b6       	in	r0, 0x3f	; 63
    1a8a:	f8 94       	cli
    1a8c:	0f 92       	push	r0
    1a8e:	e0 91 bd 07 	lds	r30, 0x07BD	; 0x8007bd <xTasksWaitingTermination+0x5>
    1a92:	f0 91 be 07 	lds	r31, 0x07BE	; 0x8007be <xTasksWaitingTermination+0x6>
    1a96:	c6 81       	ldd	r28, Z+6	; 0x06
    1a98:	d7 81       	ldd	r29, Z+7	; 0x07
    1a9a:	ce 01       	movw	r24, r28
    1a9c:	02 96       	adiw	r24, 0x02	; 2
    1a9e:	0e 94 1a 08 	call	0x1034	; 0x1034 <uxListRemove>
    1aa2:	80 91 b6 07 	lds	r24, 0x07B6	; 0x8007b6 <uxCurrentNumberOfTasks>
    1aa6:	81 50       	subi	r24, 0x01	; 1
    1aa8:	80 93 b6 07 	sts	0x07B6, r24	; 0x8007b6 <uxCurrentNumberOfTasks>
    1aac:	80 91 b7 07 	lds	r24, 0x07B7	; 0x8007b7 <uxTasksDeleted>
    1ab0:	81 50       	subi	r24, 0x01	; 1
    1ab2:	80 93 b7 07 	sts	0x07B7, r24	; 0x8007b7 <uxTasksDeleted>
    1ab6:	0f 90       	pop	r0
    1ab8:	0f be       	out	0x3f, r0	; 63
    1aba:	ce 01       	movw	r24, r28
    1abc:	0e 94 57 0a 	call	0x14ae	; 0x14ae <prvDeleteTCB>
    1ac0:	80 91 b7 07 	lds	r24, 0x07B7	; 0x8007b7 <uxTasksDeleted>
    1ac4:	81 11       	cpse	r24, r1
    1ac6:	d8 cf       	rjmp	.-80     	; 0x1a78 <prvCheckTasksWaitingTermination+0x6>
    1ac8:	df 91       	pop	r29
    1aca:	cf 91       	pop	r28
    1acc:	08 95       	ret

00001ace <prvIdleTask>:
    1ace:	0e 94 39 0d 	call	0x1a72	; 0x1a72 <prvCheckTasksWaitingTermination>
    1ad2:	80 91 e0 07 	lds	r24, 0x07E0	; 0x8007e0 <pxReadyTasksLists>
    1ad6:	82 30       	cpi	r24, 0x02	; 2
    1ad8:	d0 f3       	brcs	.-12     	; 0x1ace <prvIdleTask>
    1ada:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <vPortYield>
    1ade:	f7 cf       	rjmp	.-18     	; 0x1ace <prvIdleTask>

00001ae0 <vTaskSwitchContext>:
    1ae0:	80 91 ad 07 	lds	r24, 0x07AD	; 0x8007ad <uxSchedulerSuspended>
    1ae4:	88 23       	and	r24, r24
    1ae6:	21 f0       	breq	.+8      	; 0x1af0 <vTaskSwitchContext+0x10>
    1ae8:	81 e0       	ldi	r24, 0x01	; 1
    1aea:	80 93 b0 07 	sts	0x07B0, r24	; 0x8007b0 <xYieldPending>
    1aee:	08 95       	ret
    1af0:	10 92 b0 07 	sts	0x07B0, r1	; 0x8007b0 <xYieldPending>
    1af4:	05 c0       	rjmp	.+10     	; 0x1b00 <vTaskSwitchContext+0x20>
    1af6:	80 91 b3 07 	lds	r24, 0x07B3	; 0x8007b3 <uxTopReadyPriority>
    1afa:	81 50       	subi	r24, 0x01	; 1
    1afc:	80 93 b3 07 	sts	0x07B3, r24	; 0x8007b3 <uxTopReadyPriority>
    1b00:	80 91 b3 07 	lds	r24, 0x07B3	; 0x8007b3 <uxTopReadyPriority>
    1b04:	90 e0       	ldi	r25, 0x00	; 0
    1b06:	fc 01       	movw	r30, r24
    1b08:	ee 0f       	add	r30, r30
    1b0a:	ff 1f       	adc	r31, r31
    1b0c:	ee 0f       	add	r30, r30
    1b0e:	ff 1f       	adc	r31, r31
    1b10:	ee 0f       	add	r30, r30
    1b12:	ff 1f       	adc	r31, r31
    1b14:	8e 0f       	add	r24, r30
    1b16:	9f 1f       	adc	r25, r31
    1b18:	fc 01       	movw	r30, r24
    1b1a:	e0 52       	subi	r30, 0x20	; 32
    1b1c:	f8 4f       	sbci	r31, 0xF8	; 248
    1b1e:	80 81       	ld	r24, Z
    1b20:	88 23       	and	r24, r24
    1b22:	49 f3       	breq	.-46     	; 0x1af6 <vTaskSwitchContext+0x16>
    1b24:	80 91 b3 07 	lds	r24, 0x07B3	; 0x8007b3 <uxTopReadyPriority>
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	9c 01       	movw	r18, r24
    1b2c:	22 0f       	add	r18, r18
    1b2e:	33 1f       	adc	r19, r19
    1b30:	22 0f       	add	r18, r18
    1b32:	33 1f       	adc	r19, r19
    1b34:	22 0f       	add	r18, r18
    1b36:	33 1f       	adc	r19, r19
    1b38:	28 0f       	add	r18, r24
    1b3a:	39 1f       	adc	r19, r25
    1b3c:	d9 01       	movw	r26, r18
    1b3e:	a0 52       	subi	r26, 0x20	; 32
    1b40:	b8 4f       	sbci	r27, 0xF8	; 248
    1b42:	11 96       	adiw	r26, 0x01	; 1
    1b44:	ed 91       	ld	r30, X+
    1b46:	fc 91       	ld	r31, X
    1b48:	12 97       	sbiw	r26, 0x02	; 2
    1b4a:	02 80       	ldd	r0, Z+2	; 0x02
    1b4c:	f3 81       	ldd	r31, Z+3	; 0x03
    1b4e:	e0 2d       	mov	r30, r0
    1b50:	12 96       	adiw	r26, 0x02	; 2
    1b52:	fc 93       	st	X, r31
    1b54:	ee 93       	st	-X, r30
    1b56:	11 97       	sbiw	r26, 0x01	; 1
    1b58:	2d 51       	subi	r18, 0x1D	; 29
    1b5a:	38 4f       	sbci	r19, 0xF8	; 248
    1b5c:	e2 17       	cp	r30, r18
    1b5e:	f3 07       	cpc	r31, r19
    1b60:	29 f4       	brne	.+10     	; 0x1b6c <vTaskSwitchContext+0x8c>
    1b62:	22 81       	ldd	r18, Z+2	; 0x02
    1b64:	33 81       	ldd	r19, Z+3	; 0x03
    1b66:	fd 01       	movw	r30, r26
    1b68:	32 83       	std	Z+2, r19	; 0x02
    1b6a:	21 83       	std	Z+1, r18	; 0x01
    1b6c:	fc 01       	movw	r30, r24
    1b6e:	ee 0f       	add	r30, r30
    1b70:	ff 1f       	adc	r31, r31
    1b72:	ee 0f       	add	r30, r30
    1b74:	ff 1f       	adc	r31, r31
    1b76:	ee 0f       	add	r30, r30
    1b78:	ff 1f       	adc	r31, r31
    1b7a:	8e 0f       	add	r24, r30
    1b7c:	9f 1f       	adc	r25, r31
    1b7e:	fc 01       	movw	r30, r24
    1b80:	e0 52       	subi	r30, 0x20	; 32
    1b82:	f8 4f       	sbci	r31, 0xF8	; 248
    1b84:	01 80       	ldd	r0, Z+1	; 0x01
    1b86:	f2 81       	ldd	r31, Z+2	; 0x02
    1b88:	e0 2d       	mov	r30, r0
    1b8a:	86 81       	ldd	r24, Z+6	; 0x06
    1b8c:	97 81       	ldd	r25, Z+7	; 0x07
    1b8e:	90 93 05 08 	sts	0x0805, r25	; 0x800805 <pxCurrentTCB+0x1>
    1b92:	80 93 04 08 	sts	0x0804, r24	; 0x800804 <pxCurrentTCB>
    1b96:	08 95       	ret

00001b98 <xTaskRemoveFromEventList>:
    1b98:	0f 93       	push	r16
    1b9a:	1f 93       	push	r17
    1b9c:	cf 93       	push	r28
    1b9e:	df 93       	push	r29
    1ba0:	dc 01       	movw	r26, r24
    1ba2:	15 96       	adiw	r26, 0x05	; 5
    1ba4:	ed 91       	ld	r30, X+
    1ba6:	fc 91       	ld	r31, X
    1ba8:	16 97       	sbiw	r26, 0x06	; 6
    1baa:	c6 81       	ldd	r28, Z+6	; 0x06
    1bac:	d7 81       	ldd	r29, Z+7	; 0x07
    1bae:	8e 01       	movw	r16, r28
    1bb0:	04 5f       	subi	r16, 0xF4	; 244
    1bb2:	1f 4f       	sbci	r17, 0xFF	; 255
    1bb4:	c8 01       	movw	r24, r16
    1bb6:	0e 94 1a 08 	call	0x1034	; 0x1034 <uxListRemove>
    1bba:	80 91 ad 07 	lds	r24, 0x07AD	; 0x8007ad <uxSchedulerSuspended>
    1bbe:	81 11       	cpse	r24, r1
    1bc0:	1c c0       	rjmp	.+56     	; 0x1bfa <xTaskRemoveFromEventList+0x62>
    1bc2:	0a 50       	subi	r16, 0x0A	; 10
    1bc4:	11 09       	sbc	r17, r1
    1bc6:	c8 01       	movw	r24, r16
    1bc8:	0e 94 1a 08 	call	0x1034	; 0x1034 <uxListRemove>
    1bcc:	8e 89       	ldd	r24, Y+22	; 0x16
    1bce:	90 91 b3 07 	lds	r25, 0x07B3	; 0x8007b3 <uxTopReadyPriority>
    1bd2:	98 17       	cp	r25, r24
    1bd4:	10 f4       	brcc	.+4      	; 0x1bda <xTaskRemoveFromEventList+0x42>
    1bd6:	80 93 b3 07 	sts	0x07B3, r24	; 0x8007b3 <uxTopReadyPriority>
    1bda:	90 e0       	ldi	r25, 0x00	; 0
    1bdc:	9c 01       	movw	r18, r24
    1bde:	22 0f       	add	r18, r18
    1be0:	33 1f       	adc	r19, r19
    1be2:	22 0f       	add	r18, r18
    1be4:	33 1f       	adc	r19, r19
    1be6:	22 0f       	add	r18, r18
    1be8:	33 1f       	adc	r19, r19
    1bea:	82 0f       	add	r24, r18
    1bec:	93 1f       	adc	r25, r19
    1bee:	b8 01       	movw	r22, r16
    1bf0:	80 52       	subi	r24, 0x20	; 32
    1bf2:	98 4f       	sbci	r25, 0xF8	; 248
    1bf4:	0e 94 c8 07 	call	0xf90	; 0xf90 <vListInsertEnd>
    1bf8:	05 c0       	rjmp	.+10     	; 0x1c04 <xTaskRemoveFromEventList+0x6c>
    1bfa:	b8 01       	movw	r22, r16
    1bfc:	81 ec       	ldi	r24, 0xC1	; 193
    1bfe:	97 e0       	ldi	r25, 0x07	; 7
    1c00:	0e 94 c8 07 	call	0xf90	; 0xf90 <vListInsertEnd>
    1c04:	9e 89       	ldd	r25, Y+22	; 0x16
    1c06:	e0 91 04 08 	lds	r30, 0x0804	; 0x800804 <pxCurrentTCB>
    1c0a:	f0 91 05 08 	lds	r31, 0x0805	; 0x800805 <pxCurrentTCB+0x1>
    1c0e:	86 89       	ldd	r24, Z+22	; 0x16
    1c10:	89 17       	cp	r24, r25
    1c12:	20 f4       	brcc	.+8      	; 0x1c1c <xTaskRemoveFromEventList+0x84>
    1c14:	81 e0       	ldi	r24, 0x01	; 1
    1c16:	80 93 b0 07 	sts	0x07B0, r24	; 0x8007b0 <xYieldPending>
    1c1a:	01 c0       	rjmp	.+2      	; 0x1c1e <xTaskRemoveFromEventList+0x86>
    1c1c:	80 e0       	ldi	r24, 0x00	; 0
    1c1e:	df 91       	pop	r29
    1c20:	cf 91       	pop	r28
    1c22:	1f 91       	pop	r17
    1c24:	0f 91       	pop	r16
    1c26:	08 95       	ret

00001c28 <PWM0_vidInit>:
    1c28:	83 b7       	in	r24, 0x33	; 51
    1c2a:	87 7b       	andi	r24, 0xB7	; 183
    1c2c:	83 bf       	out	0x33, r24	; 51
    1c2e:	83 b7       	in	r24, 0x33	; 51
    1c30:	80 64       	ori	r24, 0x40	; 64
    1c32:	83 bf       	out	0x33, r24	; 51
    1c34:	83 b7       	in	r24, 0x33	; 51
    1c36:	8f 7c       	andi	r24, 0xCF	; 207
    1c38:	83 bf       	out	0x33, r24	; 51
    1c3a:	83 b7       	in	r24, 0x33	; 51
    1c3c:	80 62       	ori	r24, 0x20	; 32
    1c3e:	83 bf       	out	0x33, r24	; 51
    1c40:	08 95       	ret

00001c42 <PWM0_vidGenerate>:
    1c42:	cf 93       	push	r28
    1c44:	df 93       	push	r29
    1c46:	1f 92       	push	r1
    1c48:	cd b7       	in	r28, 0x3d	; 61
    1c4a:	de b7       	in	r29, 0x3e	; 62
    1c4c:	2f ef       	ldi	r18, 0xFF	; 255
    1c4e:	82 9f       	mul	r24, r18
    1c50:	c0 01       	movw	r24, r0
    1c52:	11 24       	eor	r1, r1
    1c54:	64 e6       	ldi	r22, 0x64	; 100
    1c56:	70 e0       	ldi	r23, 0x00	; 0
    1c58:	0e 94 67 10 	call	0x20ce	; 0x20ce <__divmodhi4>
    1c5c:	69 83       	std	Y+1, r22	; 0x01
    1c5e:	89 81       	ldd	r24, Y+1	; 0x01
    1c60:	8c bf       	out	0x3c, r24	; 60
    1c62:	0f 90       	pop	r0
    1c64:	df 91       	pop	r29
    1c66:	cf 91       	pop	r28
    1c68:	08 95       	ret

00001c6a <PWM0_vidStart>:
    1c6a:	83 b7       	in	r24, 0x33	; 51
    1c6c:	88 7f       	andi	r24, 0xF8	; 248
    1c6e:	83 bf       	out	0x33, r24	; 51
    1c70:	83 b7       	in	r24, 0x33	; 51
    1c72:	85 60       	ori	r24, 0x05	; 5
    1c74:	83 bf       	out	0x33, r24	; 51
    1c76:	08 95       	ret

00001c78 <PWM2_vidInit>:
    1c78:	85 b5       	in	r24, 0x25	; 37
    1c7a:	96 b5       	in	r25, 0x26	; 38
    1c7c:	87 7b       	andi	r24, 0xB7	; 183
    1c7e:	99 27       	eor	r25, r25
    1c80:	96 bd       	out	0x26, r25	; 38
    1c82:	85 bd       	out	0x25, r24	; 37
    1c84:	85 b5       	in	r24, 0x25	; 37
    1c86:	96 b5       	in	r25, 0x26	; 38
    1c88:	80 64       	ori	r24, 0x40	; 64
    1c8a:	96 bd       	out	0x26, r25	; 38
    1c8c:	85 bd       	out	0x25, r24	; 37
    1c8e:	85 b5       	in	r24, 0x25	; 37
    1c90:	96 b5       	in	r25, 0x26	; 38
    1c92:	8f 7c       	andi	r24, 0xCF	; 207
    1c94:	99 27       	eor	r25, r25
    1c96:	96 bd       	out	0x26, r25	; 38
    1c98:	85 bd       	out	0x25, r24	; 37
    1c9a:	85 b5       	in	r24, 0x25	; 37
    1c9c:	96 b5       	in	r25, 0x26	; 38
    1c9e:	80 61       	ori	r24, 0x10	; 16
    1ca0:	96 bd       	out	0x26, r25	; 38
    1ca2:	85 bd       	out	0x25, r24	; 37
    1ca4:	08 95       	ret

00001ca6 <PWM2_vidGenerate>:
    1ca6:	cf 93       	push	r28
    1ca8:	df 93       	push	r29
    1caa:	1f 92       	push	r1
    1cac:	cd b7       	in	r28, 0x3d	; 61
    1cae:	de b7       	in	r29, 0x3e	; 62
    1cb0:	19 82       	std	Y+1, r1	; 0x01
    1cb2:	2f ef       	ldi	r18, 0xFF	; 255
    1cb4:	82 9f       	mul	r24, r18
    1cb6:	c0 01       	movw	r24, r0
    1cb8:	11 24       	eor	r1, r1
    1cba:	64 e6       	ldi	r22, 0x64	; 100
    1cbc:	70 e0       	ldi	r23, 0x00	; 0
    1cbe:	0e 94 67 10 	call	0x20ce	; 0x20ce <__divmodhi4>
    1cc2:	69 83       	std	Y+1, r22	; 0x01
    1cc4:	89 81       	ldd	r24, Y+1	; 0x01
    1cc6:	90 e0       	ldi	r25, 0x00	; 0
    1cc8:	94 bd       	out	0x24, r25	; 36
    1cca:	83 bd       	out	0x23, r24	; 35
    1ccc:	0f 90       	pop	r0
    1cce:	df 91       	pop	r29
    1cd0:	cf 91       	pop	r28
    1cd2:	08 95       	ret

00001cd4 <PWM2_vidStart>:
    1cd4:	85 b5       	in	r24, 0x25	; 37
    1cd6:	96 b5       	in	r25, 0x26	; 38
    1cd8:	88 7f       	andi	r24, 0xF8	; 248
    1cda:	99 27       	eor	r25, r25
    1cdc:	96 bd       	out	0x26, r25	; 38
    1cde:	85 bd       	out	0x25, r24	; 37
    1ce0:	85 b5       	in	r24, 0x25	; 37
    1ce2:	96 b5       	in	r25, 0x26	; 38
    1ce4:	85 60       	ori	r24, 0x05	; 5
    1ce6:	96 bd       	out	0x26, r25	; 38
    1ce8:	85 bd       	out	0x25, r24	; 37
    1cea:	08 95       	ret

00001cec <USART_vidInit>:
    1cec:	20 b5       	in	r18, 0x20	; 32
    1cee:	2f 77       	andi	r18, 0x7F	; 127
    1cf0:	20 bd       	out	0x20, r18	; 32
    1cf2:	20 b5       	in	r18, 0x20	; 32
    1cf4:	2f 7b       	andi	r18, 0xBF	; 191
    1cf6:	20 bd       	out	0x20, r18	; 32
    1cf8:	dc 01       	movw	r26, r24
    1cfa:	cb 01       	movw	r24, r22
    1cfc:	88 0f       	add	r24, r24
    1cfe:	99 1f       	adc	r25, r25
    1d00:	aa 1f       	adc	r26, r26
    1d02:	bb 1f       	adc	r27, r27
    1d04:	88 0f       	add	r24, r24
    1d06:	99 1f       	adc	r25, r25
    1d08:	aa 1f       	adc	r26, r26
    1d0a:	bb 1f       	adc	r27, r27
    1d0c:	9c 01       	movw	r18, r24
    1d0e:	ad 01       	movw	r20, r26
    1d10:	22 0f       	add	r18, r18
    1d12:	33 1f       	adc	r19, r19
    1d14:	44 1f       	adc	r20, r20
    1d16:	55 1f       	adc	r21, r21
    1d18:	22 0f       	add	r18, r18
    1d1a:	33 1f       	adc	r19, r19
    1d1c:	44 1f       	adc	r20, r20
    1d1e:	55 1f       	adc	r21, r21
    1d20:	60 e0       	ldi	r22, 0x00	; 0
    1d22:	72 e1       	ldi	r23, 0x12	; 18
    1d24:	8a e7       	ldi	r24, 0x7A	; 122
    1d26:	90 e0       	ldi	r25, 0x00	; 0
    1d28:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <__udivmodsi4>
    1d2c:	21 50       	subi	r18, 0x01	; 1
    1d2e:	31 09       	sbc	r19, r1
    1d30:	80 b5       	in	r24, 0x20	; 32
    1d32:	82 60       	ori	r24, 0x02	; 2
    1d34:	80 bd       	out	0x20, r24	; 32
    1d36:	80 b5       	in	r24, 0x20	; 32
    1d38:	84 60       	ori	r24, 0x04	; 4
    1d3a:	80 bd       	out	0x20, r24	; 32
    1d3c:	8a b1       	in	r24, 0x0a	; 10
    1d3e:	8b 7f       	andi	r24, 0xFB	; 251
    1d40:	8a b9       	out	0x0a, r24	; 10
    1d42:	80 b5       	in	r24, 0x20	; 32
    1d44:	8f 7e       	andi	r24, 0xEF	; 239
    1d46:	80 bd       	out	0x20, r24	; 32
    1d48:	80 b5       	in	r24, 0x20	; 32
    1d4a:	8f 7d       	andi	r24, 0xDF	; 223
    1d4c:	80 bd       	out	0x20, r24	; 32
    1d4e:	80 b5       	in	r24, 0x20	; 32
    1d50:	88 60       	ori	r24, 0x08	; 8
    1d52:	80 bd       	out	0x20, r24	; 32
    1d54:	8a b1       	in	r24, 0x0a	; 10
    1d56:	88 60       	ori	r24, 0x08	; 8
    1d58:	8a b9       	out	0x0a, r24	; 10
    1d5a:	8a b1       	in	r24, 0x0a	; 10
    1d5c:	80 61       	ori	r24, 0x10	; 16
    1d5e:	8a b9       	out	0x0a, r24	; 10
    1d60:	80 b5       	in	r24, 0x20	; 32
    1d62:	80 68       	ori	r24, 0x80	; 128
    1d64:	80 bd       	out	0x20, r24	; 32
    1d66:	30 bd       	out	0x20, r19	; 32
    1d68:	29 b9       	out	0x09, r18	; 9
    1d6a:	08 95       	ret

00001d6c <USART_vidSendByte>:
    1d6c:	5d 9b       	sbis	0x0b, 5	; 11
    1d6e:	fe cf       	rjmp	.-4      	; 0x1d6c <USART_vidSendByte>
    1d70:	8c b9       	out	0x0c, r24	; 12
    1d72:	08 95       	ret

00001d74 <USART_u8RecieveByte>:
    1d74:	5f 9b       	sbis	0x0b, 7	; 11
    1d76:	fe cf       	rjmp	.-4      	; 0x1d74 <USART_u8RecieveByte>
    1d78:	8c b1       	in	r24, 0x0c	; 12
    1d7a:	08 95       	ret

00001d7c <USART_vidSendString>:
    1d7c:	cf 93       	push	r28
    1d7e:	df 93       	push	r29
    1d80:	ec 01       	movw	r28, r24
    1d82:	03 c0       	rjmp	.+6      	; 0x1d8a <USART_vidSendString+0xe>
    1d84:	0e 94 b6 0e 	call	0x1d6c	; 0x1d6c <USART_vidSendByte>
    1d88:	21 96       	adiw	r28, 0x01	; 1
    1d8a:	88 81       	ld	r24, Y
    1d8c:	81 11       	cpse	r24, r1
    1d8e:	fa cf       	rjmp	.-12     	; 0x1d84 <USART_vidSendString+0x8>
    1d90:	df 91       	pop	r29
    1d92:	cf 91       	pop	r28
    1d94:	08 95       	ret

00001d96 <__divsf3>:
    1d96:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <__divsf3x>
    1d9a:	0c 94 c0 0f 	jmp	0x1f80	; 0x1f80 <__fp_round>
    1d9e:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <__fp_pscB>
    1da2:	58 f0       	brcs	.+22     	; 0x1dba <__divsf3+0x24>
    1da4:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <__fp_pscA>
    1da8:	40 f0       	brcs	.+16     	; 0x1dba <__divsf3+0x24>
    1daa:	29 f4       	brne	.+10     	; 0x1db6 <__divsf3+0x20>
    1dac:	5f 3f       	cpi	r21, 0xFF	; 255
    1dae:	29 f0       	breq	.+10     	; 0x1dba <__divsf3+0x24>
    1db0:	0c 94 a9 0f 	jmp	0x1f52	; 0x1f52 <__fp_inf>
    1db4:	51 11       	cpse	r21, r1
    1db6:	0c 94 f4 0f 	jmp	0x1fe8	; 0x1fe8 <__fp_szero>
    1dba:	0c 94 af 0f 	jmp	0x1f5e	; 0x1f5e <__fp_nan>

00001dbe <__divsf3x>:
    1dbe:	0e 94 d1 0f 	call	0x1fa2	; 0x1fa2 <__fp_split3>
    1dc2:	68 f3       	brcs	.-38     	; 0x1d9e <__divsf3+0x8>

00001dc4 <__divsf3_pse>:
    1dc4:	99 23       	and	r25, r25
    1dc6:	b1 f3       	breq	.-20     	; 0x1db4 <__divsf3+0x1e>
    1dc8:	55 23       	and	r21, r21
    1dca:	91 f3       	breq	.-28     	; 0x1db0 <__divsf3+0x1a>
    1dcc:	95 1b       	sub	r25, r21
    1dce:	55 0b       	sbc	r21, r21
    1dd0:	bb 27       	eor	r27, r27
    1dd2:	aa 27       	eor	r26, r26
    1dd4:	62 17       	cp	r22, r18
    1dd6:	73 07       	cpc	r23, r19
    1dd8:	84 07       	cpc	r24, r20
    1dda:	38 f0       	brcs	.+14     	; 0x1dea <__divsf3_pse+0x26>
    1ddc:	9f 5f       	subi	r25, 0xFF	; 255
    1dde:	5f 4f       	sbci	r21, 0xFF	; 255
    1de0:	22 0f       	add	r18, r18
    1de2:	33 1f       	adc	r19, r19
    1de4:	44 1f       	adc	r20, r20
    1de6:	aa 1f       	adc	r26, r26
    1de8:	a9 f3       	breq	.-22     	; 0x1dd4 <__divsf3_pse+0x10>
    1dea:	35 d0       	rcall	.+106    	; 0x1e56 <__divsf3_pse+0x92>
    1dec:	0e 2e       	mov	r0, r30
    1dee:	3a f0       	brmi	.+14     	; 0x1dfe <__divsf3_pse+0x3a>
    1df0:	e0 e8       	ldi	r30, 0x80	; 128
    1df2:	32 d0       	rcall	.+100    	; 0x1e58 <__divsf3_pse+0x94>
    1df4:	91 50       	subi	r25, 0x01	; 1
    1df6:	50 40       	sbci	r21, 0x00	; 0
    1df8:	e6 95       	lsr	r30
    1dfa:	00 1c       	adc	r0, r0
    1dfc:	ca f7       	brpl	.-14     	; 0x1df0 <__divsf3_pse+0x2c>
    1dfe:	2b d0       	rcall	.+86     	; 0x1e56 <__divsf3_pse+0x92>
    1e00:	fe 2f       	mov	r31, r30
    1e02:	29 d0       	rcall	.+82     	; 0x1e56 <__divsf3_pse+0x92>
    1e04:	66 0f       	add	r22, r22
    1e06:	77 1f       	adc	r23, r23
    1e08:	88 1f       	adc	r24, r24
    1e0a:	bb 1f       	adc	r27, r27
    1e0c:	26 17       	cp	r18, r22
    1e0e:	37 07       	cpc	r19, r23
    1e10:	48 07       	cpc	r20, r24
    1e12:	ab 07       	cpc	r26, r27
    1e14:	b0 e8       	ldi	r27, 0x80	; 128
    1e16:	09 f0       	breq	.+2      	; 0x1e1a <__divsf3_pse+0x56>
    1e18:	bb 0b       	sbc	r27, r27
    1e1a:	80 2d       	mov	r24, r0
    1e1c:	bf 01       	movw	r22, r30
    1e1e:	ff 27       	eor	r31, r31
    1e20:	93 58       	subi	r25, 0x83	; 131
    1e22:	5f 4f       	sbci	r21, 0xFF	; 255
    1e24:	3a f0       	brmi	.+14     	; 0x1e34 <__divsf3_pse+0x70>
    1e26:	9e 3f       	cpi	r25, 0xFE	; 254
    1e28:	51 05       	cpc	r21, r1
    1e2a:	78 f0       	brcs	.+30     	; 0x1e4a <__divsf3_pse+0x86>
    1e2c:	0c 94 a9 0f 	jmp	0x1f52	; 0x1f52 <__fp_inf>
    1e30:	0c 94 f4 0f 	jmp	0x1fe8	; 0x1fe8 <__fp_szero>
    1e34:	5f 3f       	cpi	r21, 0xFF	; 255
    1e36:	e4 f3       	brlt	.-8      	; 0x1e30 <__divsf3_pse+0x6c>
    1e38:	98 3e       	cpi	r25, 0xE8	; 232
    1e3a:	d4 f3       	brlt	.-12     	; 0x1e30 <__divsf3_pse+0x6c>
    1e3c:	86 95       	lsr	r24
    1e3e:	77 95       	ror	r23
    1e40:	67 95       	ror	r22
    1e42:	b7 95       	ror	r27
    1e44:	f7 95       	ror	r31
    1e46:	9f 5f       	subi	r25, 0xFF	; 255
    1e48:	c9 f7       	brne	.-14     	; 0x1e3c <__divsf3_pse+0x78>
    1e4a:	88 0f       	add	r24, r24
    1e4c:	91 1d       	adc	r25, r1
    1e4e:	96 95       	lsr	r25
    1e50:	87 95       	ror	r24
    1e52:	97 f9       	bld	r25, 7
    1e54:	08 95       	ret
    1e56:	e1 e0       	ldi	r30, 0x01	; 1
    1e58:	66 0f       	add	r22, r22
    1e5a:	77 1f       	adc	r23, r23
    1e5c:	88 1f       	adc	r24, r24
    1e5e:	bb 1f       	adc	r27, r27
    1e60:	62 17       	cp	r22, r18
    1e62:	73 07       	cpc	r23, r19
    1e64:	84 07       	cpc	r24, r20
    1e66:	ba 07       	cpc	r27, r26
    1e68:	20 f0       	brcs	.+8      	; 0x1e72 <__divsf3_pse+0xae>
    1e6a:	62 1b       	sub	r22, r18
    1e6c:	73 0b       	sbc	r23, r19
    1e6e:	84 0b       	sbc	r24, r20
    1e70:	ba 0b       	sbc	r27, r26
    1e72:	ee 1f       	adc	r30, r30
    1e74:	88 f7       	brcc	.-30     	; 0x1e58 <__divsf3_pse+0x94>
    1e76:	e0 95       	com	r30
    1e78:	08 95       	ret

00001e7a <__fixunssfsi>:
    1e7a:	0e 94 d9 0f 	call	0x1fb2	; 0x1fb2 <__fp_splitA>
    1e7e:	88 f0       	brcs	.+34     	; 0x1ea2 <__fixunssfsi+0x28>
    1e80:	9f 57       	subi	r25, 0x7F	; 127
    1e82:	98 f0       	brcs	.+38     	; 0x1eaa <__fixunssfsi+0x30>
    1e84:	b9 2f       	mov	r27, r25
    1e86:	99 27       	eor	r25, r25
    1e88:	b7 51       	subi	r27, 0x17	; 23
    1e8a:	b0 f0       	brcs	.+44     	; 0x1eb8 <__fixunssfsi+0x3e>
    1e8c:	e1 f0       	breq	.+56     	; 0x1ec6 <__fixunssfsi+0x4c>
    1e8e:	66 0f       	add	r22, r22
    1e90:	77 1f       	adc	r23, r23
    1e92:	88 1f       	adc	r24, r24
    1e94:	99 1f       	adc	r25, r25
    1e96:	1a f0       	brmi	.+6      	; 0x1e9e <__fixunssfsi+0x24>
    1e98:	ba 95       	dec	r27
    1e9a:	c9 f7       	brne	.-14     	; 0x1e8e <__fixunssfsi+0x14>
    1e9c:	14 c0       	rjmp	.+40     	; 0x1ec6 <__fixunssfsi+0x4c>
    1e9e:	b1 30       	cpi	r27, 0x01	; 1
    1ea0:	91 f0       	breq	.+36     	; 0x1ec6 <__fixunssfsi+0x4c>
    1ea2:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <__fp_zero>
    1ea6:	b1 e0       	ldi	r27, 0x01	; 1
    1ea8:	08 95       	ret
    1eaa:	0c 94 f3 0f 	jmp	0x1fe6	; 0x1fe6 <__fp_zero>
    1eae:	67 2f       	mov	r22, r23
    1eb0:	78 2f       	mov	r23, r24
    1eb2:	88 27       	eor	r24, r24
    1eb4:	b8 5f       	subi	r27, 0xF8	; 248
    1eb6:	39 f0       	breq	.+14     	; 0x1ec6 <__fixunssfsi+0x4c>
    1eb8:	b9 3f       	cpi	r27, 0xF9	; 249
    1eba:	cc f3       	brlt	.-14     	; 0x1eae <__fixunssfsi+0x34>
    1ebc:	86 95       	lsr	r24
    1ebe:	77 95       	ror	r23
    1ec0:	67 95       	ror	r22
    1ec2:	b3 95       	inc	r27
    1ec4:	d9 f7       	brne	.-10     	; 0x1ebc <__fixunssfsi+0x42>
    1ec6:	3e f4       	brtc	.+14     	; 0x1ed6 <__fixunssfsi+0x5c>
    1ec8:	90 95       	com	r25
    1eca:	80 95       	com	r24
    1ecc:	70 95       	com	r23
    1ece:	61 95       	neg	r22
    1ed0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ed2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ed4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ed6:	08 95       	ret

00001ed8 <__floatunsisf>:
    1ed8:	e8 94       	clt
    1eda:	09 c0       	rjmp	.+18     	; 0x1eee <__floatsisf+0x12>

00001edc <__floatsisf>:
    1edc:	97 fb       	bst	r25, 7
    1ede:	3e f4       	brtc	.+14     	; 0x1eee <__floatsisf+0x12>
    1ee0:	90 95       	com	r25
    1ee2:	80 95       	com	r24
    1ee4:	70 95       	com	r23
    1ee6:	61 95       	neg	r22
    1ee8:	7f 4f       	sbci	r23, 0xFF	; 255
    1eea:	8f 4f       	sbci	r24, 0xFF	; 255
    1eec:	9f 4f       	sbci	r25, 0xFF	; 255
    1eee:	99 23       	and	r25, r25
    1ef0:	a9 f0       	breq	.+42     	; 0x1f1c <__floatsisf+0x40>
    1ef2:	f9 2f       	mov	r31, r25
    1ef4:	96 e9       	ldi	r25, 0x96	; 150
    1ef6:	bb 27       	eor	r27, r27
    1ef8:	93 95       	inc	r25
    1efa:	f6 95       	lsr	r31
    1efc:	87 95       	ror	r24
    1efe:	77 95       	ror	r23
    1f00:	67 95       	ror	r22
    1f02:	b7 95       	ror	r27
    1f04:	f1 11       	cpse	r31, r1
    1f06:	f8 cf       	rjmp	.-16     	; 0x1ef8 <__floatsisf+0x1c>
    1f08:	fa f4       	brpl	.+62     	; 0x1f48 <__floatsisf+0x6c>
    1f0a:	bb 0f       	add	r27, r27
    1f0c:	11 f4       	brne	.+4      	; 0x1f12 <__floatsisf+0x36>
    1f0e:	60 ff       	sbrs	r22, 0
    1f10:	1b c0       	rjmp	.+54     	; 0x1f48 <__floatsisf+0x6c>
    1f12:	6f 5f       	subi	r22, 0xFF	; 255
    1f14:	7f 4f       	sbci	r23, 0xFF	; 255
    1f16:	8f 4f       	sbci	r24, 0xFF	; 255
    1f18:	9f 4f       	sbci	r25, 0xFF	; 255
    1f1a:	16 c0       	rjmp	.+44     	; 0x1f48 <__floatsisf+0x6c>
    1f1c:	88 23       	and	r24, r24
    1f1e:	11 f0       	breq	.+4      	; 0x1f24 <__floatsisf+0x48>
    1f20:	96 e9       	ldi	r25, 0x96	; 150
    1f22:	11 c0       	rjmp	.+34     	; 0x1f46 <__floatsisf+0x6a>
    1f24:	77 23       	and	r23, r23
    1f26:	21 f0       	breq	.+8      	; 0x1f30 <__floatsisf+0x54>
    1f28:	9e e8       	ldi	r25, 0x8E	; 142
    1f2a:	87 2f       	mov	r24, r23
    1f2c:	76 2f       	mov	r23, r22
    1f2e:	05 c0       	rjmp	.+10     	; 0x1f3a <__floatsisf+0x5e>
    1f30:	66 23       	and	r22, r22
    1f32:	71 f0       	breq	.+28     	; 0x1f50 <__floatsisf+0x74>
    1f34:	96 e8       	ldi	r25, 0x86	; 134
    1f36:	86 2f       	mov	r24, r22
    1f38:	70 e0       	ldi	r23, 0x00	; 0
    1f3a:	60 e0       	ldi	r22, 0x00	; 0
    1f3c:	2a f0       	brmi	.+10     	; 0x1f48 <__floatsisf+0x6c>
    1f3e:	9a 95       	dec	r25
    1f40:	66 0f       	add	r22, r22
    1f42:	77 1f       	adc	r23, r23
    1f44:	88 1f       	adc	r24, r24
    1f46:	da f7       	brpl	.-10     	; 0x1f3e <__floatsisf+0x62>
    1f48:	88 0f       	add	r24, r24
    1f4a:	96 95       	lsr	r25
    1f4c:	87 95       	ror	r24
    1f4e:	97 f9       	bld	r25, 7
    1f50:	08 95       	ret

00001f52 <__fp_inf>:
    1f52:	97 f9       	bld	r25, 7
    1f54:	9f 67       	ori	r25, 0x7F	; 127
    1f56:	80 e8       	ldi	r24, 0x80	; 128
    1f58:	70 e0       	ldi	r23, 0x00	; 0
    1f5a:	60 e0       	ldi	r22, 0x00	; 0
    1f5c:	08 95       	ret

00001f5e <__fp_nan>:
    1f5e:	9f ef       	ldi	r25, 0xFF	; 255
    1f60:	80 ec       	ldi	r24, 0xC0	; 192
    1f62:	08 95       	ret

00001f64 <__fp_pscA>:
    1f64:	00 24       	eor	r0, r0
    1f66:	0a 94       	dec	r0
    1f68:	16 16       	cp	r1, r22
    1f6a:	17 06       	cpc	r1, r23
    1f6c:	18 06       	cpc	r1, r24
    1f6e:	09 06       	cpc	r0, r25
    1f70:	08 95       	ret

00001f72 <__fp_pscB>:
    1f72:	00 24       	eor	r0, r0
    1f74:	0a 94       	dec	r0
    1f76:	12 16       	cp	r1, r18
    1f78:	13 06       	cpc	r1, r19
    1f7a:	14 06       	cpc	r1, r20
    1f7c:	05 06       	cpc	r0, r21
    1f7e:	08 95       	ret

00001f80 <__fp_round>:
    1f80:	09 2e       	mov	r0, r25
    1f82:	03 94       	inc	r0
    1f84:	00 0c       	add	r0, r0
    1f86:	11 f4       	brne	.+4      	; 0x1f8c <__fp_round+0xc>
    1f88:	88 23       	and	r24, r24
    1f8a:	52 f0       	brmi	.+20     	; 0x1fa0 <__fp_round+0x20>
    1f8c:	bb 0f       	add	r27, r27
    1f8e:	40 f4       	brcc	.+16     	; 0x1fa0 <__fp_round+0x20>
    1f90:	bf 2b       	or	r27, r31
    1f92:	11 f4       	brne	.+4      	; 0x1f98 <__fp_round+0x18>
    1f94:	60 ff       	sbrs	r22, 0
    1f96:	04 c0       	rjmp	.+8      	; 0x1fa0 <__fp_round+0x20>
    1f98:	6f 5f       	subi	r22, 0xFF	; 255
    1f9a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f9c:	8f 4f       	sbci	r24, 0xFF	; 255
    1f9e:	9f 4f       	sbci	r25, 0xFF	; 255
    1fa0:	08 95       	ret

00001fa2 <__fp_split3>:
    1fa2:	57 fd       	sbrc	r21, 7
    1fa4:	90 58       	subi	r25, 0x80	; 128
    1fa6:	44 0f       	add	r20, r20
    1fa8:	55 1f       	adc	r21, r21
    1faa:	59 f0       	breq	.+22     	; 0x1fc2 <__fp_splitA+0x10>
    1fac:	5f 3f       	cpi	r21, 0xFF	; 255
    1fae:	71 f0       	breq	.+28     	; 0x1fcc <__fp_splitA+0x1a>
    1fb0:	47 95       	ror	r20

00001fb2 <__fp_splitA>:
    1fb2:	88 0f       	add	r24, r24
    1fb4:	97 fb       	bst	r25, 7
    1fb6:	99 1f       	adc	r25, r25
    1fb8:	61 f0       	breq	.+24     	; 0x1fd2 <__fp_splitA+0x20>
    1fba:	9f 3f       	cpi	r25, 0xFF	; 255
    1fbc:	79 f0       	breq	.+30     	; 0x1fdc <__fp_splitA+0x2a>
    1fbe:	87 95       	ror	r24
    1fc0:	08 95       	ret
    1fc2:	12 16       	cp	r1, r18
    1fc4:	13 06       	cpc	r1, r19
    1fc6:	14 06       	cpc	r1, r20
    1fc8:	55 1f       	adc	r21, r21
    1fca:	f2 cf       	rjmp	.-28     	; 0x1fb0 <__fp_split3+0xe>
    1fcc:	46 95       	lsr	r20
    1fce:	f1 df       	rcall	.-30     	; 0x1fb2 <__fp_splitA>
    1fd0:	08 c0       	rjmp	.+16     	; 0x1fe2 <__fp_splitA+0x30>
    1fd2:	16 16       	cp	r1, r22
    1fd4:	17 06       	cpc	r1, r23
    1fd6:	18 06       	cpc	r1, r24
    1fd8:	99 1f       	adc	r25, r25
    1fda:	f1 cf       	rjmp	.-30     	; 0x1fbe <__fp_splitA+0xc>
    1fdc:	86 95       	lsr	r24
    1fde:	71 05       	cpc	r23, r1
    1fe0:	61 05       	cpc	r22, r1
    1fe2:	08 94       	sec
    1fe4:	08 95       	ret

00001fe6 <__fp_zero>:
    1fe6:	e8 94       	clt

00001fe8 <__fp_szero>:
    1fe8:	bb 27       	eor	r27, r27
    1fea:	66 27       	eor	r22, r22
    1fec:	77 27       	eor	r23, r23
    1fee:	cb 01       	movw	r24, r22
    1ff0:	97 f9       	bld	r25, 7
    1ff2:	08 95       	ret

00001ff4 <__mulsf3>:
    1ff4:	0e 94 0d 10 	call	0x201a	; 0x201a <__mulsf3x>
    1ff8:	0c 94 c0 0f 	jmp	0x1f80	; 0x1f80 <__fp_round>
    1ffc:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <__fp_pscA>
    2000:	38 f0       	brcs	.+14     	; 0x2010 <__mulsf3+0x1c>
    2002:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <__fp_pscB>
    2006:	20 f0       	brcs	.+8      	; 0x2010 <__mulsf3+0x1c>
    2008:	95 23       	and	r25, r21
    200a:	11 f0       	breq	.+4      	; 0x2010 <__mulsf3+0x1c>
    200c:	0c 94 a9 0f 	jmp	0x1f52	; 0x1f52 <__fp_inf>
    2010:	0c 94 af 0f 	jmp	0x1f5e	; 0x1f5e <__fp_nan>
    2014:	11 24       	eor	r1, r1
    2016:	0c 94 f4 0f 	jmp	0x1fe8	; 0x1fe8 <__fp_szero>

0000201a <__mulsf3x>:
    201a:	0e 94 d1 0f 	call	0x1fa2	; 0x1fa2 <__fp_split3>
    201e:	70 f3       	brcs	.-36     	; 0x1ffc <__mulsf3+0x8>

00002020 <__mulsf3_pse>:
    2020:	95 9f       	mul	r25, r21
    2022:	c1 f3       	breq	.-16     	; 0x2014 <__mulsf3+0x20>
    2024:	95 0f       	add	r25, r21
    2026:	50 e0       	ldi	r21, 0x00	; 0
    2028:	55 1f       	adc	r21, r21
    202a:	62 9f       	mul	r22, r18
    202c:	f0 01       	movw	r30, r0
    202e:	72 9f       	mul	r23, r18
    2030:	bb 27       	eor	r27, r27
    2032:	f0 0d       	add	r31, r0
    2034:	b1 1d       	adc	r27, r1
    2036:	63 9f       	mul	r22, r19
    2038:	aa 27       	eor	r26, r26
    203a:	f0 0d       	add	r31, r0
    203c:	b1 1d       	adc	r27, r1
    203e:	aa 1f       	adc	r26, r26
    2040:	64 9f       	mul	r22, r20
    2042:	66 27       	eor	r22, r22
    2044:	b0 0d       	add	r27, r0
    2046:	a1 1d       	adc	r26, r1
    2048:	66 1f       	adc	r22, r22
    204a:	82 9f       	mul	r24, r18
    204c:	22 27       	eor	r18, r18
    204e:	b0 0d       	add	r27, r0
    2050:	a1 1d       	adc	r26, r1
    2052:	62 1f       	adc	r22, r18
    2054:	73 9f       	mul	r23, r19
    2056:	b0 0d       	add	r27, r0
    2058:	a1 1d       	adc	r26, r1
    205a:	62 1f       	adc	r22, r18
    205c:	83 9f       	mul	r24, r19
    205e:	a0 0d       	add	r26, r0
    2060:	61 1d       	adc	r22, r1
    2062:	22 1f       	adc	r18, r18
    2064:	74 9f       	mul	r23, r20
    2066:	33 27       	eor	r19, r19
    2068:	a0 0d       	add	r26, r0
    206a:	61 1d       	adc	r22, r1
    206c:	23 1f       	adc	r18, r19
    206e:	84 9f       	mul	r24, r20
    2070:	60 0d       	add	r22, r0
    2072:	21 1d       	adc	r18, r1
    2074:	82 2f       	mov	r24, r18
    2076:	76 2f       	mov	r23, r22
    2078:	6a 2f       	mov	r22, r26
    207a:	11 24       	eor	r1, r1
    207c:	9f 57       	subi	r25, 0x7F	; 127
    207e:	50 40       	sbci	r21, 0x00	; 0
    2080:	9a f0       	brmi	.+38     	; 0x20a8 <__mulsf3_pse+0x88>
    2082:	f1 f0       	breq	.+60     	; 0x20c0 <__mulsf3_pse+0xa0>
    2084:	88 23       	and	r24, r24
    2086:	4a f0       	brmi	.+18     	; 0x209a <__mulsf3_pse+0x7a>
    2088:	ee 0f       	add	r30, r30
    208a:	ff 1f       	adc	r31, r31
    208c:	bb 1f       	adc	r27, r27
    208e:	66 1f       	adc	r22, r22
    2090:	77 1f       	adc	r23, r23
    2092:	88 1f       	adc	r24, r24
    2094:	91 50       	subi	r25, 0x01	; 1
    2096:	50 40       	sbci	r21, 0x00	; 0
    2098:	a9 f7       	brne	.-22     	; 0x2084 <__mulsf3_pse+0x64>
    209a:	9e 3f       	cpi	r25, 0xFE	; 254
    209c:	51 05       	cpc	r21, r1
    209e:	80 f0       	brcs	.+32     	; 0x20c0 <__mulsf3_pse+0xa0>
    20a0:	0c 94 a9 0f 	jmp	0x1f52	; 0x1f52 <__fp_inf>
    20a4:	0c 94 f4 0f 	jmp	0x1fe8	; 0x1fe8 <__fp_szero>
    20a8:	5f 3f       	cpi	r21, 0xFF	; 255
    20aa:	e4 f3       	brlt	.-8      	; 0x20a4 <__mulsf3_pse+0x84>
    20ac:	98 3e       	cpi	r25, 0xE8	; 232
    20ae:	d4 f3       	brlt	.-12     	; 0x20a4 <__mulsf3_pse+0x84>
    20b0:	86 95       	lsr	r24
    20b2:	77 95       	ror	r23
    20b4:	67 95       	ror	r22
    20b6:	b7 95       	ror	r27
    20b8:	f7 95       	ror	r31
    20ba:	e7 95       	ror	r30
    20bc:	9f 5f       	subi	r25, 0xFF	; 255
    20be:	c1 f7       	brne	.-16     	; 0x20b0 <__mulsf3_pse+0x90>
    20c0:	fe 2b       	or	r31, r30
    20c2:	88 0f       	add	r24, r24
    20c4:	91 1d       	adc	r25, r1
    20c6:	96 95       	lsr	r25
    20c8:	87 95       	ror	r24
    20ca:	97 f9       	bld	r25, 7
    20cc:	08 95       	ret

000020ce <__divmodhi4>:
    20ce:	97 fb       	bst	r25, 7
    20d0:	07 2e       	mov	r0, r23
    20d2:	16 f4       	brtc	.+4      	; 0x20d8 <__divmodhi4+0xa>
    20d4:	00 94       	com	r0
    20d6:	07 d0       	rcall	.+14     	; 0x20e6 <__divmodhi4_neg1>
    20d8:	77 fd       	sbrc	r23, 7
    20da:	09 d0       	rcall	.+18     	; 0x20ee <__divmodhi4_neg2>
    20dc:	0e 94 a3 10 	call	0x2146	; 0x2146 <__udivmodhi4>
    20e0:	07 fc       	sbrc	r0, 7
    20e2:	05 d0       	rcall	.+10     	; 0x20ee <__divmodhi4_neg2>
    20e4:	3e f4       	brtc	.+14     	; 0x20f4 <__divmodhi4_exit>

000020e6 <__divmodhi4_neg1>:
    20e6:	90 95       	com	r25
    20e8:	81 95       	neg	r24
    20ea:	9f 4f       	sbci	r25, 0xFF	; 255
    20ec:	08 95       	ret

000020ee <__divmodhi4_neg2>:
    20ee:	70 95       	com	r23
    20f0:	61 95       	neg	r22
    20f2:	7f 4f       	sbci	r23, 0xFF	; 255

000020f4 <__divmodhi4_exit>:
    20f4:	08 95       	ret

000020f6 <__udivmodsi4>:
    20f6:	a1 e2       	ldi	r26, 0x21	; 33
    20f8:	1a 2e       	mov	r1, r26
    20fa:	aa 1b       	sub	r26, r26
    20fc:	bb 1b       	sub	r27, r27
    20fe:	fd 01       	movw	r30, r26
    2100:	0d c0       	rjmp	.+26     	; 0x211c <__udivmodsi4_ep>

00002102 <__udivmodsi4_loop>:
    2102:	aa 1f       	adc	r26, r26
    2104:	bb 1f       	adc	r27, r27
    2106:	ee 1f       	adc	r30, r30
    2108:	ff 1f       	adc	r31, r31
    210a:	a2 17       	cp	r26, r18
    210c:	b3 07       	cpc	r27, r19
    210e:	e4 07       	cpc	r30, r20
    2110:	f5 07       	cpc	r31, r21
    2112:	20 f0       	brcs	.+8      	; 0x211c <__udivmodsi4_ep>
    2114:	a2 1b       	sub	r26, r18
    2116:	b3 0b       	sbc	r27, r19
    2118:	e4 0b       	sbc	r30, r20
    211a:	f5 0b       	sbc	r31, r21

0000211c <__udivmodsi4_ep>:
    211c:	66 1f       	adc	r22, r22
    211e:	77 1f       	adc	r23, r23
    2120:	88 1f       	adc	r24, r24
    2122:	99 1f       	adc	r25, r25
    2124:	1a 94       	dec	r1
    2126:	69 f7       	brne	.-38     	; 0x2102 <__udivmodsi4_loop>
    2128:	60 95       	com	r22
    212a:	70 95       	com	r23
    212c:	80 95       	com	r24
    212e:	90 95       	com	r25
    2130:	9b 01       	movw	r18, r22
    2132:	ac 01       	movw	r20, r24
    2134:	bd 01       	movw	r22, r26
    2136:	cf 01       	movw	r24, r30
    2138:	08 95       	ret

0000213a <__tablejump2__>:
    213a:	ee 0f       	add	r30, r30
    213c:	ff 1f       	adc	r31, r31
    213e:	05 90       	lpm	r0, Z+
    2140:	f4 91       	lpm	r31, Z
    2142:	e0 2d       	mov	r30, r0
    2144:	09 94       	ijmp

00002146 <__udivmodhi4>:
    2146:	aa 1b       	sub	r26, r26
    2148:	bb 1b       	sub	r27, r27
    214a:	51 e1       	ldi	r21, 0x11	; 17
    214c:	07 c0       	rjmp	.+14     	; 0x215c <__udivmodhi4_ep>

0000214e <__udivmodhi4_loop>:
    214e:	aa 1f       	adc	r26, r26
    2150:	bb 1f       	adc	r27, r27
    2152:	a6 17       	cp	r26, r22
    2154:	b7 07       	cpc	r27, r23
    2156:	10 f0       	brcs	.+4      	; 0x215c <__udivmodhi4_ep>
    2158:	a6 1b       	sub	r26, r22
    215a:	b7 0b       	sbc	r27, r23

0000215c <__udivmodhi4_ep>:
    215c:	88 1f       	adc	r24, r24
    215e:	99 1f       	adc	r25, r25
    2160:	5a 95       	dec	r21
    2162:	a9 f7       	brne	.-22     	; 0x214e <__udivmodhi4_loop>
    2164:	80 95       	com	r24
    2166:	90 95       	com	r25
    2168:	bc 01       	movw	r22, r24
    216a:	cd 01       	movw	r24, r26
    216c:	08 95       	ret

0000216e <sprintf>:
    216e:	ae e0       	ldi	r26, 0x0E	; 14
    2170:	b0 e0       	ldi	r27, 0x00	; 0
    2172:	ed eb       	ldi	r30, 0xBD	; 189
    2174:	f0 e1       	ldi	r31, 0x10	; 16
    2176:	0c 94 78 13 	jmp	0x26f0	; 0x26f0 <__prologue_saves__+0x1c>
    217a:	0d 89       	ldd	r16, Y+21	; 0x15
    217c:	1e 89       	ldd	r17, Y+22	; 0x16
    217e:	86 e0       	ldi	r24, 0x06	; 6
    2180:	8c 83       	std	Y+4, r24	; 0x04
    2182:	1a 83       	std	Y+2, r17	; 0x02
    2184:	09 83       	std	Y+1, r16	; 0x01
    2186:	8f ef       	ldi	r24, 0xFF	; 255
    2188:	9f e7       	ldi	r25, 0x7F	; 127
    218a:	9e 83       	std	Y+6, r25	; 0x06
    218c:	8d 83       	std	Y+5, r24	; 0x05
    218e:	ae 01       	movw	r20, r28
    2190:	47 5e       	subi	r20, 0xE7	; 231
    2192:	5f 4f       	sbci	r21, 0xFF	; 255
    2194:	6f 89       	ldd	r22, Y+23	; 0x17
    2196:	78 8d       	ldd	r23, Y+24	; 0x18
    2198:	ce 01       	movw	r24, r28
    219a:	01 96       	adiw	r24, 0x01	; 1
    219c:	0e 94 d9 10 	call	0x21b2	; 0x21b2 <vfprintf>
    21a0:	ef 81       	ldd	r30, Y+7	; 0x07
    21a2:	f8 85       	ldd	r31, Y+8	; 0x08
    21a4:	e0 0f       	add	r30, r16
    21a6:	f1 1f       	adc	r31, r17
    21a8:	10 82       	st	Z, r1
    21aa:	2e 96       	adiw	r28, 0x0e	; 14
    21ac:	e4 e0       	ldi	r30, 0x04	; 4
    21ae:	0c 94 94 13 	jmp	0x2728	; 0x2728 <__epilogue_restores__+0x1c>

000021b2 <vfprintf>:
    21b2:	ab e0       	ldi	r26, 0x0B	; 11
    21b4:	b0 e0       	ldi	r27, 0x00	; 0
    21b6:	ef ed       	ldi	r30, 0xDF	; 223
    21b8:	f0 e1       	ldi	r31, 0x10	; 16
    21ba:	0c 94 6a 13 	jmp	0x26d4	; 0x26d4 <__prologue_saves__>
    21be:	6c 01       	movw	r12, r24
    21c0:	7b 01       	movw	r14, r22
    21c2:	8a 01       	movw	r16, r20
    21c4:	fc 01       	movw	r30, r24
    21c6:	17 82       	std	Z+7, r1	; 0x07
    21c8:	16 82       	std	Z+6, r1	; 0x06
    21ca:	83 81       	ldd	r24, Z+3	; 0x03
    21cc:	81 ff       	sbrs	r24, 1
    21ce:	cc c1       	rjmp	.+920    	; 0x2568 <vfprintf+0x3b6>
    21d0:	ce 01       	movw	r24, r28
    21d2:	01 96       	adiw	r24, 0x01	; 1
    21d4:	3c 01       	movw	r6, r24
    21d6:	f6 01       	movw	r30, r12
    21d8:	93 81       	ldd	r25, Z+3	; 0x03
    21da:	f7 01       	movw	r30, r14
    21dc:	93 fd       	sbrc	r25, 3
    21de:	85 91       	lpm	r24, Z+
    21e0:	93 ff       	sbrs	r25, 3
    21e2:	81 91       	ld	r24, Z+
    21e4:	7f 01       	movw	r14, r30
    21e6:	88 23       	and	r24, r24
    21e8:	09 f4       	brne	.+2      	; 0x21ec <vfprintf+0x3a>
    21ea:	ba c1       	rjmp	.+884    	; 0x2560 <vfprintf+0x3ae>
    21ec:	85 32       	cpi	r24, 0x25	; 37
    21ee:	39 f4       	brne	.+14     	; 0x21fe <vfprintf+0x4c>
    21f0:	93 fd       	sbrc	r25, 3
    21f2:	85 91       	lpm	r24, Z+
    21f4:	93 ff       	sbrs	r25, 3
    21f6:	81 91       	ld	r24, Z+
    21f8:	7f 01       	movw	r14, r30
    21fa:	85 32       	cpi	r24, 0x25	; 37
    21fc:	29 f4       	brne	.+10     	; 0x2208 <vfprintf+0x56>
    21fe:	b6 01       	movw	r22, r12
    2200:	90 e0       	ldi	r25, 0x00	; 0
    2202:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <fputc>
    2206:	e7 cf       	rjmp	.-50     	; 0x21d6 <vfprintf+0x24>
    2208:	91 2c       	mov	r9, r1
    220a:	21 2c       	mov	r2, r1
    220c:	31 2c       	mov	r3, r1
    220e:	ff e1       	ldi	r31, 0x1F	; 31
    2210:	f3 15       	cp	r31, r3
    2212:	d8 f0       	brcs	.+54     	; 0x224a <vfprintf+0x98>
    2214:	8b 32       	cpi	r24, 0x2B	; 43
    2216:	79 f0       	breq	.+30     	; 0x2236 <vfprintf+0x84>
    2218:	38 f4       	brcc	.+14     	; 0x2228 <vfprintf+0x76>
    221a:	80 32       	cpi	r24, 0x20	; 32
    221c:	79 f0       	breq	.+30     	; 0x223c <vfprintf+0x8a>
    221e:	83 32       	cpi	r24, 0x23	; 35
    2220:	a1 f4       	brne	.+40     	; 0x224a <vfprintf+0x98>
    2222:	23 2d       	mov	r18, r3
    2224:	20 61       	ori	r18, 0x10	; 16
    2226:	1d c0       	rjmp	.+58     	; 0x2262 <vfprintf+0xb0>
    2228:	8d 32       	cpi	r24, 0x2D	; 45
    222a:	61 f0       	breq	.+24     	; 0x2244 <vfprintf+0x92>
    222c:	80 33       	cpi	r24, 0x30	; 48
    222e:	69 f4       	brne	.+26     	; 0x224a <vfprintf+0x98>
    2230:	23 2d       	mov	r18, r3
    2232:	21 60       	ori	r18, 0x01	; 1
    2234:	16 c0       	rjmp	.+44     	; 0x2262 <vfprintf+0xb0>
    2236:	83 2d       	mov	r24, r3
    2238:	82 60       	ori	r24, 0x02	; 2
    223a:	38 2e       	mov	r3, r24
    223c:	e3 2d       	mov	r30, r3
    223e:	e4 60       	ori	r30, 0x04	; 4
    2240:	3e 2e       	mov	r3, r30
    2242:	2a c0       	rjmp	.+84     	; 0x2298 <vfprintf+0xe6>
    2244:	f3 2d       	mov	r31, r3
    2246:	f8 60       	ori	r31, 0x08	; 8
    2248:	1d c0       	rjmp	.+58     	; 0x2284 <vfprintf+0xd2>
    224a:	37 fc       	sbrc	r3, 7
    224c:	2d c0       	rjmp	.+90     	; 0x22a8 <vfprintf+0xf6>
    224e:	20 ed       	ldi	r18, 0xD0	; 208
    2250:	28 0f       	add	r18, r24
    2252:	2a 30       	cpi	r18, 0x0A	; 10
    2254:	40 f0       	brcs	.+16     	; 0x2266 <vfprintf+0xb4>
    2256:	8e 32       	cpi	r24, 0x2E	; 46
    2258:	b9 f4       	brne	.+46     	; 0x2288 <vfprintf+0xd6>
    225a:	36 fc       	sbrc	r3, 6
    225c:	81 c1       	rjmp	.+770    	; 0x2560 <vfprintf+0x3ae>
    225e:	23 2d       	mov	r18, r3
    2260:	20 64       	ori	r18, 0x40	; 64
    2262:	32 2e       	mov	r3, r18
    2264:	19 c0       	rjmp	.+50     	; 0x2298 <vfprintf+0xe6>
    2266:	36 fe       	sbrs	r3, 6
    2268:	06 c0       	rjmp	.+12     	; 0x2276 <vfprintf+0xc4>
    226a:	8a e0       	ldi	r24, 0x0A	; 10
    226c:	98 9e       	mul	r9, r24
    226e:	20 0d       	add	r18, r0
    2270:	11 24       	eor	r1, r1
    2272:	92 2e       	mov	r9, r18
    2274:	11 c0       	rjmp	.+34     	; 0x2298 <vfprintf+0xe6>
    2276:	ea e0       	ldi	r30, 0x0A	; 10
    2278:	2e 9e       	mul	r2, r30
    227a:	20 0d       	add	r18, r0
    227c:	11 24       	eor	r1, r1
    227e:	22 2e       	mov	r2, r18
    2280:	f3 2d       	mov	r31, r3
    2282:	f0 62       	ori	r31, 0x20	; 32
    2284:	3f 2e       	mov	r3, r31
    2286:	08 c0       	rjmp	.+16     	; 0x2298 <vfprintf+0xe6>
    2288:	8c 36       	cpi	r24, 0x6C	; 108
    228a:	21 f4       	brne	.+8      	; 0x2294 <vfprintf+0xe2>
    228c:	83 2d       	mov	r24, r3
    228e:	80 68       	ori	r24, 0x80	; 128
    2290:	38 2e       	mov	r3, r24
    2292:	02 c0       	rjmp	.+4      	; 0x2298 <vfprintf+0xe6>
    2294:	88 36       	cpi	r24, 0x68	; 104
    2296:	41 f4       	brne	.+16     	; 0x22a8 <vfprintf+0xf6>
    2298:	f7 01       	movw	r30, r14
    229a:	93 fd       	sbrc	r25, 3
    229c:	85 91       	lpm	r24, Z+
    229e:	93 ff       	sbrs	r25, 3
    22a0:	81 91       	ld	r24, Z+
    22a2:	7f 01       	movw	r14, r30
    22a4:	81 11       	cpse	r24, r1
    22a6:	b3 cf       	rjmp	.-154    	; 0x220e <vfprintf+0x5c>
    22a8:	98 2f       	mov	r25, r24
    22aa:	9f 7d       	andi	r25, 0xDF	; 223
    22ac:	95 54       	subi	r25, 0x45	; 69
    22ae:	93 30       	cpi	r25, 0x03	; 3
    22b0:	28 f4       	brcc	.+10     	; 0x22bc <vfprintf+0x10a>
    22b2:	0c 5f       	subi	r16, 0xFC	; 252
    22b4:	1f 4f       	sbci	r17, 0xFF	; 255
    22b6:	9f e3       	ldi	r25, 0x3F	; 63
    22b8:	99 83       	std	Y+1, r25	; 0x01
    22ba:	0d c0       	rjmp	.+26     	; 0x22d6 <vfprintf+0x124>
    22bc:	83 36       	cpi	r24, 0x63	; 99
    22be:	31 f0       	breq	.+12     	; 0x22cc <vfprintf+0x11a>
    22c0:	83 37       	cpi	r24, 0x73	; 115
    22c2:	71 f0       	breq	.+28     	; 0x22e0 <vfprintf+0x12e>
    22c4:	83 35       	cpi	r24, 0x53	; 83
    22c6:	09 f0       	breq	.+2      	; 0x22ca <vfprintf+0x118>
    22c8:	59 c0       	rjmp	.+178    	; 0x237c <vfprintf+0x1ca>
    22ca:	21 c0       	rjmp	.+66     	; 0x230e <vfprintf+0x15c>
    22cc:	f8 01       	movw	r30, r16
    22ce:	80 81       	ld	r24, Z
    22d0:	89 83       	std	Y+1, r24	; 0x01
    22d2:	0e 5f       	subi	r16, 0xFE	; 254
    22d4:	1f 4f       	sbci	r17, 0xFF	; 255
    22d6:	88 24       	eor	r8, r8
    22d8:	83 94       	inc	r8
    22da:	91 2c       	mov	r9, r1
    22dc:	53 01       	movw	r10, r6
    22de:	13 c0       	rjmp	.+38     	; 0x2306 <vfprintf+0x154>
    22e0:	28 01       	movw	r4, r16
    22e2:	f2 e0       	ldi	r31, 0x02	; 2
    22e4:	4f 0e       	add	r4, r31
    22e6:	51 1c       	adc	r5, r1
    22e8:	f8 01       	movw	r30, r16
    22ea:	a0 80       	ld	r10, Z
    22ec:	b1 80       	ldd	r11, Z+1	; 0x01
    22ee:	36 fe       	sbrs	r3, 6
    22f0:	03 c0       	rjmp	.+6      	; 0x22f8 <vfprintf+0x146>
    22f2:	69 2d       	mov	r22, r9
    22f4:	70 e0       	ldi	r23, 0x00	; 0
    22f6:	02 c0       	rjmp	.+4      	; 0x22fc <vfprintf+0x14a>
    22f8:	6f ef       	ldi	r22, 0xFF	; 255
    22fa:	7f ef       	ldi	r23, 0xFF	; 255
    22fc:	c5 01       	movw	r24, r10
    22fe:	0e 94 c5 12 	call	0x258a	; 0x258a <strnlen>
    2302:	4c 01       	movw	r8, r24
    2304:	82 01       	movw	r16, r4
    2306:	f3 2d       	mov	r31, r3
    2308:	ff 77       	andi	r31, 0x7F	; 127
    230a:	3f 2e       	mov	r3, r31
    230c:	16 c0       	rjmp	.+44     	; 0x233a <vfprintf+0x188>
    230e:	28 01       	movw	r4, r16
    2310:	22 e0       	ldi	r18, 0x02	; 2
    2312:	42 0e       	add	r4, r18
    2314:	51 1c       	adc	r5, r1
    2316:	f8 01       	movw	r30, r16
    2318:	a0 80       	ld	r10, Z
    231a:	b1 80       	ldd	r11, Z+1	; 0x01
    231c:	36 fe       	sbrs	r3, 6
    231e:	03 c0       	rjmp	.+6      	; 0x2326 <vfprintf+0x174>
    2320:	69 2d       	mov	r22, r9
    2322:	70 e0       	ldi	r23, 0x00	; 0
    2324:	02 c0       	rjmp	.+4      	; 0x232a <vfprintf+0x178>
    2326:	6f ef       	ldi	r22, 0xFF	; 255
    2328:	7f ef       	ldi	r23, 0xFF	; 255
    232a:	c5 01       	movw	r24, r10
    232c:	0e 94 ba 12 	call	0x2574	; 0x2574 <strnlen_P>
    2330:	4c 01       	movw	r8, r24
    2332:	f3 2d       	mov	r31, r3
    2334:	f0 68       	ori	r31, 0x80	; 128
    2336:	3f 2e       	mov	r3, r31
    2338:	82 01       	movw	r16, r4
    233a:	33 fc       	sbrc	r3, 3
    233c:	1b c0       	rjmp	.+54     	; 0x2374 <vfprintf+0x1c2>
    233e:	82 2d       	mov	r24, r2
    2340:	90 e0       	ldi	r25, 0x00	; 0
    2342:	88 16       	cp	r8, r24
    2344:	99 06       	cpc	r9, r25
    2346:	b0 f4       	brcc	.+44     	; 0x2374 <vfprintf+0x1c2>
    2348:	b6 01       	movw	r22, r12
    234a:	80 e2       	ldi	r24, 0x20	; 32
    234c:	90 e0       	ldi	r25, 0x00	; 0
    234e:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <fputc>
    2352:	2a 94       	dec	r2
    2354:	f4 cf       	rjmp	.-24     	; 0x233e <vfprintf+0x18c>
    2356:	f5 01       	movw	r30, r10
    2358:	37 fc       	sbrc	r3, 7
    235a:	85 91       	lpm	r24, Z+
    235c:	37 fe       	sbrs	r3, 7
    235e:	81 91       	ld	r24, Z+
    2360:	5f 01       	movw	r10, r30
    2362:	b6 01       	movw	r22, r12
    2364:	90 e0       	ldi	r25, 0x00	; 0
    2366:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <fputc>
    236a:	21 10       	cpse	r2, r1
    236c:	2a 94       	dec	r2
    236e:	21 e0       	ldi	r18, 0x01	; 1
    2370:	82 1a       	sub	r8, r18
    2372:	91 08       	sbc	r9, r1
    2374:	81 14       	cp	r8, r1
    2376:	91 04       	cpc	r9, r1
    2378:	71 f7       	brne	.-36     	; 0x2356 <vfprintf+0x1a4>
    237a:	e8 c0       	rjmp	.+464    	; 0x254c <vfprintf+0x39a>
    237c:	84 36       	cpi	r24, 0x64	; 100
    237e:	11 f0       	breq	.+4      	; 0x2384 <vfprintf+0x1d2>
    2380:	89 36       	cpi	r24, 0x69	; 105
    2382:	41 f5       	brne	.+80     	; 0x23d4 <vfprintf+0x222>
    2384:	f8 01       	movw	r30, r16
    2386:	37 fe       	sbrs	r3, 7
    2388:	07 c0       	rjmp	.+14     	; 0x2398 <vfprintf+0x1e6>
    238a:	60 81       	ld	r22, Z
    238c:	71 81       	ldd	r23, Z+1	; 0x01
    238e:	82 81       	ldd	r24, Z+2	; 0x02
    2390:	93 81       	ldd	r25, Z+3	; 0x03
    2392:	0c 5f       	subi	r16, 0xFC	; 252
    2394:	1f 4f       	sbci	r17, 0xFF	; 255
    2396:	08 c0       	rjmp	.+16     	; 0x23a8 <vfprintf+0x1f6>
    2398:	60 81       	ld	r22, Z
    239a:	71 81       	ldd	r23, Z+1	; 0x01
    239c:	07 2e       	mov	r0, r23
    239e:	00 0c       	add	r0, r0
    23a0:	88 0b       	sbc	r24, r24
    23a2:	99 0b       	sbc	r25, r25
    23a4:	0e 5f       	subi	r16, 0xFE	; 254
    23a6:	1f 4f       	sbci	r17, 0xFF	; 255
    23a8:	f3 2d       	mov	r31, r3
    23aa:	ff 76       	andi	r31, 0x6F	; 111
    23ac:	3f 2e       	mov	r3, r31
    23ae:	97 ff       	sbrs	r25, 7
    23b0:	09 c0       	rjmp	.+18     	; 0x23c4 <vfprintf+0x212>
    23b2:	90 95       	com	r25
    23b4:	80 95       	com	r24
    23b6:	70 95       	com	r23
    23b8:	61 95       	neg	r22
    23ba:	7f 4f       	sbci	r23, 0xFF	; 255
    23bc:	8f 4f       	sbci	r24, 0xFF	; 255
    23be:	9f 4f       	sbci	r25, 0xFF	; 255
    23c0:	f0 68       	ori	r31, 0x80	; 128
    23c2:	3f 2e       	mov	r3, r31
    23c4:	2a e0       	ldi	r18, 0x0A	; 10
    23c6:	30 e0       	ldi	r19, 0x00	; 0
    23c8:	a3 01       	movw	r20, r6
    23ca:	0e 94 0c 13 	call	0x2618	; 0x2618 <__ultoa_invert>
    23ce:	88 2e       	mov	r8, r24
    23d0:	86 18       	sub	r8, r6
    23d2:	45 c0       	rjmp	.+138    	; 0x245e <vfprintf+0x2ac>
    23d4:	85 37       	cpi	r24, 0x75	; 117
    23d6:	31 f4       	brne	.+12     	; 0x23e4 <vfprintf+0x232>
    23d8:	23 2d       	mov	r18, r3
    23da:	2f 7e       	andi	r18, 0xEF	; 239
    23dc:	b2 2e       	mov	r11, r18
    23de:	2a e0       	ldi	r18, 0x0A	; 10
    23e0:	30 e0       	ldi	r19, 0x00	; 0
    23e2:	25 c0       	rjmp	.+74     	; 0x242e <vfprintf+0x27c>
    23e4:	93 2d       	mov	r25, r3
    23e6:	99 7f       	andi	r25, 0xF9	; 249
    23e8:	b9 2e       	mov	r11, r25
    23ea:	8f 36       	cpi	r24, 0x6F	; 111
    23ec:	c1 f0       	breq	.+48     	; 0x241e <vfprintf+0x26c>
    23ee:	18 f4       	brcc	.+6      	; 0x23f6 <vfprintf+0x244>
    23f0:	88 35       	cpi	r24, 0x58	; 88
    23f2:	79 f0       	breq	.+30     	; 0x2412 <vfprintf+0x260>
    23f4:	b5 c0       	rjmp	.+362    	; 0x2560 <vfprintf+0x3ae>
    23f6:	80 37       	cpi	r24, 0x70	; 112
    23f8:	19 f0       	breq	.+6      	; 0x2400 <vfprintf+0x24e>
    23fa:	88 37       	cpi	r24, 0x78	; 120
    23fc:	21 f0       	breq	.+8      	; 0x2406 <vfprintf+0x254>
    23fe:	b0 c0       	rjmp	.+352    	; 0x2560 <vfprintf+0x3ae>
    2400:	e9 2f       	mov	r30, r25
    2402:	e0 61       	ori	r30, 0x10	; 16
    2404:	be 2e       	mov	r11, r30
    2406:	b4 fe       	sbrs	r11, 4
    2408:	0d c0       	rjmp	.+26     	; 0x2424 <vfprintf+0x272>
    240a:	fb 2d       	mov	r31, r11
    240c:	f4 60       	ori	r31, 0x04	; 4
    240e:	bf 2e       	mov	r11, r31
    2410:	09 c0       	rjmp	.+18     	; 0x2424 <vfprintf+0x272>
    2412:	34 fe       	sbrs	r3, 4
    2414:	0a c0       	rjmp	.+20     	; 0x242a <vfprintf+0x278>
    2416:	29 2f       	mov	r18, r25
    2418:	26 60       	ori	r18, 0x06	; 6
    241a:	b2 2e       	mov	r11, r18
    241c:	06 c0       	rjmp	.+12     	; 0x242a <vfprintf+0x278>
    241e:	28 e0       	ldi	r18, 0x08	; 8
    2420:	30 e0       	ldi	r19, 0x00	; 0
    2422:	05 c0       	rjmp	.+10     	; 0x242e <vfprintf+0x27c>
    2424:	20 e1       	ldi	r18, 0x10	; 16
    2426:	30 e0       	ldi	r19, 0x00	; 0
    2428:	02 c0       	rjmp	.+4      	; 0x242e <vfprintf+0x27c>
    242a:	20 e1       	ldi	r18, 0x10	; 16
    242c:	32 e0       	ldi	r19, 0x02	; 2
    242e:	f8 01       	movw	r30, r16
    2430:	b7 fe       	sbrs	r11, 7
    2432:	07 c0       	rjmp	.+14     	; 0x2442 <vfprintf+0x290>
    2434:	60 81       	ld	r22, Z
    2436:	71 81       	ldd	r23, Z+1	; 0x01
    2438:	82 81       	ldd	r24, Z+2	; 0x02
    243a:	93 81       	ldd	r25, Z+3	; 0x03
    243c:	0c 5f       	subi	r16, 0xFC	; 252
    243e:	1f 4f       	sbci	r17, 0xFF	; 255
    2440:	06 c0       	rjmp	.+12     	; 0x244e <vfprintf+0x29c>
    2442:	60 81       	ld	r22, Z
    2444:	71 81       	ldd	r23, Z+1	; 0x01
    2446:	80 e0       	ldi	r24, 0x00	; 0
    2448:	90 e0       	ldi	r25, 0x00	; 0
    244a:	0e 5f       	subi	r16, 0xFE	; 254
    244c:	1f 4f       	sbci	r17, 0xFF	; 255
    244e:	a3 01       	movw	r20, r6
    2450:	0e 94 0c 13 	call	0x2618	; 0x2618 <__ultoa_invert>
    2454:	88 2e       	mov	r8, r24
    2456:	86 18       	sub	r8, r6
    2458:	fb 2d       	mov	r31, r11
    245a:	ff 77       	andi	r31, 0x7F	; 127
    245c:	3f 2e       	mov	r3, r31
    245e:	36 fe       	sbrs	r3, 6
    2460:	0d c0       	rjmp	.+26     	; 0x247c <vfprintf+0x2ca>
    2462:	23 2d       	mov	r18, r3
    2464:	2e 7f       	andi	r18, 0xFE	; 254
    2466:	a2 2e       	mov	r10, r18
    2468:	89 14       	cp	r8, r9
    246a:	58 f4       	brcc	.+22     	; 0x2482 <vfprintf+0x2d0>
    246c:	34 fe       	sbrs	r3, 4
    246e:	0b c0       	rjmp	.+22     	; 0x2486 <vfprintf+0x2d4>
    2470:	32 fc       	sbrc	r3, 2
    2472:	09 c0       	rjmp	.+18     	; 0x2486 <vfprintf+0x2d4>
    2474:	83 2d       	mov	r24, r3
    2476:	8e 7e       	andi	r24, 0xEE	; 238
    2478:	a8 2e       	mov	r10, r24
    247a:	05 c0       	rjmp	.+10     	; 0x2486 <vfprintf+0x2d4>
    247c:	b8 2c       	mov	r11, r8
    247e:	a3 2c       	mov	r10, r3
    2480:	03 c0       	rjmp	.+6      	; 0x2488 <vfprintf+0x2d6>
    2482:	b8 2c       	mov	r11, r8
    2484:	01 c0       	rjmp	.+2      	; 0x2488 <vfprintf+0x2d6>
    2486:	b9 2c       	mov	r11, r9
    2488:	a4 fe       	sbrs	r10, 4
    248a:	0f c0       	rjmp	.+30     	; 0x24aa <vfprintf+0x2f8>
    248c:	fe 01       	movw	r30, r28
    248e:	e8 0d       	add	r30, r8
    2490:	f1 1d       	adc	r31, r1
    2492:	80 81       	ld	r24, Z
    2494:	80 33       	cpi	r24, 0x30	; 48
    2496:	21 f4       	brne	.+8      	; 0x24a0 <vfprintf+0x2ee>
    2498:	9a 2d       	mov	r25, r10
    249a:	99 7e       	andi	r25, 0xE9	; 233
    249c:	a9 2e       	mov	r10, r25
    249e:	09 c0       	rjmp	.+18     	; 0x24b2 <vfprintf+0x300>
    24a0:	a2 fe       	sbrs	r10, 2
    24a2:	06 c0       	rjmp	.+12     	; 0x24b0 <vfprintf+0x2fe>
    24a4:	b3 94       	inc	r11
    24a6:	b3 94       	inc	r11
    24a8:	04 c0       	rjmp	.+8      	; 0x24b2 <vfprintf+0x300>
    24aa:	8a 2d       	mov	r24, r10
    24ac:	86 78       	andi	r24, 0x86	; 134
    24ae:	09 f0       	breq	.+2      	; 0x24b2 <vfprintf+0x300>
    24b0:	b3 94       	inc	r11
    24b2:	a3 fc       	sbrc	r10, 3
    24b4:	11 c0       	rjmp	.+34     	; 0x24d8 <vfprintf+0x326>
    24b6:	a0 fe       	sbrs	r10, 0
    24b8:	06 c0       	rjmp	.+12     	; 0x24c6 <vfprintf+0x314>
    24ba:	b2 14       	cp	r11, r2
    24bc:	88 f4       	brcc	.+34     	; 0x24e0 <vfprintf+0x32e>
    24be:	28 0c       	add	r2, r8
    24c0:	92 2c       	mov	r9, r2
    24c2:	9b 18       	sub	r9, r11
    24c4:	0e c0       	rjmp	.+28     	; 0x24e2 <vfprintf+0x330>
    24c6:	b2 14       	cp	r11, r2
    24c8:	60 f4       	brcc	.+24     	; 0x24e2 <vfprintf+0x330>
    24ca:	b6 01       	movw	r22, r12
    24cc:	80 e2       	ldi	r24, 0x20	; 32
    24ce:	90 e0       	ldi	r25, 0x00	; 0
    24d0:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <fputc>
    24d4:	b3 94       	inc	r11
    24d6:	f7 cf       	rjmp	.-18     	; 0x24c6 <vfprintf+0x314>
    24d8:	b2 14       	cp	r11, r2
    24da:	18 f4       	brcc	.+6      	; 0x24e2 <vfprintf+0x330>
    24dc:	2b 18       	sub	r2, r11
    24de:	02 c0       	rjmp	.+4      	; 0x24e4 <vfprintf+0x332>
    24e0:	98 2c       	mov	r9, r8
    24e2:	21 2c       	mov	r2, r1
    24e4:	a4 fe       	sbrs	r10, 4
    24e6:	10 c0       	rjmp	.+32     	; 0x2508 <vfprintf+0x356>
    24e8:	b6 01       	movw	r22, r12
    24ea:	80 e3       	ldi	r24, 0x30	; 48
    24ec:	90 e0       	ldi	r25, 0x00	; 0
    24ee:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <fputc>
    24f2:	a2 fe       	sbrs	r10, 2
    24f4:	17 c0       	rjmp	.+46     	; 0x2524 <vfprintf+0x372>
    24f6:	a1 fc       	sbrc	r10, 1
    24f8:	03 c0       	rjmp	.+6      	; 0x2500 <vfprintf+0x34e>
    24fa:	88 e7       	ldi	r24, 0x78	; 120
    24fc:	90 e0       	ldi	r25, 0x00	; 0
    24fe:	02 c0       	rjmp	.+4      	; 0x2504 <vfprintf+0x352>
    2500:	88 e5       	ldi	r24, 0x58	; 88
    2502:	90 e0       	ldi	r25, 0x00	; 0
    2504:	b6 01       	movw	r22, r12
    2506:	0c c0       	rjmp	.+24     	; 0x2520 <vfprintf+0x36e>
    2508:	8a 2d       	mov	r24, r10
    250a:	86 78       	andi	r24, 0x86	; 134
    250c:	59 f0       	breq	.+22     	; 0x2524 <vfprintf+0x372>
    250e:	a1 fe       	sbrs	r10, 1
    2510:	02 c0       	rjmp	.+4      	; 0x2516 <vfprintf+0x364>
    2512:	8b e2       	ldi	r24, 0x2B	; 43
    2514:	01 c0       	rjmp	.+2      	; 0x2518 <vfprintf+0x366>
    2516:	80 e2       	ldi	r24, 0x20	; 32
    2518:	a7 fc       	sbrc	r10, 7
    251a:	8d e2       	ldi	r24, 0x2D	; 45
    251c:	b6 01       	movw	r22, r12
    251e:	90 e0       	ldi	r25, 0x00	; 0
    2520:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <fputc>
    2524:	89 14       	cp	r8, r9
    2526:	38 f4       	brcc	.+14     	; 0x2536 <vfprintf+0x384>
    2528:	b6 01       	movw	r22, r12
    252a:	80 e3       	ldi	r24, 0x30	; 48
    252c:	90 e0       	ldi	r25, 0x00	; 0
    252e:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <fputc>
    2532:	9a 94       	dec	r9
    2534:	f7 cf       	rjmp	.-18     	; 0x2524 <vfprintf+0x372>
    2536:	8a 94       	dec	r8
    2538:	f3 01       	movw	r30, r6
    253a:	e8 0d       	add	r30, r8
    253c:	f1 1d       	adc	r31, r1
    253e:	80 81       	ld	r24, Z
    2540:	b6 01       	movw	r22, r12
    2542:	90 e0       	ldi	r25, 0x00	; 0
    2544:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <fputc>
    2548:	81 10       	cpse	r8, r1
    254a:	f5 cf       	rjmp	.-22     	; 0x2536 <vfprintf+0x384>
    254c:	22 20       	and	r2, r2
    254e:	09 f4       	brne	.+2      	; 0x2552 <vfprintf+0x3a0>
    2550:	42 ce       	rjmp	.-892    	; 0x21d6 <vfprintf+0x24>
    2552:	b6 01       	movw	r22, r12
    2554:	80 e2       	ldi	r24, 0x20	; 32
    2556:	90 e0       	ldi	r25, 0x00	; 0
    2558:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <fputc>
    255c:	2a 94       	dec	r2
    255e:	f6 cf       	rjmp	.-20     	; 0x254c <vfprintf+0x39a>
    2560:	f6 01       	movw	r30, r12
    2562:	86 81       	ldd	r24, Z+6	; 0x06
    2564:	97 81       	ldd	r25, Z+7	; 0x07
    2566:	02 c0       	rjmp	.+4      	; 0x256c <vfprintf+0x3ba>
    2568:	8f ef       	ldi	r24, 0xFF	; 255
    256a:	9f ef       	ldi	r25, 0xFF	; 255
    256c:	2b 96       	adiw	r28, 0x0b	; 11
    256e:	e2 e1       	ldi	r30, 0x12	; 18
    2570:	0c 94 86 13 	jmp	0x270c	; 0x270c <__epilogue_restores__>

00002574 <strnlen_P>:
    2574:	fc 01       	movw	r30, r24
    2576:	05 90       	lpm	r0, Z+
    2578:	61 50       	subi	r22, 0x01	; 1
    257a:	70 40       	sbci	r23, 0x00	; 0
    257c:	01 10       	cpse	r0, r1
    257e:	d8 f7       	brcc	.-10     	; 0x2576 <strnlen_P+0x2>
    2580:	80 95       	com	r24
    2582:	90 95       	com	r25
    2584:	8e 0f       	add	r24, r30
    2586:	9f 1f       	adc	r25, r31
    2588:	08 95       	ret

0000258a <strnlen>:
    258a:	fc 01       	movw	r30, r24
    258c:	61 50       	subi	r22, 0x01	; 1
    258e:	70 40       	sbci	r23, 0x00	; 0
    2590:	01 90       	ld	r0, Z+
    2592:	01 10       	cpse	r0, r1
    2594:	d8 f7       	brcc	.-10     	; 0x258c <strnlen+0x2>
    2596:	80 95       	com	r24
    2598:	90 95       	com	r25
    259a:	8e 0f       	add	r24, r30
    259c:	9f 1f       	adc	r25, r31
    259e:	08 95       	ret

000025a0 <fputc>:
    25a0:	0f 93       	push	r16
    25a2:	1f 93       	push	r17
    25a4:	cf 93       	push	r28
    25a6:	df 93       	push	r29
    25a8:	fb 01       	movw	r30, r22
    25aa:	23 81       	ldd	r18, Z+3	; 0x03
    25ac:	21 fd       	sbrc	r18, 1
    25ae:	03 c0       	rjmp	.+6      	; 0x25b6 <fputc+0x16>
    25b0:	8f ef       	ldi	r24, 0xFF	; 255
    25b2:	9f ef       	ldi	r25, 0xFF	; 255
    25b4:	2c c0       	rjmp	.+88     	; 0x260e <fputc+0x6e>
    25b6:	22 ff       	sbrs	r18, 2
    25b8:	16 c0       	rjmp	.+44     	; 0x25e6 <fputc+0x46>
    25ba:	46 81       	ldd	r20, Z+6	; 0x06
    25bc:	57 81       	ldd	r21, Z+7	; 0x07
    25be:	24 81       	ldd	r18, Z+4	; 0x04
    25c0:	35 81       	ldd	r19, Z+5	; 0x05
    25c2:	42 17       	cp	r20, r18
    25c4:	53 07       	cpc	r21, r19
    25c6:	44 f4       	brge	.+16     	; 0x25d8 <fputc+0x38>
    25c8:	a0 81       	ld	r26, Z
    25ca:	b1 81       	ldd	r27, Z+1	; 0x01
    25cc:	9d 01       	movw	r18, r26
    25ce:	2f 5f       	subi	r18, 0xFF	; 255
    25d0:	3f 4f       	sbci	r19, 0xFF	; 255
    25d2:	31 83       	std	Z+1, r19	; 0x01
    25d4:	20 83       	st	Z, r18
    25d6:	8c 93       	st	X, r24
    25d8:	26 81       	ldd	r18, Z+6	; 0x06
    25da:	37 81       	ldd	r19, Z+7	; 0x07
    25dc:	2f 5f       	subi	r18, 0xFF	; 255
    25de:	3f 4f       	sbci	r19, 0xFF	; 255
    25e0:	37 83       	std	Z+7, r19	; 0x07
    25e2:	26 83       	std	Z+6, r18	; 0x06
    25e4:	14 c0       	rjmp	.+40     	; 0x260e <fputc+0x6e>
    25e6:	8b 01       	movw	r16, r22
    25e8:	ec 01       	movw	r28, r24
    25ea:	fb 01       	movw	r30, r22
    25ec:	00 84       	ldd	r0, Z+8	; 0x08
    25ee:	f1 85       	ldd	r31, Z+9	; 0x09
    25f0:	e0 2d       	mov	r30, r0
    25f2:	09 95       	icall
    25f4:	89 2b       	or	r24, r25
    25f6:	e1 f6       	brne	.-72     	; 0x25b0 <fputc+0x10>
    25f8:	d8 01       	movw	r26, r16
    25fa:	16 96       	adiw	r26, 0x06	; 6
    25fc:	8d 91       	ld	r24, X+
    25fe:	9c 91       	ld	r25, X
    2600:	17 97       	sbiw	r26, 0x07	; 7
    2602:	01 96       	adiw	r24, 0x01	; 1
    2604:	17 96       	adiw	r26, 0x07	; 7
    2606:	9c 93       	st	X, r25
    2608:	8e 93       	st	-X, r24
    260a:	16 97       	sbiw	r26, 0x06	; 6
    260c:	ce 01       	movw	r24, r28
    260e:	df 91       	pop	r29
    2610:	cf 91       	pop	r28
    2612:	1f 91       	pop	r17
    2614:	0f 91       	pop	r16
    2616:	08 95       	ret

00002618 <__ultoa_invert>:
    2618:	fa 01       	movw	r30, r20
    261a:	aa 27       	eor	r26, r26
    261c:	28 30       	cpi	r18, 0x08	; 8
    261e:	51 f1       	breq	.+84     	; 0x2674 <__ultoa_invert+0x5c>
    2620:	20 31       	cpi	r18, 0x10	; 16
    2622:	81 f1       	breq	.+96     	; 0x2684 <__ultoa_invert+0x6c>
    2624:	e8 94       	clt
    2626:	6f 93       	push	r22
    2628:	6e 7f       	andi	r22, 0xFE	; 254
    262a:	6e 5f       	subi	r22, 0xFE	; 254
    262c:	7f 4f       	sbci	r23, 0xFF	; 255
    262e:	8f 4f       	sbci	r24, 0xFF	; 255
    2630:	9f 4f       	sbci	r25, 0xFF	; 255
    2632:	af 4f       	sbci	r26, 0xFF	; 255
    2634:	b1 e0       	ldi	r27, 0x01	; 1
    2636:	3e d0       	rcall	.+124    	; 0x26b4 <__ultoa_invert+0x9c>
    2638:	b4 e0       	ldi	r27, 0x04	; 4
    263a:	3c d0       	rcall	.+120    	; 0x26b4 <__ultoa_invert+0x9c>
    263c:	67 0f       	add	r22, r23
    263e:	78 1f       	adc	r23, r24
    2640:	89 1f       	adc	r24, r25
    2642:	9a 1f       	adc	r25, r26
    2644:	a1 1d       	adc	r26, r1
    2646:	68 0f       	add	r22, r24
    2648:	79 1f       	adc	r23, r25
    264a:	8a 1f       	adc	r24, r26
    264c:	91 1d       	adc	r25, r1
    264e:	a1 1d       	adc	r26, r1
    2650:	6a 0f       	add	r22, r26
    2652:	71 1d       	adc	r23, r1
    2654:	81 1d       	adc	r24, r1
    2656:	91 1d       	adc	r25, r1
    2658:	a1 1d       	adc	r26, r1
    265a:	20 d0       	rcall	.+64     	; 0x269c <__ultoa_invert+0x84>
    265c:	09 f4       	brne	.+2      	; 0x2660 <__ultoa_invert+0x48>
    265e:	68 94       	set
    2660:	3f 91       	pop	r19
    2662:	2a e0       	ldi	r18, 0x0A	; 10
    2664:	26 9f       	mul	r18, r22
    2666:	11 24       	eor	r1, r1
    2668:	30 19       	sub	r19, r0
    266a:	30 5d       	subi	r19, 0xD0	; 208
    266c:	31 93       	st	Z+, r19
    266e:	de f6       	brtc	.-74     	; 0x2626 <__ultoa_invert+0xe>
    2670:	cf 01       	movw	r24, r30
    2672:	08 95       	ret
    2674:	46 2f       	mov	r20, r22
    2676:	47 70       	andi	r20, 0x07	; 7
    2678:	40 5d       	subi	r20, 0xD0	; 208
    267a:	41 93       	st	Z+, r20
    267c:	b3 e0       	ldi	r27, 0x03	; 3
    267e:	0f d0       	rcall	.+30     	; 0x269e <__ultoa_invert+0x86>
    2680:	c9 f7       	brne	.-14     	; 0x2674 <__ultoa_invert+0x5c>
    2682:	f6 cf       	rjmp	.-20     	; 0x2670 <__ultoa_invert+0x58>
    2684:	46 2f       	mov	r20, r22
    2686:	4f 70       	andi	r20, 0x0F	; 15
    2688:	40 5d       	subi	r20, 0xD0	; 208
    268a:	4a 33       	cpi	r20, 0x3A	; 58
    268c:	18 f0       	brcs	.+6      	; 0x2694 <__ultoa_invert+0x7c>
    268e:	49 5d       	subi	r20, 0xD9	; 217
    2690:	31 fd       	sbrc	r19, 1
    2692:	40 52       	subi	r20, 0x20	; 32
    2694:	41 93       	st	Z+, r20
    2696:	02 d0       	rcall	.+4      	; 0x269c <__ultoa_invert+0x84>
    2698:	a9 f7       	brne	.-22     	; 0x2684 <__ultoa_invert+0x6c>
    269a:	ea cf       	rjmp	.-44     	; 0x2670 <__ultoa_invert+0x58>
    269c:	b4 e0       	ldi	r27, 0x04	; 4
    269e:	a6 95       	lsr	r26
    26a0:	97 95       	ror	r25
    26a2:	87 95       	ror	r24
    26a4:	77 95       	ror	r23
    26a6:	67 95       	ror	r22
    26a8:	ba 95       	dec	r27
    26aa:	c9 f7       	brne	.-14     	; 0x269e <__ultoa_invert+0x86>
    26ac:	00 97       	sbiw	r24, 0x00	; 0
    26ae:	61 05       	cpc	r22, r1
    26b0:	71 05       	cpc	r23, r1
    26b2:	08 95       	ret
    26b4:	9b 01       	movw	r18, r22
    26b6:	ac 01       	movw	r20, r24
    26b8:	0a 2e       	mov	r0, r26
    26ba:	06 94       	lsr	r0
    26bc:	57 95       	ror	r21
    26be:	47 95       	ror	r20
    26c0:	37 95       	ror	r19
    26c2:	27 95       	ror	r18
    26c4:	ba 95       	dec	r27
    26c6:	c9 f7       	brne	.-14     	; 0x26ba <__ultoa_invert+0xa2>
    26c8:	62 0f       	add	r22, r18
    26ca:	73 1f       	adc	r23, r19
    26cc:	84 1f       	adc	r24, r20
    26ce:	95 1f       	adc	r25, r21
    26d0:	a0 1d       	adc	r26, r0
    26d2:	08 95       	ret

000026d4 <__prologue_saves__>:
    26d4:	2f 92       	push	r2
    26d6:	3f 92       	push	r3
    26d8:	4f 92       	push	r4
    26da:	5f 92       	push	r5
    26dc:	6f 92       	push	r6
    26de:	7f 92       	push	r7
    26e0:	8f 92       	push	r8
    26e2:	9f 92       	push	r9
    26e4:	af 92       	push	r10
    26e6:	bf 92       	push	r11
    26e8:	cf 92       	push	r12
    26ea:	df 92       	push	r13
    26ec:	ef 92       	push	r14
    26ee:	ff 92       	push	r15
    26f0:	0f 93       	push	r16
    26f2:	1f 93       	push	r17
    26f4:	cf 93       	push	r28
    26f6:	df 93       	push	r29
    26f8:	cd b7       	in	r28, 0x3d	; 61
    26fa:	de b7       	in	r29, 0x3e	; 62
    26fc:	ca 1b       	sub	r28, r26
    26fe:	db 0b       	sbc	r29, r27
    2700:	0f b6       	in	r0, 0x3f	; 63
    2702:	f8 94       	cli
    2704:	de bf       	out	0x3e, r29	; 62
    2706:	0f be       	out	0x3f, r0	; 63
    2708:	cd bf       	out	0x3d, r28	; 61
    270a:	09 94       	ijmp

0000270c <__epilogue_restores__>:
    270c:	2a 88       	ldd	r2, Y+18	; 0x12
    270e:	39 88       	ldd	r3, Y+17	; 0x11
    2710:	48 88       	ldd	r4, Y+16	; 0x10
    2712:	5f 84       	ldd	r5, Y+15	; 0x0f
    2714:	6e 84       	ldd	r6, Y+14	; 0x0e
    2716:	7d 84       	ldd	r7, Y+13	; 0x0d
    2718:	8c 84       	ldd	r8, Y+12	; 0x0c
    271a:	9b 84       	ldd	r9, Y+11	; 0x0b
    271c:	aa 84       	ldd	r10, Y+10	; 0x0a
    271e:	b9 84       	ldd	r11, Y+9	; 0x09
    2720:	c8 84       	ldd	r12, Y+8	; 0x08
    2722:	df 80       	ldd	r13, Y+7	; 0x07
    2724:	ee 80       	ldd	r14, Y+6	; 0x06
    2726:	fd 80       	ldd	r15, Y+5	; 0x05
    2728:	0c 81       	ldd	r16, Y+4	; 0x04
    272a:	1b 81       	ldd	r17, Y+3	; 0x03
    272c:	aa 81       	ldd	r26, Y+2	; 0x02
    272e:	b9 81       	ldd	r27, Y+1	; 0x01
    2730:	ce 0f       	add	r28, r30
    2732:	d1 1d       	adc	r29, r1
    2734:	0f b6       	in	r0, 0x3f	; 63
    2736:	f8 94       	cli
    2738:	de bf       	out	0x3e, r29	; 62
    273a:	0f be       	out	0x3f, r0	; 63
    273c:	cd bf       	out	0x3d, r28	; 61
    273e:	ed 01       	movw	r28, r26
    2740:	08 95       	ret

00002742 <_exit>:
    2742:	f8 94       	cli

00002744 <__stop_program>:
    2744:	ff cf       	rjmp	.-2      	; 0x2744 <__stop_program>
